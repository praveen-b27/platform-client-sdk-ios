//
// ArchitectAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ArchitectAPI {
    
    /**
     Deletes a emergency group by ID
     
     - parameter emergencyGroupId: (path) Emergency group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectEmergencygroup(emergencyGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: emergencyGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes a emergency group by ID
     - DELETE /api/v2/architect/emergencygroups/{emergencyGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter emergencyGroupId: (path) Emergency group ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/emergencygroups/{emergencyGroupId}"
        let emergencyGroupIdPreEscape = "\(emergencyGroupId)"
        let emergencyGroupIdPostEscape = emergencyGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{emergencyGroupId}", with: emergencyGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete an IVR Config.
     
     - parameter ivrId: (path) IVR id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectIvr(ivrId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectIvrWithRequestBuilder(ivrId: ivrId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete an IVR Config.
     - DELETE /api/v2/architect/ivrs/{ivrId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter ivrId: (path) IVR id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectIvrWithRequestBuilder(ivrId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/ivrs/{ivrId}"
        let ivrIdPreEscape = "\(ivrId)"
        let ivrIdPostEscape = ivrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ivrId}", with: ivrIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete specified user prompt
     
     - parameter promptId: (path) Prompt ID 
     - parameter allResources: (query) Whether or not to delete all the prompt resources (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectPrompt(promptId: String, allResources: Bool? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectPromptWithRequestBuilder(promptId: promptId, allResources: allResources)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete specified user prompt
     - DELETE /api/v2/architect/prompts/{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter promptId: (path) Prompt ID 
     - parameter allResources: (query) Whether or not to delete all the prompt resources (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectPromptWithRequestBuilder(promptId: String, allResources: Bool? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/prompts/{promptId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "allResources": allResources
        ])

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete specified user prompt resource
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectPromptResource(promptId: String, languageCode: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectPromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete specified user prompt resource
     - DELETE /api/v2/architect/prompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectPromptResourceWithRequestBuilder(promptId: String, languageCode: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete specified user prompt resource audio
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectPromptResourceAudio(promptId: String, languageCode: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectPromptResourceAudioWithRequestBuilder(promptId: promptId, languageCode: languageCode)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete specified user prompt resource audio
     - DELETE /api/v2/architect/prompts/{promptId}/resources/{languageCode}/audio
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectPromptResourceAudioWithRequestBuilder(promptId: String, languageCode: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources/{languageCode}/audio"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Batch-delete a list of prompts
     
     - parameter _id: (query) List of Prompt IDs 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectPrompts(_id: [String], completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectPromptsWithRequestBuilder(_id: _id)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Batch-delete a list of prompts
     - DELETE /api/v2/architect/prompts
     - Multiple IDs can be specified, in which case all specified prompts will be deleted.  Asynchronous.  Notification topic: v2.architect.prompts.{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter _id: (query) List of Prompt IDs 

     - returns: RequestBuilder<Operation> 
     */
    open class func deleteArchitectPromptsWithRequestBuilder(_id: [String]) -> RequestBuilder<Operation> {        
        let path = "/api/v2/architect/prompts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id
        ])

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete a schedule by id
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectSchedule(scheduleId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectScheduleWithRequestBuilder(scheduleId: scheduleId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a schedule by id
     - DELETE /api/v2/architect/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectScheduleWithRequestBuilder(scheduleId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/schedules/{scheduleId}"
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Deletes a schedule group by ID
     
     - parameter scheduleGroupId: (path) Schedule group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectSchedulegroup(scheduleGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: scheduleGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes a schedule group by ID
     - DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter scheduleGroupId: (path) Schedule group ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/schedulegroups/{scheduleGroupId}"
        let scheduleGroupIdPreEscape = "\(scheduleGroupId)"
        let scheduleGroupIdPostEscape = scheduleGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleGroupId}", with: scheduleGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a system prompt resource override.
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteArchitectSystempromptResource(promptId: String, languageCode: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteArchitectSystempromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a system prompt resource override.
     - DELETE /api/v2/architect/systemprompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteArchitectSystempromptResourceWithRequestBuilder(promptId: String, languageCode: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete flow
     
     - parameter flowId: (path) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteFlow(flowId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteFlowWithRequestBuilder(flowId: flowId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete flow
     - DELETE /api/v2/flows/{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter flowId: (path) Flow ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteFlowWithRequestBuilder(flowId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/flows/{flowId}"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Batch-delete a list of flows
     
     - parameter _id: (query) List of Flow IDs 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteFlows(_id: [String], completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteFlowsWithRequestBuilder(_id: _id)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Batch-delete a list of flows
     - DELETE /api/v2/flows
     - Multiple IDs can be specified, in which case all specified flows will be deleted.  Asynchronous.  Notification topic: v2.flows.{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter _id: (query) List of Flow IDs 

     - returns: RequestBuilder<Operation> 
     */
    open class func deleteFlowsWithRequestBuilder(_id: [String]) -> RequestBuilder<Operation> {        
        let path = "/api/v2/flows"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id
        ])

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     deletes a specific datatable by id
     
     - parameter datatableId: (path) id of datatable 
     - parameter force: (query) force delete, even if in use (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteFlowsDatatable(datatableId: String, force: Bool? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteFlowsDatatableWithRequestBuilder(datatableId: datatableId, force: force)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     deletes a specific datatable by id
     - DELETE /api/v2/flows/datatables/{datatableId}
     - Deletes an entire datatable (including the schema and data) with a given datatableId
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter datatableId: (path) id of datatable 
     - parameter force: (query) force delete, even if in use (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteFlowsDatatableWithRequestBuilder(datatableId: String, force: Bool? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/flows/datatables/{datatableId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "force": force
        ])

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a row entry
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) the key for the row 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteFlowsDatatableRow(datatableId: String, rowId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteFlowsDatatableRowWithRequestBuilder(datatableId: datatableId, rowId: rowId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a row entry
     - DELETE /api/v2/flows/datatables/{datatableId}/rows/{rowId}
     - Deletes a row with a given rowId (the value of the key field).
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) the key for the row 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteFlowsDatatableRowWithRequestBuilder(datatableId: String, rowId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/flows/datatables/{datatableId}/rows/{rowId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let rowIdPreEscape = "\(rowId)"
        let rowIdPostEscape = rowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rowId}", with: rowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete a flow milestone.
     
     - parameter milestoneId: (path) flow milestone ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteFlowsMilestone(milestoneId: String, completion: @escaping ((_ data: JSON?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteFlowsMilestoneWithRequestBuilder(milestoneId: milestoneId)
        requestBuilder.execute { (response: Response<JSON>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a flow milestone.
     - DELETE /api/v2/flows/milestones/{milestoneId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter milestoneId: (path) flow milestone ID 

     - returns: RequestBuilder<JSON> 
     */
    open class func deleteFlowsMilestoneWithRequestBuilder(milestoneId: String) -> RequestBuilder<JSON> {        
        var path = "/api/v2/flows/milestones/{milestoneId}"
        let milestoneIdPreEscape = "\(milestoneId)"
        let milestoneIdPostEscape = milestoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{milestoneId}", with: milestoneIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSON>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    /**
     Get Dependency Tracking objects that have a given display name
     
     - parameter name: (query) Object name to search for 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter consumedResources: (query) Include resources each result item consumes (optional)
     - parameter consumingResources: (query) Include resources that consume each result item (optional)
     - parameter consumedResourceType: (query) Types of consumed resources to return, if consumed resources are requested (optional)
     - parameter consumingResourceType: (query) Types of consuming resources to return, if consuming resources are requested (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytracking(name: String, pageNumber: Int? = nil, pageSize: Int? = nil, objectType: [String]? = nil, consumedResources: Bool? = nil, consumingResources: Bool? = nil, consumedResourceType: [String]? = nil, consumingResourceType: [String]? = nil, completion: @escaping ((_ data: DependencyObjectEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingWithRequestBuilder(name: name, pageNumber: pageNumber, pageSize: pageSize, objectType: objectType, consumedResources: consumedResources, consumingResources: consumingResources, consumedResourceType: consumedResourceType, consumingResourceType: consumingResourceType)
        requestBuilder.execute { (response: Response<DependencyObjectEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Dependency Tracking objects that have a given display name
     - GET /api/v2/architect/dependencytracking
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter name: (query) Object name to search for 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter consumedResources: (query) Include resources each result item consumes (optional)
     - parameter consumingResources: (query) Include resources that consume each result item (optional)
     - parameter consumedResourceType: (query) Types of consumed resources to return, if consumed resources are requested (optional)
     - parameter consumingResourceType: (query) Types of consuming resources to return, if consuming resources are requested (optional)

     - returns: RequestBuilder<DependencyObjectEntityListing> 
     */
    open class func getArchitectDependencytrackingWithRequestBuilder(name: String, pageNumber: Int? = nil, pageSize: Int? = nil, objectType: [String]? = nil, consumedResources: Bool? = nil, consumingResources: Bool? = nil, consumedResourceType: [String]? = nil, consumingResourceType: [String]? = nil) -> RequestBuilder<DependencyObjectEntityListing> {        
        let path = "/api/v2/architect/dependencytracking"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "name": name, 
            "objectType": objectType, 
            "consumedResources": consumedResources, 
            "consumingResources": consumingResources, 
            "consumedResourceType": consumedResourceType, 
            "consumingResourceType": consumingResourceType
        ])

        let requestBuilder: RequestBuilder<DependencyObjectEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get Dependency Tracking build status for an organization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingBuild(completion: @escaping ((_ data: DependencyStatus?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingBuildWithRequestBuilder()
        requestBuilder.execute { (response: Response<DependencyStatus>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Dependency Tracking build status for an organization
     - GET /api/v2/architect/dependencytracking/build
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateStarted" : "2000-01-23T04:56:07.000+00:00",
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "client" : "{}",
  "failedObjects" : [ {
    "name" : "name",
    "errorCode" : "errorCode",
    "id" : "id",
    "version" : "version"
  }, {
    "name" : "name",
    "errorCode" : "errorCode",
    "id" : "id",
    "version" : "version"
  } ],
  "buildId" : "buildId",
  "id" : "id",
  "user" : "{}",
  "status" : "BUILDINITIALIZING"
}, statusCode=200}]

     - returns: RequestBuilder<DependencyStatus> 
     */
    open class func getArchitectDependencytrackingBuildWithRequestBuilder() -> RequestBuilder<DependencyStatus> {        
        let path = "/api/v2/architect/dependencytracking/build"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DependencyStatus>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum ObjectType_getArchitectDependencytrackingConsumedresources: String { 
        case acdlanguage = "ACDLANGUAGE"
        case acdskill = "ACDSKILL"
        case acdwrapupcode = "ACDWRAPUPCODE"
        case audioconnectorbot = "AUDIOCONNECTORBOT"
        case botconnectorbot = "BOTCONNECTORBOT"
        case botconnectorintegration = "BOTCONNECTORINTEGRATION"
        case botflow = "BOTFLOW"
        case bridgeaction = "BRIDGEACTION"
        case commonmoduleflow = "COMMONMODULEFLOW"
        case composerscript = "COMPOSERSCRIPT"
        case contactlist = "CONTACTLIST"
        case dataaction = "DATAACTION"
        case datatable = "DATATABLE"
        case dialogenginebot = "DIALOGENGINEBOT"
        case dialogenginebotversion = "DIALOGENGINEBOTVERSION"
        case dialogflowagent = "DIALOGFLOWAGENT"
        case dialogflowcxagent = "DIALOGFLOWCXAGENT"
        case digitalbotflow = "DIGITALBOTFLOW"
        case emailroute = "EMAILROUTE"
        case emergencygroup = "EMERGENCYGROUP"
        case flowaction = "FLOWACTION"
        case flowdatatype = "FLOWDATATYPE"
        case flowmilestone = "FLOWMILESTONE"
        case flowoutcome = "FLOWOUTCOME"
        case grammar = "GRAMMAR"
        case group = "GROUP"
        case image = "IMAGE"
        case inboundcallflow = "INBOUNDCALLFLOW"
        case inboundchatflow = "INBOUNDCHATFLOW"
        case inboundemailflow = "INBOUNDEMAILFLOW"
        case inboundshortmessageflow = "INBOUNDSHORTMESSAGEFLOW"
        case inqueuecallflow = "INQUEUECALLFLOW"
        case inqueueemailflow = "INQUEUEEMAILFLOW"
        case inqueueshortmessageflow = "INQUEUESHORTMESSAGEFLOW"
        case ivrconfiguration = "IVRCONFIGURATION"
        case knowledgebase = "KNOWLEDGEBASE"
        case knowledgebasedocument = "KNOWLEDGEBASEDOCUMENT"
        case language = "LANGUAGE"
        case lexbot = "LEXBOT"
        case lexbotalias = "LEXBOTALIAS"
        case lexv2bot = "LEXV2BOT"
        case lexv2botalias = "LEXV2BOTALIAS"
        case nludomain = "NLUDOMAIN"
        case nuancemixbot = "NUANCEMIXBOT"
        case nuancemixintegration = "NUANCEMIXINTEGRATION"
        case oauthclient = "OAUTHCLIENT"
        case outboundcallflow = "OUTBOUNDCALLFLOW"
        case queue = "QUEUE"
        case recordingpolicy = "RECORDINGPOLICY"
        case response = "RESPONSE"
        case schedule = "SCHEDULE"
        case schedulegroup = "SCHEDULEGROUP"
        case secureaction = "SECUREACTION"
        case securecallflow = "SECURECALLFLOW"
        case sttengine = "STTENGINE"
        case surveyinviteflow = "SURVEYINVITEFLOW"
        case systemprompt = "SYSTEMPROMPT"
        case ttsengine = "TTSENGINE"
        case ttsvoice = "TTSVOICE"
        case user = "USER"
        case userprompt = "USERPROMPT"
        case utilizationlabel = "UTILIZATIONLABEL"
        case voiceflow = "VOICEFLOW"
        case voicemailflow = "VOICEMAILFLOW"
        case voicesurveyflow = "VOICESURVEYFLOW"
        case widget = "WIDGET"
        case workflow = "WORKFLOW"
        case workitemflow = "WORKITEMFLOW"
    }

    
    
    
    
    /**
     Get resources that are consumed by a given Dependency Tracking object
     
     - parameter _id: (query) Consuming object ID 
     - parameter version: (query) Consuming object version 
     - parameter objectType: (query) Consuming object type.  Only versioned types are allowed here. 
     - parameter resourceType: (query) Types of consumed resources to show (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingConsumedresources(_id: String, version: String, objectType: ObjectType_getArchitectDependencytrackingConsumedresources, resourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: ConsumedResourcesEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingConsumedresourcesWithRequestBuilder(_id: _id, version: version, objectType: objectType, resourceType: resourceType, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<ConsumedResourcesEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get resources that are consumed by a given Dependency Tracking object
     - GET /api/v2/architect/dependencytracking/consumedresources
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter _id: (query) Consuming object ID 
     - parameter version: (query) Consuming object version 
     - parameter objectType: (query) Consuming object type.  Only versioned types are allowed here. 
     - parameter resourceType: (query) Types of consumed resources to show (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<ConsumedResourcesEntityListing> 
     */
    open class func getArchitectDependencytrackingConsumedresourcesWithRequestBuilder(_id: String, version: String, objectType: ObjectType_getArchitectDependencytrackingConsumedresources, resourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<ConsumedResourcesEntityListing> {        
        let path = "/api/v2/architect/dependencytracking/consumedresources"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "version": version, 
            "objectType": objectType.rawValue, 
            "resourceType": resourceType, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ConsumedResourcesEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum ObjectType_getArchitectDependencytrackingConsumingresources: String { 
        case acdlanguage = "ACDLANGUAGE"
        case acdskill = "ACDSKILL"
        case acdwrapupcode = "ACDWRAPUPCODE"
        case audioconnectorbot = "AUDIOCONNECTORBOT"
        case botconnectorbot = "BOTCONNECTORBOT"
        case botconnectorintegration = "BOTCONNECTORINTEGRATION"
        case botflow = "BOTFLOW"
        case bridgeaction = "BRIDGEACTION"
        case commonmoduleflow = "COMMONMODULEFLOW"
        case composerscript = "COMPOSERSCRIPT"
        case contactlist = "CONTACTLIST"
        case dataaction = "DATAACTION"
        case datatable = "DATATABLE"
        case dialogenginebot = "DIALOGENGINEBOT"
        case dialogenginebotversion = "DIALOGENGINEBOTVERSION"
        case dialogflowagent = "DIALOGFLOWAGENT"
        case dialogflowcxagent = "DIALOGFLOWCXAGENT"
        case digitalbotflow = "DIGITALBOTFLOW"
        case emailroute = "EMAILROUTE"
        case emergencygroup = "EMERGENCYGROUP"
        case flowaction = "FLOWACTION"
        case flowdatatype = "FLOWDATATYPE"
        case flowmilestone = "FLOWMILESTONE"
        case flowoutcome = "FLOWOUTCOME"
        case grammar = "GRAMMAR"
        case group = "GROUP"
        case image = "IMAGE"
        case inboundcallflow = "INBOUNDCALLFLOW"
        case inboundchatflow = "INBOUNDCHATFLOW"
        case inboundemailflow = "INBOUNDEMAILFLOW"
        case inboundshortmessageflow = "INBOUNDSHORTMESSAGEFLOW"
        case inqueuecallflow = "INQUEUECALLFLOW"
        case inqueueemailflow = "INQUEUEEMAILFLOW"
        case inqueueshortmessageflow = "INQUEUESHORTMESSAGEFLOW"
        case ivrconfiguration = "IVRCONFIGURATION"
        case knowledgebase = "KNOWLEDGEBASE"
        case knowledgebasedocument = "KNOWLEDGEBASEDOCUMENT"
        case language = "LANGUAGE"
        case lexbot = "LEXBOT"
        case lexbotalias = "LEXBOTALIAS"
        case lexv2bot = "LEXV2BOT"
        case lexv2botalias = "LEXV2BOTALIAS"
        case nludomain = "NLUDOMAIN"
        case nuancemixbot = "NUANCEMIXBOT"
        case nuancemixintegration = "NUANCEMIXINTEGRATION"
        case oauthclient = "OAUTHCLIENT"
        case outboundcallflow = "OUTBOUNDCALLFLOW"
        case queue = "QUEUE"
        case recordingpolicy = "RECORDINGPOLICY"
        case response = "RESPONSE"
        case schedule = "SCHEDULE"
        case schedulegroup = "SCHEDULEGROUP"
        case secureaction = "SECUREACTION"
        case securecallflow = "SECURECALLFLOW"
        case sttengine = "STTENGINE"
        case surveyinviteflow = "SURVEYINVITEFLOW"
        case systemprompt = "SYSTEMPROMPT"
        case ttsengine = "TTSENGINE"
        case ttsvoice = "TTSVOICE"
        case user = "USER"
        case userprompt = "USERPROMPT"
        case utilizationlabel = "UTILIZATIONLABEL"
        case voiceflow = "VOICEFLOW"
        case voicemailflow = "VOICEMAILFLOW"
        case voicesurveyflow = "VOICESURVEYFLOW"
        case widget = "WIDGET"
        case workflow = "WORKFLOW"
        case workitemflow = "WORKITEMFLOW"
    }

    
    
    
    
    
    
    public enum FlowFilter_getArchitectDependencytrackingConsumingresources: String { 
        case checkedin = "checkedIn"
        case published = "published"
    }

    
    /**
     Get resources that consume a given Dependency Tracking object
     
     - parameter _id: (query) Consumed object ID 
     - parameter objectType: (query) Consumed object type 
     - parameter resourceType: (query) Types of consuming resources to show.  Only versioned types are allowed here. (optional)
     - parameter version: (query) Object version (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter flowFilter: (query) Show only checkedIn or published flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingConsumingresources(_id: String, objectType: ObjectType_getArchitectDependencytrackingConsumingresources, resourceType: [String]? = nil, version: String? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, flowFilter: FlowFilter_getArchitectDependencytrackingConsumingresources? = nil, completion: @escaping ((_ data: ConsumingResourcesEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingConsumingresourcesWithRequestBuilder(_id: _id, objectType: objectType, resourceType: resourceType, version: version, pageNumber: pageNumber, pageSize: pageSize, flowFilter: flowFilter)
        requestBuilder.execute { (response: Response<ConsumingResourcesEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get resources that consume a given Dependency Tracking object
     - GET /api/v2/architect/dependencytracking/consumingresources
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter _id: (query) Consumed object ID 
     - parameter objectType: (query) Consumed object type 
     - parameter resourceType: (query) Types of consuming resources to show.  Only versioned types are allowed here. (optional)
     - parameter version: (query) Object version (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter flowFilter: (query) Show only checkedIn or published flows (optional)

     - returns: RequestBuilder<ConsumingResourcesEntityListing> 
     */
    open class func getArchitectDependencytrackingConsumingresourcesWithRequestBuilder(_id: String, objectType: ObjectType_getArchitectDependencytrackingConsumingresources, resourceType: [String]? = nil, version: String? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, flowFilter: FlowFilter_getArchitectDependencytrackingConsumingresources? = nil) -> RequestBuilder<ConsumingResourcesEntityListing> {        
        let path = "/api/v2/architect/dependencytracking/consumingresources"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "objectType": objectType.rawValue, 
            "resourceType": resourceType, 
            "version": version, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "flowFilter": flowFilter?.rawValue
        ])

        let requestBuilder: RequestBuilder<ConsumingResourcesEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum FlowFilter_getArchitectDependencytrackingDeletedresourceconsumers: String { 
        case checkedin = "checkedIn"
        case published = "published"
    }

    
    
    
    
    
    /**
     Get Dependency Tracking objects that consume deleted resources
     
     - parameter name: (query) Name to search for (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter flowFilter: (query) Show only checkedIn or published flows (optional)
     - parameter consumedResources: (query) Return consumed resources? (optional)
     - parameter consumedResourceType: (query) Resource type(s) to return (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingDeletedresourceconsumers(name: String? = nil, objectType: [String]? = nil, flowFilter: FlowFilter_getArchitectDependencytrackingDeletedresourceconsumers? = nil, consumedResources: Bool? = nil, consumedResourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: DependencyObjectEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingDeletedresourceconsumersWithRequestBuilder(name: name, objectType: objectType, flowFilter: flowFilter, consumedResources: consumedResources, consumedResourceType: consumedResourceType, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<DependencyObjectEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Dependency Tracking objects that consume deleted resources
     - GET /api/v2/architect/dependencytracking/deletedresourceconsumers
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter name: (query) Name to search for (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter flowFilter: (query) Show only checkedIn or published flows (optional)
     - parameter consumedResources: (query) Return consumed resources? (optional)
     - parameter consumedResourceType: (query) Resource type(s) to return (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<DependencyObjectEntityListing> 
     */
    open class func getArchitectDependencytrackingDeletedresourceconsumersWithRequestBuilder(name: String? = nil, objectType: [String]? = nil, flowFilter: FlowFilter_getArchitectDependencytrackingDeletedresourceconsumers? = nil, consumedResources: Bool? = nil, consumedResourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<DependencyObjectEntityListing> {        
        let path = "/api/v2/architect/dependencytracking/deletedresourceconsumers"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": name, 
            "objectType": objectType, 
            "flowFilter": flowFilter?.rawValue, 
            "consumedResources": consumedResources, 
            "consumedResourceType": consumedResourceType, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DependencyObjectEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum ObjectType_getArchitectDependencytrackingObject: String { 
        case acdlanguage = "ACDLANGUAGE"
        case acdskill = "ACDSKILL"
        case acdwrapupcode = "ACDWRAPUPCODE"
        case audioconnectorbot = "AUDIOCONNECTORBOT"
        case botconnectorbot = "BOTCONNECTORBOT"
        case botconnectorintegration = "BOTCONNECTORINTEGRATION"
        case botflow = "BOTFLOW"
        case bridgeaction = "BRIDGEACTION"
        case commonmoduleflow = "COMMONMODULEFLOW"
        case composerscript = "COMPOSERSCRIPT"
        case contactlist = "CONTACTLIST"
        case dataaction = "DATAACTION"
        case datatable = "DATATABLE"
        case dialogenginebot = "DIALOGENGINEBOT"
        case dialogenginebotversion = "DIALOGENGINEBOTVERSION"
        case dialogflowagent = "DIALOGFLOWAGENT"
        case dialogflowcxagent = "DIALOGFLOWCXAGENT"
        case digitalbotflow = "DIGITALBOTFLOW"
        case emailroute = "EMAILROUTE"
        case emergencygroup = "EMERGENCYGROUP"
        case flowaction = "FLOWACTION"
        case flowdatatype = "FLOWDATATYPE"
        case flowmilestone = "FLOWMILESTONE"
        case flowoutcome = "FLOWOUTCOME"
        case grammar = "GRAMMAR"
        case group = "GROUP"
        case image = "IMAGE"
        case inboundcallflow = "INBOUNDCALLFLOW"
        case inboundchatflow = "INBOUNDCHATFLOW"
        case inboundemailflow = "INBOUNDEMAILFLOW"
        case inboundshortmessageflow = "INBOUNDSHORTMESSAGEFLOW"
        case inqueuecallflow = "INQUEUECALLFLOW"
        case inqueueemailflow = "INQUEUEEMAILFLOW"
        case inqueueshortmessageflow = "INQUEUESHORTMESSAGEFLOW"
        case ivrconfiguration = "IVRCONFIGURATION"
        case knowledgebase = "KNOWLEDGEBASE"
        case knowledgebasedocument = "KNOWLEDGEBASEDOCUMENT"
        case language = "LANGUAGE"
        case lexbot = "LEXBOT"
        case lexbotalias = "LEXBOTALIAS"
        case lexv2bot = "LEXV2BOT"
        case lexv2botalias = "LEXV2BOTALIAS"
        case nludomain = "NLUDOMAIN"
        case nuancemixbot = "NUANCEMIXBOT"
        case nuancemixintegration = "NUANCEMIXINTEGRATION"
        case oauthclient = "OAUTHCLIENT"
        case outboundcallflow = "OUTBOUNDCALLFLOW"
        case queue = "QUEUE"
        case recordingpolicy = "RECORDINGPOLICY"
        case response = "RESPONSE"
        case schedule = "SCHEDULE"
        case schedulegroup = "SCHEDULEGROUP"
        case secureaction = "SECUREACTION"
        case securecallflow = "SECURECALLFLOW"
        case sttengine = "STTENGINE"
        case surveyinviteflow = "SURVEYINVITEFLOW"
        case systemprompt = "SYSTEMPROMPT"
        case ttsengine = "TTSENGINE"
        case ttsvoice = "TTSVOICE"
        case user = "USER"
        case userprompt = "USERPROMPT"
        case utilizationlabel = "UTILIZATIONLABEL"
        case voiceflow = "VOICEFLOW"
        case voicemailflow = "VOICEMAILFLOW"
        case voicesurveyflow = "VOICESURVEYFLOW"
        case widget = "WIDGET"
        case workflow = "WORKFLOW"
        case workitemflow = "WORKITEMFLOW"
    }

    
    
    
    
    
    
    /**
     Get a Dependency Tracking object
     
     - parameter _id: (query) Object ID 
     - parameter version: (query) Object version (optional)
     - parameter objectType: (query) Object type (optional)
     - parameter consumedResources: (query) Include resources this item consumes (optional)
     - parameter consumingResources: (query) Include resources that consume this item (optional)
     - parameter consumedResourceType: (query) Types of consumed resources to return, if consumed resources are requested (optional)
     - parameter consumingResourceType: (query) Types of consuming resources to return, if consuming resources are requested (optional)
     - parameter consumedResourceRequest: (query) Indicate that this is going to look up a consumed resource object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingObject(_id: String, version: String? = nil, objectType: ObjectType_getArchitectDependencytrackingObject? = nil, consumedResources: Bool? = nil, consumingResources: Bool? = nil, consumedResourceType: [String]? = nil, consumingResourceType: [String]? = nil, consumedResourceRequest: Bool? = nil, completion: @escaping ((_ data: DependencyObject?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingObjectWithRequestBuilder(_id: _id, version: version, objectType: objectType, consumedResources: consumedResources, consumingResources: consumingResources, consumedResourceType: consumedResourceType, consumingResourceType: consumingResourceType, consumedResourceRequest: consumedResourceRequest)
        requestBuilder.execute { (response: Response<DependencyObject>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a Dependency Tracking object
     - GET /api/v2/architect/dependencytracking/object
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "stateUnknown" : true,
  "deleted" : true,
  "consumedResources" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "type" : "ACDLANGUAGE",
  "version" : "version",
  "updated" : true,
  "consumingResources" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true
  } ]
}, statusCode=200}]
     
     - parameter _id: (query) Object ID 
     - parameter version: (query) Object version (optional)
     - parameter objectType: (query) Object type (optional)
     - parameter consumedResources: (query) Include resources this item consumes (optional)
     - parameter consumingResources: (query) Include resources that consume this item (optional)
     - parameter consumedResourceType: (query) Types of consumed resources to return, if consumed resources are requested (optional)
     - parameter consumingResourceType: (query) Types of consuming resources to return, if consuming resources are requested (optional)
     - parameter consumedResourceRequest: (query) Indicate that this is going to look up a consumed resource object (optional)

     - returns: RequestBuilder<DependencyObject> 
     */
    open class func getArchitectDependencytrackingObjectWithRequestBuilder(_id: String, version: String? = nil, objectType: ObjectType_getArchitectDependencytrackingObject? = nil, consumedResources: Bool? = nil, consumingResources: Bool? = nil, consumedResourceType: [String]? = nil, consumingResourceType: [String]? = nil, consumedResourceRequest: Bool? = nil) -> RequestBuilder<DependencyObject> {        
        let path = "/api/v2/architect/dependencytracking/object"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "version": version, 
            "objectType": objectType?.rawValue, 
            "consumedResources": consumedResources, 
            "consumingResources": consumingResources, 
            "consumedResourceType": consumedResourceType, 
            "consumingResourceType": consumingResourceType, 
            "consumedResourceRequest": consumedResourceRequest
        ])

        let requestBuilder: RequestBuilder<DependencyObject>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a Dependency Tracking type.
     
     - parameter typeId: (path) Type ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingType(typeId: String, completion: @escaping ((_ data: DependencyType?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingTypeWithRequestBuilder(typeId: typeId)
        requestBuilder.execute { (response: Response<DependencyType>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a Dependency Tracking type.
     - GET /api/v2/architect/dependencytracking/types/{typeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "versioned" : true,
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id"
}, statusCode=200}]
     
     - parameter typeId: (path) Type ID 

     - returns: RequestBuilder<DependencyType> 
     */
    open class func getArchitectDependencytrackingTypeWithRequestBuilder(typeId: String) -> RequestBuilder<DependencyType> {        
        var path = "/api/v2/architect/dependencytracking/types/{typeId}"
        let typeIdPreEscape = "\(typeId)"
        let typeIdPostEscape = typeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{typeId}", with: typeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DependencyType>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Dependency Tracking types.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingTypes(pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: DependencyTypeEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingTypesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<DependencyTypeEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Dependency Tracking types.
     - GET /api/v2/architect/dependencytracking/types
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "versioned" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "versioned" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<DependencyTypeEntityListing> 
     */
    open class func getArchitectDependencytrackingTypesWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<DependencyTypeEntityListing> {        
        let path = "/api/v2/architect/dependencytracking/types"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DependencyTypeEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    /**
     Get Dependency Tracking objects that depend on updated resources
     
     - parameter name: (query) Name to search for (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter consumedResources: (query) Return consumed resources? (optional)
     - parameter consumedResourceType: (query) Resource type(s) to return (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectDependencytrackingUpdatedresourceconsumers(name: String? = nil, objectType: [String]? = nil, consumedResources: Bool? = nil, consumedResourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: DependencyObjectEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectDependencytrackingUpdatedresourceconsumersWithRequestBuilder(name: name, objectType: objectType, consumedResources: consumedResources, consumedResourceType: consumedResourceType, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<DependencyObjectEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Dependency Tracking objects that depend on updated resources
     - GET /api/v2/architect/dependencytracking/updatedresourceconsumers
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  }, {
    "stateUnknown" : true,
    "deleted" : true,
    "consumedResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "type" : "ACDLANGUAGE",
    "version" : "version",
    "updated" : true,
    "consumingResources" : [ {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    }, {
      "stateUnknown" : true,
      "deleted" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "ACDLANGUAGE",
      "version" : "version",
      "updated" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter name: (query) Name to search for (optional)
     - parameter objectType: (query) Object type(s) to search for (optional)
     - parameter consumedResources: (query) Return consumed resources? (optional)
     - parameter consumedResourceType: (query) Resource type(s) to return (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<DependencyObjectEntityListing> 
     */
    open class func getArchitectDependencytrackingUpdatedresourceconsumersWithRequestBuilder(name: String? = nil, objectType: [String]? = nil, consumedResources: Bool? = nil, consumedResourceType: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<DependencyObjectEntityListing> {        
        let path = "/api/v2/architect/dependencytracking/updatedresourceconsumers"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": name, 
            "objectType": objectType, 
            "consumedResources": consumedResources, 
            "consumedResourceType": consumedResourceType, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DependencyObjectEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets a emergency group by ID
     
     - parameter emergencyGroupId: (path) Emergency group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectEmergencygroup(emergencyGroupId: String, completion: @escaping ((_ data: EmergencyGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: emergencyGroupId)
        requestBuilder.execute { (response: Response<EmergencyGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a emergency group by ID
     - GET /api/v2/architect/emergencygroups/{emergencyGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "enabled" : true,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "emergencyCallFlows" : [ {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  }, {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  } ],
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter emergencyGroupId: (path) Emergency group ID 

     - returns: RequestBuilder<EmergencyGroup> 
     */
    open class func getArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: String) -> RequestBuilder<EmergencyGroup> {        
        var path = "/api/v2/architect/emergencygroups/{emergencyGroupId}"
        let emergencyGroupIdPreEscape = "\(emergencyGroupId)"
        let emergencyGroupIdPostEscape = emergencyGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{emergencyGroupId}", with: emergencyGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EmergencyGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get a list of emergency groups.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Emergency Group to filter by. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectEmergencygroups(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, completion: @escaping ((_ data: EmergencyGroupListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectEmergencygroupsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, name: name)
        requestBuilder.execute { (response: Response<EmergencyGroupListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of emergency groups.
     - GET /api/v2/architect/emergencygroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "enabled" : true,
    "division" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "emergencyCallFlows" : [ {
      "emergencyFlow" : "{}",
      "ivrs" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      } ]
    }, {
      "emergencyFlow" : "{}",
      "ivrs" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      } ]
    } ],
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "enabled" : true,
    "division" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "emergencyCallFlows" : [ {
      "emergencyFlow" : "{}",
      "ivrs" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      } ]
    }, {
      "emergencyFlow" : "{}",
      "ivrs" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      } ]
    } ],
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Emergency Group to filter by. (optional)

     - returns: RequestBuilder<EmergencyGroupListing> 
     */
    open class func getArchitectEmergencygroupsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil) -> RequestBuilder<EmergencyGroupListing> {        
        let path = "/api/v2/architect/emergencygroups"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "name": name
        ])

        let requestBuilder: RequestBuilder<EmergencyGroupListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic emergency group objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the Emergency Groups to filter by. (optional)
     - parameter name: (query) Name of the Emergency Group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectEmergencygroupsDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: EmergencyGroupDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectEmergencygroupsDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<EmergencyGroupDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic emergency group objects filterable by query parameters.
     - GET /api/v2/architect/emergencygroups/divisionviews
     - This returns emergency groups consisting of name and division. If one or more IDs are specified, the search will fetch flow outcomes that match the given ID(s) and not use any additional supplied query parameters in the search.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the Emergency Groups to filter by. (optional)
     - parameter name: (query) Name of the Emergency Group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<EmergencyGroupDivisionViewEntityListing> 
     */
    open class func getArchitectEmergencygroupsDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<EmergencyGroupDivisionViewEntityListing> {        
        let path = "/api/v2/architect/emergencygroups/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<EmergencyGroupDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get an IVR config.
     
     - parameter ivrId: (path) IVR id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectIvr(ivrId: String, completion: @escaping ((_ data: IVR?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectIvrWithRequestBuilder(ivrId: ivrId)
        requestBuilder.execute { (response: Response<IVR>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an IVR config.
     - GET /api/v2/architect/ivrs/{ivrId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "scheduleGroup" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "holidayHoursFlow" : "{}",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "openHoursFlow" : "{}",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "dnis" : [ "dnis", "dnis" ],
  "closedHoursFlow" : "{}"
}, statusCode=200}]
     
     - parameter ivrId: (path) IVR id 

     - returns: RequestBuilder<IVR> 
     */
    open class func getArchitectIvrWithRequestBuilder(ivrId: String) -> RequestBuilder<IVR> {        
        var path = "/api/v2/architect/ivrs/{ivrId}"
        let ivrIdPreEscape = "\(ivrId)"
        let ivrIdPostEscape = ivrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ivrId}", with: ivrIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<IVR>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get IVR configs.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the IVR to filter by. (optional)
     - parameter dnis: (query) The phone number of the IVR to filter by. (optional)
     - parameter scheduleGroup: (query) The Schedule Group of the IVR to filter by. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectIvrs(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, dnis: String? = nil, scheduleGroup: String? = nil, completion: @escaping ((_ data: IVREntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectIvrsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, name: name, dnis: dnis, scheduleGroup: scheduleGroup)
        requestBuilder.execute { (response: Response<IVREntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get IVR configs.
     - GET /api/v2/architect/ivrs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "scheduleGroup" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "holidayHoursFlow" : "{}",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "openHoursFlow" : "{}",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active",
    "dnis" : [ "dnis", "dnis" ],
    "closedHoursFlow" : "{}"
  }, {
    "scheduleGroup" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "holidayHoursFlow" : "{}",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "openHoursFlow" : "{}",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active",
    "dnis" : [ "dnis", "dnis" ],
    "closedHoursFlow" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the IVR to filter by. (optional)
     - parameter dnis: (query) The phone number of the IVR to filter by. (optional)
     - parameter scheduleGroup: (query) The Schedule Group of the IVR to filter by. (optional)

     - returns: RequestBuilder<IVREntityListing> 
     */
    open class func getArchitectIvrsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, dnis: String? = nil, scheduleGroup: String? = nil) -> RequestBuilder<IVREntityListing> {        
        let path = "/api/v2/architect/ivrs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "name": name, 
            "dnis": dnis, 
            "scheduleGroup": scheduleGroup
        ])

        let requestBuilder: RequestBuilder<IVREntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic ivr configuration information objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the IVR to filter by. (optional)
     - parameter name: (query) Name of the IVR to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectIvrsDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: IVRDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectIvrsDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<IVRDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic ivr configuration information objects filterable by query parameters.
     - GET /api/v2/architect/ivrs/divisionviews
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the IVR to filter by. (optional)
     - parameter name: (query) Name of the IVR to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<IVRDivisionViewEntityListing> 
     */
    open class func getArchitectIvrsDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<IVRDivisionViewEntityListing> {        
        let path = "/api/v2/architect/ivrs/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<IVRDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get specified user prompt
     
     - parameter promptId: (path) Prompt ID 
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectPrompt(promptId: String, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil, completion: @escaping ((_ data: Prompt?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectPromptWithRequestBuilder(promptId: promptId, includeMediaUris: includeMediaUris, includeResources: includeResources, language: language)
        requestBuilder.execute { (response: Response<Prompt>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get specified user prompt
     - GET /api/v2/architect/prompts/{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "currentOperation" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "resources" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "id" : "id"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)

     - returns: RequestBuilder<Prompt> 
     */
    open class func getArchitectPromptWithRequestBuilder(promptId: String, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil) -> RequestBuilder<Prompt> {        
        var path = "/api/v2/architect/prompts/{promptId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeMediaUris": includeMediaUris, 
            "includeResources": includeResources, 
            "language": language
        ])

        let requestBuilder: RequestBuilder<Prompt>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum SortBy_getArchitectPromptHistoryHistoryId: String { 
        case action = "action"
        case timestamp = "timestamp"
        case user = "user"
    }

    
    
    /**
     Get generated prompt history
     
     - parameter promptId: (path) Prompt ID 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectPromptHistoryHistoryId(promptId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getArchitectPromptHistoryHistoryId? = nil, action: [String]? = nil, completion: @escaping ((_ data: HistoryListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectPromptHistoryHistoryIdWithRequestBuilder(promptId: promptId, historyId: historyId, pageNumber: pageNumber, pageSize: pageSize, sortOrder: sortOrder, sortBy: sortBy, action: action)
        requestBuilder.execute { (response: Response<HistoryListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get generated prompt history
     - GET /api/v2/architect/prompts/{promptId}/history/{historyId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "pageCount" : 5,
  "pageNumber" : 6,
  "errorMessage" : "errorMessage",
  "errorCode" : "errorCode",
  "description" : "description",
  "pageSize" : 0,
  "started" : "2000-01-23T04:56:07.000+00:00",
  "completed" : "2000-01-23T04:56:07.000+00:00",
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "total" : 1,
  "system" : true,
  "actionStatus" : "LOCKED",
  "entities" : [ {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  } ],
  "name" : "name",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)

     - returns: RequestBuilder<HistoryListing> 
     */
    open class func getArchitectPromptHistoryHistoryIdWithRequestBuilder(promptId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getArchitectPromptHistoryHistoryId? = nil, action: [String]? = nil) -> RequestBuilder<HistoryListing> {        
        var path = "/api/v2/architect/prompts/{promptId}/history/{historyId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let historyIdPreEscape = "\(historyId)"
        let historyIdPostEscape = historyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{historyId}", with: historyIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortOrder": sortOrder, 
            "sortBy": sortBy?.rawValue, 
            "action": action
        ])

        let requestBuilder: RequestBuilder<HistoryListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get specified user prompt resource
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectPromptResource(promptId: String, languageCode: String, completion: @escaping ((_ data: PromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectPromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode)
        requestBuilder.execute { (response: Response<PromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get specified user prompt resource
     - GET /api/v2/architect/prompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 

     - returns: RequestBuilder<PromptAsset> 
     */
    open class func getArchitectPromptResourceWithRequestBuilder(promptId: String, languageCode: String) -> RequestBuilder<PromptAsset> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a pageable list of user prompt resources
     
     - parameter promptId: (path) Prompt ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectPromptResources(promptId: String, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: PromptAssetEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectPromptResourcesWithRequestBuilder(promptId: promptId, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<PromptAssetEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of user prompt resources
     - GET /api/v2/architect/prompts/{promptId}/resources
     - The returned list is pageable, and query parameters can be used for filtering.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<PromptAssetEntityListing> 
     */
    open class func getArchitectPromptResourcesWithRequestBuilder(promptId: String, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<PromptAssetEntityListing> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<PromptAssetEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    /**
     Get a pageable list of user prompts
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectPrompts(pageNumber: Int? = nil, pageSize: Int? = nil, name: [String]? = nil, _description: String? = nil, nameOrDescription: String? = nil, sortBy: String? = nil, sortOrder: String? = nil, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil, completion: @escaping ((_ data: PromptEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectPromptsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, name: name, _description: _description, nameOrDescription: nameOrDescription, sortBy: sortBy, sortOrder: sortOrder, includeMediaUris: includeMediaUris, includeResources: includeResources, language: language)
        requestBuilder.execute { (response: Response<PromptEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of user prompts
     - GET /api/v2/architect/prompts
     - The returned list is pageable, and query parameters can be used for filtering.  Multiple names can be specified, in which case all matching prompts will be returned, and no other filters will be evaluated.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "currentOperation" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "resources" : [ {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    }, {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    } ],
    "id" : "id"
  }, {
    "currentOperation" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "resources" : [ {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    }, {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    } ],
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)

     - returns: RequestBuilder<PromptEntityListing> 
     */
    open class func getArchitectPromptsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, name: [String]? = nil, _description: String? = nil, nameOrDescription: String? = nil, sortBy: String? = nil, sortOrder: String? = nil, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil) -> RequestBuilder<PromptEntityListing> {        
        let path = "/api/v2/architect/prompts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "name": name, 
            "description": _description, 
            "nameOrDescription": nameOrDescription, 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "includeMediaUris": includeMediaUris, 
            "includeResources": includeResources, 
            "language": language
        ])

        let requestBuilder: RequestBuilder<PromptEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a schedule by ID
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedule(scheduleId: String, completion: @escaping ((_ data: Schedule?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectScheduleWithRequestBuilder(scheduleId: scheduleId)
        requestBuilder.execute { (response: Response<Schedule>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a schedule by ID
     - GET /api/v2/architect/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "start" : "start",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "rrule" : "rrule",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "end" : "end",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<Schedule> 
     */
    open class func getArchitectScheduleWithRequestBuilder(scheduleId: String) -> RequestBuilder<Schedule> {        
        var path = "/api/v2/architect/schedules/{scheduleId}"
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Schedule>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets a schedule group by ID
     
     - parameter scheduleGroupId: (path) Schedule group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedulegroup(scheduleGroupId: String, completion: @escaping ((_ data: ScheduleGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: scheduleGroupId)
        requestBuilder.execute { (response: Response<ScheduleGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a schedule group by ID
     - GET /api/v2/architect/schedulegroups/{scheduleGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "closedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "timeZone" : "timeZone",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "holidaySchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "openSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter scheduleGroupId: (path) Schedule group ID 

     - returns: RequestBuilder<ScheduleGroup> 
     */
    open class func getArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: String) -> RequestBuilder<ScheduleGroup> {        
        var path = "/api/v2/architect/schedulegroups/{scheduleGroupId}"
        let scheduleGroupIdPreEscape = "\(scheduleGroupId)"
        let scheduleGroupIdPostEscape = scheduleGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleGroupId}", with: scheduleGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ScheduleGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a list of schedule groups.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Schedule Group to filter by. (optional)
     - parameter scheduleIds: (query) A comma-delimited list of Schedule IDs to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedulegroups(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, scheduleIds: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: ScheduleGroupEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSchedulegroupsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, name: name, scheduleIds: scheduleIds, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ScheduleGroupEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of schedule groups.
     - GET /api/v2/architect/schedulegroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "closedSchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "timeZone" : "timeZone",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "holidaySchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ],
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active",
    "openSchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  }, {
    "closedSchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "timeZone" : "timeZone",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "holidaySchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ],
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "state" : "active",
    "openSchedules" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Schedule Group to filter by. (optional)
     - parameter scheduleIds: (query) A comma-delimited list of Schedule IDs to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<ScheduleGroupEntityListing> 
     */
    open class func getArchitectSchedulegroupsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, scheduleIds: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<ScheduleGroupEntityListing> {        
        let path = "/api/v2/architect/schedulegroups"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "name": name, 
            "scheduleIds": scheduleIds, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ScheduleGroupEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic schedule group configuration information objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the schedule group to filter by. (optional)
     - parameter name: (query) Name of the schedule group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedulegroupsDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: ScheduleGroupDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSchedulegroupsDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ScheduleGroupDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic schedule group configuration information objects filterable by query parameters.
     - GET /api/v2/architect/schedulegroups/divisionviews
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the schedule group to filter by. (optional)
     - parameter name: (query) Name of the schedule group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<ScheduleGroupDivisionViewEntityListing> 
     */
    open class func getArchitectSchedulegroupsDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<ScheduleGroupDivisionViewEntityListing> {        
        let path = "/api/v2/architect/schedulegroups/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ScheduleGroupDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    /**
     Get a list of schedules.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Schedule to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedules(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: ScheduleEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSchedulesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ScheduleEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of schedules.
     - GET /api/v2/architect/schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "start" : "start",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "rrule" : "rrule",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "end" : "end",
    "id" : "id",
    "state" : "active"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "start" : "start",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "createdByApp" : "createdByApp",
    "version" : 0,
    "division" : "{}",
    "rrule" : "rrule",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "createdBy",
    "name" : "name",
    "modifiedByApp" : "modifiedByApp",
    "modifiedBy" : "modifiedBy",
    "end" : "end",
    "id" : "id",
    "state" : "active"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name of the Schedule to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<ScheduleEntityListing> 
     */
    open class func getArchitectSchedulesWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<ScheduleEntityListing> {        
        let path = "/api/v2/architect/schedules"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ScheduleEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic schedule configuration information objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the schedule group to filter by. (optional)
     - parameter name: (query) Name of the schedule group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSchedulesDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: ScheduleDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSchedulesDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ScheduleDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic schedule configuration information objects filterable by query parameters.
     - GET /api/v2/architect/schedules/divisionviews
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID of the schedule group to filter by. (optional)
     - parameter name: (query) Name of the schedule group to filter by. (optional)
     - parameter divisionId: (query) List of divisionIds on which to filter. (optional)

     - returns: RequestBuilder<ScheduleDivisionViewEntityListing> 
     */
    open class func getArchitectSchedulesDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<ScheduleDivisionViewEntityListing> {        
        let path = "/api/v2/architect/schedules/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ScheduleDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get a system prompt
     
     - parameter promptId: (path) promptId 
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSystemprompt(promptId: String, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil, completion: @escaping ((_ data: SystemPrompt?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSystempromptWithRequestBuilder(promptId: promptId, includeMediaUris: includeMediaUris, includeResources: includeResources, language: language)
        requestBuilder.execute { (response: Response<SystemPrompt>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a system prompt
     - GET /api/v2/architect/systemprompts/{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "resources" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "hasDefault" : true,
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "hasDefault" : true,
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "id" : "id"
}, statusCode=200}]
     
     - parameter promptId: (path) promptId 
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)

     - returns: RequestBuilder<SystemPrompt> 
     */
    open class func getArchitectSystempromptWithRequestBuilder(promptId: String, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil) -> RequestBuilder<SystemPrompt> {        
        var path = "/api/v2/architect/systemprompts/{promptId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeMediaUris": includeMediaUris, 
            "includeResources": includeResources, 
            "language": language
        ])

        let requestBuilder: RequestBuilder<SystemPrompt>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum SortBy_getArchitectSystempromptHistoryHistoryId: String { 
        case action = "action"
        case timestamp = "timestamp"
        case user = "user"
    }

    
    
    /**
     Get generated prompt history
     
     - parameter promptId: (path) promptId 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSystempromptHistoryHistoryId(promptId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getArchitectSystempromptHistoryHistoryId? = nil, action: [String]? = nil, completion: @escaping ((_ data: HistoryListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSystempromptHistoryHistoryIdWithRequestBuilder(promptId: promptId, historyId: historyId, pageNumber: pageNumber, pageSize: pageSize, sortOrder: sortOrder, sortBy: sortBy, action: action)
        requestBuilder.execute { (response: Response<HistoryListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get generated prompt history
     - GET /api/v2/architect/systemprompts/{promptId}/history/{historyId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "pageCount" : 5,
  "pageNumber" : 6,
  "errorMessage" : "errorMessage",
  "errorCode" : "errorCode",
  "description" : "description",
  "pageSize" : 0,
  "started" : "2000-01-23T04:56:07.000+00:00",
  "completed" : "2000-01-23T04:56:07.000+00:00",
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "total" : 1,
  "system" : true,
  "actionStatus" : "LOCKED",
  "entities" : [ {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  } ],
  "name" : "name",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter promptId: (path) promptId 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)

     - returns: RequestBuilder<HistoryListing> 
     */
    open class func getArchitectSystempromptHistoryHistoryIdWithRequestBuilder(promptId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getArchitectSystempromptHistoryHistoryId? = nil, action: [String]? = nil) -> RequestBuilder<HistoryListing> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/history/{historyId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let historyIdPreEscape = "\(historyId)"
        let historyIdPostEscape = historyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{historyId}", with: historyIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortOrder": sortOrder, 
            "sortBy": sortBy?.rawValue, 
            "action": action
        ])

        let requestBuilder: RequestBuilder<HistoryListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a system prompt resource.
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSystempromptResource(promptId: String, languageCode: String, completion: @escaping ((_ data: SystemPromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSystempromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode)
        requestBuilder.execute { (response: Response<SystemPromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a system prompt resource.
     - GET /api/v2/architect/systemprompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "hasDefault" : true,
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 

     - returns: RequestBuilder<SystemPromptAsset> 
     */
    open class func getArchitectSystempromptResourceWithRequestBuilder(promptId: String, languageCode: String) -> RequestBuilder<SystemPromptAsset> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SystemPromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get system prompt resources.
     
     - parameter promptId: (path) Prompt ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSystempromptResources(promptId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: SystemPromptAssetEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSystempromptResourcesWithRequestBuilder(promptId: promptId, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<SystemPromptAssetEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get system prompt resources.
     - GET /api/v2/architect/systemprompts/{promptId}/resources
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "hasDefault" : true,
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "hasDefault" : true,
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<SystemPromptAssetEntityListing> 
     */
    open class func getArchitectSystempromptResourcesWithRequestBuilder(promptId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<SystemPromptAssetEntityListing> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/resources"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<SystemPromptAssetEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    /**
     Get System Prompts
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getArchitectSystemprompts(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil, completion: @escaping ((_ data: SystemPromptEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getArchitectSystempromptsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, name: name, _description: _description, nameOrDescription: nameOrDescription, includeMediaUris: includeMediaUris, includeResources: includeResources, language: language)
        requestBuilder.execute { (response: Response<SystemPromptEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get System Prompts
     - GET /api/v2/architect/systemprompts
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "resources" : [ {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "hasDefault" : true,
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    }, {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "hasDefault" : true,
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    } ],
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "resources" : [ {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "hasDefault" : true,
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    }, {
      "durationSeconds" : 0.8008281904610115,
      "mediaUri" : "mediaUri",
      "selfUri" : "https://openapi-generator.tech",
      "uploadStatus" : "created",
      "language" : "language",
      "languageDefault" : true,
      "tags" : {
        "key" : [ "tags", "tags" ]
      },
      "hasDefault" : true,
      "uploadUri" : "uploadUri",
      "ttsString" : "ttsString",
      "promptId" : "promptId",
      "name" : "name",
      "id" : "id",
      "text" : "text"
    } ],
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter includeMediaUris: (query) Include the media URIs for each resource (optional)
     - parameter includeResources: (query) Include the resources for each system prompt (optional)
     - parameter language: (query) Filter the resources down to the provided languages (optional)

     - returns: RequestBuilder<SystemPromptEntityListing> 
     */
    open class func getArchitectSystempromptsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, includeMediaUris: Bool? = nil, includeResources: Bool? = nil, language: [String]? = nil) -> RequestBuilder<SystemPromptEntityListing> {        
        let path = "/api/v2/architect/systemprompts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "name": name, 
            "description": _description, 
            "nameOrDescription": nameOrDescription, 
            "includeMediaUris": includeMediaUris, 
            "includeResources": includeResources, 
            "language": language
        ])

        let requestBuilder: RequestBuilder<SystemPromptEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get flow
     
     - parameter flowId: (path) Flow ID 
     - parameter deleted: (query) Deleted flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlow(flowId: String, deleted: Bool? = nil, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowWithRequestBuilder(flowId: flowId, deleted: deleted)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get flow
     - GET /api/v2/flows/{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter deleted: (query) Deleted flows (optional)

     - returns: RequestBuilder<Flow> 
     */
    open class func getFlowWithRequestBuilder(flowId: String, deleted: Bool? = nil) -> RequestBuilder<Flow> {        
        var path = "/api/v2/flows/{flowId}"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "deleted": deleted
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum SortBy_getFlowHistoryHistoryId: String { 
        case action = "action"
        case timestamp = "timestamp"
        case user = "user"
    }

    
    
    /**
     Get generated flow history
     
     - parameter flowId: (path) Flow ID 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowHistoryHistoryId(flowId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getFlowHistoryHistoryId? = nil, action: [String]? = nil, completion: @escaping ((_ data: HistoryListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowHistoryHistoryIdWithRequestBuilder(flowId: flowId, historyId: historyId, pageNumber: pageNumber, pageSize: pageSize, sortOrder: sortOrder, sortBy: sortBy, action: action)
        requestBuilder.execute { (response: Response<HistoryListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get generated flow history
     - GET /api/v2/flows/{flowId}/history/{historyId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "pageCount" : 5,
  "pageNumber" : 6,
  "errorMessage" : "errorMessage",
  "errorCode" : "errorCode",
  "description" : "description",
  "pageSize" : 0,
  "started" : "2000-01-23T04:56:07.000+00:00",
  "completed" : "2000-01-23T04:56:07.000+00:00",
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "total" : 1,
  "system" : true,
  "actionStatus" : "LOCKED",
  "entities" : [ {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "resource" : "resource",
    "action" : "CHECKIN",
    "client" : "{}",
    "secure" : true,
    "user" : "{}",
    "version" : "version",
    "timestamp" : "2000-01-23T04:56:07.000+00:00"
  } ],
  "name" : "name",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter historyId: (path) History request ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter action: (query) Flow actions to include (omit to include all) (optional)

     - returns: RequestBuilder<HistoryListing> 
     */
    open class func getFlowHistoryHistoryIdWithRequestBuilder(flowId: String, historyId: String, pageNumber: Int? = nil, pageSize: Int? = nil, sortOrder: String? = nil, sortBy: SortBy_getFlowHistoryHistoryId? = nil, action: [String]? = nil) -> RequestBuilder<HistoryListing> {        
        var path = "/api/v2/flows/{flowId}/history/{historyId}"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let historyIdPreEscape = "\(historyId)"
        let historyIdPostEscape = historyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{historyId}", with: historyIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortOrder": sortOrder, 
            "sortBy": sortBy?.rawValue, 
            "action": action
        ])

        let requestBuilder: RequestBuilder<HistoryListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get the latest configuration for flow
     
     - parameter flowId: (path) Flow ID 
     - parameter deleted: (query) Deleted flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowLatestconfiguration(flowId: String, deleted: Bool? = nil, completion: @escaping ((_ data: JSON?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowLatestconfigurationWithRequestBuilder(flowId: flowId, deleted: deleted)
        requestBuilder.execute { (response: Response<JSON>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the latest configuration for flow
     - GET /api/v2/flows/{flowId}/latestconfiguration
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter flowId: (path) Flow ID 
     - parameter deleted: (query) Deleted flows (optional)

     - returns: RequestBuilder<JSON> 
     */
    open class func getFlowLatestconfigurationWithRequestBuilder(flowId: String, deleted: Bool? = nil) -> RequestBuilder<JSON> {        
        var path = "/api/v2/flows/{flowId}/latestconfiguration"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "deleted": deleted
        ])

        let requestBuilder: RequestBuilder<JSON>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get flow version
     
     - parameter flowId: (path) Flow ID 
     - parameter versionId: (path) Version ID 
     - parameter deleted: (query) Deleted flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersion(flowId: String, versionId: String, deleted: String? = nil, completion: @escaping ((_ data: FlowVersion?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionWithRequestBuilder(flowId: flowId, versionId: versionId, deleted: deleted)
        requestBuilder.execute { (response: Response<FlowVersion>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get flow version
     - GET /api/v2/flows/{flowId}/versions/{versionId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateSaved" : 1,
  "generationId" : "generationId",
  "debug" : true,
  "outputSchema" : {
    "$schema" : "$schema",
    "description" : "description",
    "id" : "id",
    "additionalProperties" : "{}",
    "title" : "title",
    "type" : "type",
    "required" : [ "required", "required" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "inputSchema" : {
    "$schema" : "$schema",
    "description" : "description",
    "id" : "id",
    "additionalProperties" : "{}",
    "title" : "title",
    "type" : "type",
    "required" : [ "required", "required" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "createdByClient" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
  "nluInfo" : "{}",
  "dateCheckedIn" : 6,
  "type" : "PUBLISH",
  "secure" : true,
  "configurationUri" : "configurationUri",
  "datePublished" : "2000-01-23T04:56:07.000+00:00",
  "configurationVersion" : "configurationVersion",
  "dateCreated" : 0,
  "publishResultUri" : "https://openapi-generator.tech",
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "createdBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "commitVersion" : "commitVersion"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter versionId: (path) Version ID 
     - parameter deleted: (query) Deleted flows (optional)

     - returns: RequestBuilder<FlowVersion> 
     */
    open class func getFlowVersionWithRequestBuilder(flowId: String, versionId: String, deleted: String? = nil) -> RequestBuilder<FlowVersion> {        
        var path = "/api/v2/flows/{flowId}/versions/{versionId}"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let versionIdPreEscape = "\(versionId)"
        let versionIdPostEscape = versionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versionId}", with: versionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "deleted": deleted
        ])

        let requestBuilder: RequestBuilder<FlowVersion>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Create flow version configuration
     
     - parameter flowId: (path) Flow ID 
     - parameter versionId: (path) Version ID 
     - parameter deleted: (query) Deleted flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersionConfiguration(flowId: String, versionId: String, deleted: String? = nil, completion: @escaping ((_ data: JSON?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionConfigurationWithRequestBuilder(flowId: flowId, versionId: versionId, deleted: deleted)
        requestBuilder.execute { (response: Response<JSON>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create flow version configuration
     - GET /api/v2/flows/{flowId}/versions/{versionId}/configuration
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter flowId: (path) Flow ID 
     - parameter versionId: (path) Version ID 
     - parameter deleted: (query) Deleted flows (optional)

     - returns: RequestBuilder<JSON> 
     */
    open class func getFlowVersionConfigurationWithRequestBuilder(flowId: String, versionId: String, deleted: String? = nil) -> RequestBuilder<JSON> {        
        var path = "/api/v2/flows/{flowId}/versions/{versionId}/configuration"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let versionIdPreEscape = "\(versionId)"
        let versionIdPostEscape = versionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versionId}", with: versionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "deleted": deleted
        ])

        let requestBuilder: RequestBuilder<JSON>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum Language_getFlowVersionHealth: String { 
        case enUs = "en-us"
        case enGb = "en-gb"
        case enAu = "en-au"
        case enZa = "en-za"
        case enNz = "en-nz"
        case enIe = "en-ie"
        case frCa = "fr-ca"
        case frFr = "fr-fr"
        case esUs = "es-us"
        case esEs = "es-es"
        case esMx = "es-mx"
        case deDe = "de-de"
        case itIt = "it-it"
        case ptBr = "pt-br"
        case ptPt = "pt-pt"
        case nlNl = "nl-nl"
    }

    
    /**
     Get overall health scores for all intents present in the NLU domain version associated with the bot flow version.
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter language: (query) Language to filter for (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersionHealth(flowId: String, versionId: String, language: Language_getFlowVersionHealth? = nil, completion: @escaping ((_ data: FlowHealth?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionHealthWithRequestBuilder(flowId: flowId, versionId: versionId, language: language)
        requestBuilder.execute { (response: Response<FlowHealth>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get overall health scores for all intents present in the NLU domain version associated with the bot flow version.
     - GET /api/v2/flows/{flowId}/versions/{versionId}/health
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "flowVersionInfo" : "{}",
  "intents" : [ {
    "languageHealth" : {
      "key" : {
        "overallScore" : 0.8008282,
        "staticValidationResults" : [ "TooFewUtterances", "TooFewUtterances" ],
        "issueCount" : 6
      }
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "languageHealth" : {
      "key" : {
        "overallScore" : 0.8008282,
        "staticValidationResults" : [ "TooFewUtterances", "TooFewUtterances" ],
        "issueCount" : 6
      }
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "languageInfo" : {
    "key" : {
      "flowVersionInfo" : "{}",
      "errorInfo" : "{}",
      "status" : "InProgress"
    }
  }
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter language: (query) Language to filter for (optional)

     - returns: RequestBuilder<FlowHealth> 
     */
    open class func getFlowVersionHealthWithRequestBuilder(flowId: String, versionId: String, language: Language_getFlowVersionHealth? = nil) -> RequestBuilder<FlowHealth> {        
        var path = "/api/v2/flows/{flowId}/versions/{versionId}/health"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let versionIdPreEscape = "\(versionId)"
        let versionIdPostEscape = versionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versionId}", with: versionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language?.rawValue
        ])

        let requestBuilder: RequestBuilder<FlowHealth>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    public enum Language_getFlowVersionIntentHealth: String { 
        case enUs = "en-us"
        case enGb = "en-gb"
        case enAu = "en-au"
        case enZa = "en-za"
        case enNz = "en-nz"
        case enIe = "en-ie"
        case frCa = "fr-ca"
        case frFr = "fr-fr"
        case esUs = "es-us"
        case esEs = "es-es"
        case esMx = "es-mx"
        case deDe = "de-de"
        case itIt = "it-it"
        case ptBr = "pt-br"
        case ptPt = "pt-pt"
        case nlNl = "nl-nl"
    }

    
    /**
     Get health scores and other health metrics for a specific intent. This includes the health metrics for each utterance in an intent.
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter intentId: (path) Intent ID. 
     - parameter language: (query) Language to filter for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersionIntentHealth(flowId: String, versionId: String, intentId: String, language: Language_getFlowVersionIntentHealth, completion: @escaping ((_ data: FlowHealthIntent?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionIntentHealthWithRequestBuilder(flowId: flowId, versionId: versionId, intentId: intentId, language: language)
        requestBuilder.execute { (response: Response<FlowHealthIntent>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get health scores and other health metrics for a specific intent. This includes the health metrics for each utterance in an intent.
     - GET /api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/health
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "flowVersionInfo" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "health" : "{}",
  "language" : "en-us",
  "id" : "id"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter intentId: (path) Intent ID. 
     - parameter language: (query) Language to filter for 

     - returns: RequestBuilder<FlowHealthIntent> 
     */
    open class func getFlowVersionIntentHealthWithRequestBuilder(flowId: String, versionId: String, intentId: String, language: Language_getFlowVersionIntentHealth) -> RequestBuilder<FlowHealthIntent> {        
        var path = "/api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/health"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let versionIdPreEscape = "\(versionId)"
        let versionIdPostEscape = versionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versionId}", with: versionIdPostEscape, options: .literal, range: nil)
        let intentIdPreEscape = "\(intentId)"
        let intentIdPostEscape = intentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{intentId}", with: intentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language.rawValue
        ])

        let requestBuilder: RequestBuilder<FlowHealthIntent>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    public enum Language_getFlowVersionIntentUtteranceHealth: String { 
        case enUs = "en-us"
        case enGb = "en-gb"
        case enAu = "en-au"
        case enZa = "en-za"
        case enNz = "en-nz"
        case enIe = "en-ie"
        case frCa = "fr-ca"
        case frFr = "fr-fr"
        case esUs = "es-us"
        case esEs = "es-es"
        case esMx = "es-mx"
        case deDe = "de-de"
        case itIt = "it-it"
        case ptBr = "pt-br"
        case ptPt = "pt-pt"
        case nlNl = "nl-nl"
    }

    
    /**
     Get health metrics associated with a specific utterance of an intent.
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter intentId: (path) Intent ID. 
     - parameter utteranceId: (path) Utterance ID. 
     - parameter language: (query) Language to filter for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersionIntentUtteranceHealth(flowId: String, versionId: String, intentId: String, utteranceId: String, language: Language_getFlowVersionIntentUtteranceHealth, completion: @escaping ((_ data: FlowHealthUtterance?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionIntentUtteranceHealthWithRequestBuilder(flowId: flowId, versionId: versionId, intentId: intentId, utteranceId: utteranceId, language: language)
        requestBuilder.execute { (response: Response<FlowHealthUtterance>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get health metrics associated with a specific utterance of an intent.
     - GET /api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/utterances/{utteranceId}/health
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "confusionInfo" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "language" : "en-us",
  "staticValidationResults" : [ "TooFewUtterances", "TooFewUtterances" ],
  "outlierInfo" : "{}",
  "id" : "id",
  "text" : "text",
  "issueCount" : 0
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID. 
     - parameter versionId: (path) Version ID. 
     - parameter intentId: (path) Intent ID. 
     - parameter utteranceId: (path) Utterance ID. 
     - parameter language: (query) Language to filter for 

     - returns: RequestBuilder<FlowHealthUtterance> 
     */
    open class func getFlowVersionIntentUtteranceHealthWithRequestBuilder(flowId: String, versionId: String, intentId: String, utteranceId: String, language: Language_getFlowVersionIntentUtteranceHealth) -> RequestBuilder<FlowHealthUtterance> {        
        var path = "/api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/utterances/{utteranceId}/health"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let versionIdPreEscape = "\(versionId)"
        let versionIdPostEscape = versionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versionId}", with: versionIdPostEscape, options: .literal, range: nil)
        let intentIdPreEscape = "\(intentId)"
        let intentIdPostEscape = intentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{intentId}", with: intentIdPostEscape, options: .literal, range: nil)
        let utteranceIdPreEscape = "\(utteranceId)"
        let utteranceIdPostEscape = utteranceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{utteranceId}", with: utteranceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language.rawValue
        ])

        let requestBuilder: RequestBuilder<FlowHealthUtterance>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get flow version list
     
     - parameter flowId: (path) Flow ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter deleted: (query) Include Deleted flows (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowVersions(flowId: String, pageNumber: Int? = nil, pageSize: Int? = nil, deleted: Bool? = nil, completion: @escaping ((_ data: FlowVersionEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowVersionsWithRequestBuilder(flowId: flowId, pageNumber: pageNumber, pageSize: pageSize, deleted: deleted)
        requestBuilder.execute { (response: Response<FlowVersionEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get flow version list
     - GET /api/v2/flows/{flowId}/versions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  }, {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter deleted: (query) Include Deleted flows (optional)

     - returns: RequestBuilder<FlowVersionEntityListing> 
     */
    open class func getFlowVersionsWithRequestBuilder(flowId: String, pageNumber: Int? = nil, pageSize: Int? = nil, deleted: Bool? = nil) -> RequestBuilder<FlowVersionEntityListing> {        
        var path = "/api/v2/flows/{flowId}/versions"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "deleted": deleted
        ])

        let requestBuilder: RequestBuilder<FlowVersionEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public enum Secure_getFlows: String { 
        case any = "any"
        case checkedin = "checkedin"
        case published = "published"
    }

    
    
    
    
    
    
    /**
     Get a pageable list of flows, filtered by query parameters
     
     - parameter type: (query) Type (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter publishVersionId: (query) Publish version ID (optional)
     - parameter editableBy: (query) Editable by (optional)
     - parameter lockedBy: (query) Locked by (optional)
     - parameter lockedByClientId: (query) Locked by client ID (optional)
     - parameter secure: (query) Secure (optional)
     - parameter deleted: (query) Include deleted (optional)
     - parameter includeSchemas: (query) Include variable schemas (optional)
     - parameter publishedAfter: (query) Published after (optional)
     - parameter publishedBefore: (query) Published before (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlows(type: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, publishVersionId: String? = nil, editableBy: String? = nil, lockedBy: String? = nil, lockedByClientId: String? = nil, secure: Secure_getFlows? = nil, deleted: Bool? = nil, includeSchemas: Bool? = nil, publishedAfter: String? = nil, publishedBefore: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: FlowEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsWithRequestBuilder(type: type, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, _description: _description, nameOrDescription: nameOrDescription, publishVersionId: publishVersionId, editableBy: editableBy, lockedBy: lockedBy, lockedByClientId: lockedByClientId, secure: secure, deleted: deleted, includeSchemas: includeSchemas, publishedAfter: publishedAfter, publishedBefore: publishedBefore, divisionId: divisionId)
        requestBuilder.execute { (response: Response<FlowEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of flows, filtered by query parameters
     - GET /api/v2/flows
     - If one or more IDs are specified, the search will fetch flows that match the given ID(s) and not use any additional supplied query parameters in the search.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "publishedBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "savedVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "outputSchema" : "{}",
    "inputSchema" : "{}",
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "active" : true,
    "nluInfo" : "{}",
    "type" : "BOT",
    "lockedUser" : "{}",
    "debugVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "lockedClient" : "{}",
    "division" : "{}",
    "publishedVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "currentOperation" : {
      "errorMessageParams" : {
        "key" : "errorMessageParams"
      },
      "actionStatus" : "LOCKED",
      "errorMessage" : "errorMessage",
      "client" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "errorCode" : "errorCode",
      "id" : "id",
      "complete" : true,
      "user" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "errorDetails" : [ {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      }, {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      } ],
      "actionName" : "CREATE"
    },
    "system" : true,
    "deleted" : true,
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "name" : "name",
    "checkedInVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "id" : "id"
  }, {
    "publishedBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "savedVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "outputSchema" : "{}",
    "inputSchema" : "{}",
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "active" : true,
    "nluInfo" : "{}",
    "type" : "BOT",
    "lockedUser" : "{}",
    "debugVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "lockedClient" : "{}",
    "division" : "{}",
    "publishedVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "currentOperation" : {
      "errorMessageParams" : {
        "key" : "errorMessageParams"
      },
      "actionStatus" : "LOCKED",
      "errorMessage" : "errorMessage",
      "client" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "errorCode" : "errorCode",
      "id" : "id",
      "complete" : true,
      "user" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "errorDetails" : [ {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      }, {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      } ],
      "actionName" : "CREATE"
    },
    "system" : true,
    "deleted" : true,
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "name" : "name",
    "checkedInVersion" : {
      "dateSaved" : 1,
      "generationId" : "generationId",
      "debug" : true,
      "outputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "inputSchema" : {
        "$schema" : "$schema",
        "description" : "description",
        "id" : "id",
        "additionalProperties" : "{}",
        "title" : "title",
        "type" : "type",
        "required" : [ "required", "required" ],
        "properties" : {
          "key" : "{}"
        }
      },
      "compatibleFlowTypes" : [ "BOT", "BOT" ],
      "createdByClient" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
      "nluInfo" : "{}",
      "dateCheckedIn" : 6,
      "type" : "PUBLISH",
      "secure" : true,
      "configurationUri" : "configurationUri",
      "datePublished" : "2000-01-23T04:56:07.000+00:00",
      "configurationVersion" : "configurationVersion",
      "dateCreated" : 0,
      "publishResultUri" : "https://openapi-generator.tech",
      "supportedLanguages" : [ {
        "isDefault" : true,
        "language" : "language"
      }, {
        "isDefault" : true,
        "language" : "language"
      } ],
      "createdBy" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "commitVersion" : "commitVersion"
    },
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter type: (query) Type (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter publishVersionId: (query) Publish version ID (optional)
     - parameter editableBy: (query) Editable by (optional)
     - parameter lockedBy: (query) Locked by (optional)
     - parameter lockedByClientId: (query) Locked by client ID (optional)
     - parameter secure: (query) Secure (optional)
     - parameter deleted: (query) Include deleted (optional)
     - parameter includeSchemas: (query) Include variable schemas (optional)
     - parameter publishedAfter: (query) Published after (optional)
     - parameter publishedBefore: (query) Published before (optional)
     - parameter divisionId: (query) division ID(s) (optional)

     - returns: RequestBuilder<FlowEntityListing> 
     */
    open class func getFlowsWithRequestBuilder(type: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, publishVersionId: String? = nil, editableBy: String? = nil, lockedBy: String? = nil, lockedByClientId: String? = nil, secure: Secure_getFlows? = nil, deleted: Bool? = nil, includeSchemas: Bool? = nil, publishedAfter: String? = nil, publishedBefore: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<FlowEntityListing> {        
        let path = "/api/v2/flows"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "type": type, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "description": _description, 
            "nameOrDescription": nameOrDescription, 
            "publishVersionId": publishVersionId, 
            "editableBy": editableBy, 
            "lockedBy": lockedBy, 
            "lockedByClientId": lockedByClientId, 
            "secure": secure?.rawValue, 
            "deleted": deleted, 
            "includeSchemas": includeSchemas, 
            "publishedAfter": publishedAfter, 
            "publishedBefore": publishedBefore, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<FlowEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum Expand_getFlowsDatatable: String { 
        case schema = "schema"
    }

    
    /**
     Returns a specific datatable by id
     
     - parameter datatableId: (path) id of datatable 
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatable(datatableId: String, expand: Expand_getFlowsDatatable? = nil, completion: @escaping ((_ data: DataTable?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableWithRequestBuilder(datatableId: datatableId, expand: expand)
        requestBuilder.execute { (response: Response<DataTable>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns a specific datatable by id
     - GET /api/v2/flows/datatables/{datatableId}
     - Given a datatableId returns the datatable object and schema associated with it.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "schema" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter expand: (query) Expand instructions for the result (optional)

     - returns: RequestBuilder<DataTable> 
     */
    open class func getFlowsDatatableWithRequestBuilder(datatableId: String, expand: Expand_getFlowsDatatable? = nil) -> RequestBuilder<DataTable> {        
        var path = "/api/v2/flows/datatables/{datatableId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<DataTable>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Returns the state information about an export job
     
     - parameter datatableId: (path) id of datatable 
     - parameter exportJobId: (path) id of export job 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatableExportJob(datatableId: String, exportJobId: String, completion: @escaping ((_ data: DataTableExportJob?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableExportJobWithRequestBuilder(datatableId: datatableId, exportJobId: exportJobId)
        requestBuilder.execute { (response: Response<DataTableExportJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns the state information about an export job
     - GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}
     - Returns the state information about an export job.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "countRecordsProcessed" : 0,
  "errorInformation" : "{}",
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "downloadURI" : "https://openapi-generator.tech",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter exportJobId: (path) id of export job 

     - returns: RequestBuilder<DataTableExportJob> 
     */
    open class func getFlowsDatatableExportJobWithRequestBuilder(datatableId: String, exportJobId: String) -> RequestBuilder<DataTableExportJob> {        
        var path = "/api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let exportJobIdPreEscape = "\(exportJobId)"
        let exportJobIdPostEscape = exportJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{exportJobId}", with: exportJobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DataTableExportJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Returns the state information about an import job
     
     - parameter datatableId: (path) id of datatable 
     - parameter importJobId: (path) id of import job 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatableImportJob(datatableId: String, importJobId: String, completion: @escaping ((_ data: DataTableImportJob?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableImportJobWithRequestBuilder(datatableId: datatableId, importJobId: importJobId)
        requestBuilder.execute { (response: Response<DataTableImportJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns the state information about an import job
     - GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}
     - Returns the state information about an import job.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "importMode" : "ReplaceAll",
  "countRecordsFailed" : 1,
  "countRecordsUpdated" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "uploadURI" : "https://openapi-generator.tech",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "errorInformation" : "{}",
  "countRecordsDeleted" : 6,
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "id" : "id",
  "status" : "WaitingForUpload"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter importJobId: (path) id of import job 

     - returns: RequestBuilder<DataTableImportJob> 
     */
    open class func getFlowsDatatableImportJobWithRequestBuilder(datatableId: String, importJobId: String) -> RequestBuilder<DataTableImportJob> {        
        var path = "/api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let importJobIdPreEscape = "\(importJobId)"
        let importJobIdPostEscape = importJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{importJobId}", with: importJobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DataTableImportJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get all recent import jobs
     
     - parameter datatableId: (path) id of datatable 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatableImportJobs(datatableId: String, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: DataTableImportEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableImportJobsWithRequestBuilder(datatableId: datatableId, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<DataTableImportEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get all recent import jobs
     - GET /api/v2/flows/datatables/{datatableId}/import/jobs
     - Get all recent import jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "owner" : "{}",
    "importMode" : "ReplaceAll",
    "countRecordsFailed" : 1,
    "countRecordsUpdated" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "uploadURI" : "https://openapi-generator.tech",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "errorInformation" : "{}",
    "countRecordsDeleted" : 6,
    "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
    "name" : "name",
    "id" : "id",
    "status" : "WaitingForUpload"
  }, {
    "owner" : "{}",
    "importMode" : "ReplaceAll",
    "countRecordsFailed" : 1,
    "countRecordsUpdated" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "uploadURI" : "https://openapi-generator.tech",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "errorInformation" : "{}",
    "countRecordsDeleted" : 6,
    "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
    "name" : "name",
    "id" : "id",
    "status" : "WaitingForUpload"
  } ],
  "pageSize" : 0
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)

     - returns: RequestBuilder<DataTableImportEntityListing> 
     */
    open class func getFlowsDatatableImportJobsWithRequestBuilder(datatableId: String, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<DataTableImportEntityListing> {        
        var path = "/api/v2/flows/datatables/{datatableId}/import/jobs"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DataTableImportEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Returns a specific row for the datatable
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) The key for the row 
     - parameter showbrief: (query) if true returns just the key field for the row (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatableRow(datatableId: String, rowId: String, showbrief: Bool? = nil, completion: @escaping ((_ data: [String:JSON]?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableRowWithRequestBuilder(datatableId: datatableId, rowId: rowId, showbrief: showbrief)
        requestBuilder.execute { (response: Response<[String:JSON]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns a specific row for the datatable
     - GET /api/v2/flows/datatables/{datatableId}/rows/{rowId}
     - Given a datatableId and a rowId (the value of the key field) this will return the full row contents for that rowId.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) The key for the row 
     - parameter showbrief: (query) if true returns just the key field for the row (optional)

     - returns: RequestBuilder<[String:JSON]> 
     */
    open class func getFlowsDatatableRowWithRequestBuilder(datatableId: String, rowId: String, showbrief: Bool? = nil) -> RequestBuilder<[String:JSON]> {        
        var path = "/api/v2/flows/datatables/{datatableId}/rows/{rowId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let rowIdPreEscape = "\(rowId)"
        let rowIdPostEscape = rowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rowId}", with: rowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "showbrief": showbrief
        ])

        let requestBuilder: RequestBuilder<[String:JSON]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    public enum SortOrder_getFlowsDatatableRows: String { 
        case ascending = "ascending"
        case descending = "descending"
    }

    
    /**
     Returns the rows for the datatable with the given id
     
     - parameter datatableId: (path) id of datatable 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter showbrief: (query) If true returns just the key value of the row (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatableRows(datatableId: String, pageNumber: Int? = nil, pageSize: Int? = nil, showbrief: Bool? = nil, sortOrder: SortOrder_getFlowsDatatableRows? = nil, completion: @escaping ((_ data: DataTableRowEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatableRowsWithRequestBuilder(datatableId: datatableId, pageNumber: pageNumber, pageSize: pageSize, showbrief: showbrief, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<DataTableRowEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns the rows for the datatable with the given id
     - GET /api/v2/flows/datatables/{datatableId}/rows
     - Returns all of the rows for the datatable with the given datatableId.  By default this will just be a truncated list returning the key for each row. Set showBrief to false to return all of the row contents.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "key" : "{}"
  }, {
    "key" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter showbrief: (query) If true returns just the key value of the row (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<DataTableRowEntityListing> 
     */
    open class func getFlowsDatatableRowsWithRequestBuilder(datatableId: String, pageNumber: Int? = nil, pageSize: Int? = nil, showbrief: Bool? = nil, sortOrder: SortOrder_getFlowsDatatableRows? = nil) -> RequestBuilder<DataTableRowEntityListing> {        
        var path = "/api/v2/flows/datatables/{datatableId}/rows"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "showbrief": showbrief, 
            "sortOrder": sortOrder?.rawValue
        ])

        let requestBuilder: RequestBuilder<DataTableRowEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    public enum Expand_getFlowsDatatables: String { 
        case schema = "schema"
    }

    
    
    
    
    public enum SortBy_getFlowsDatatables: String { 
        case _id = "id"
        case name = "name"
    }

    
    
    
    
    /**
     Retrieve a list of datatables for the org
     
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter name: (query) Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatables(expand: Expand_getFlowsDatatables? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: SortBy_getFlowsDatatables? = nil, sortOrder: String? = nil, divisionId: [String]? = nil, name: String? = nil, completion: @escaping ((_ data: DataTablesDomainEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatablesWithRequestBuilder(expand: expand, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, divisionId: divisionId, name: name)
        requestBuilder.execute { (response: Response<DataTablesDomainEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve a list of datatables for the org
     - GET /api/v2/flows/datatables
     - Returns a metadata list of the datatables associated with this org, including datatableId, name and description.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "schema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  }, {
    "division" : "{}",
    "schema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter name: (query) Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)

     - returns: RequestBuilder<DataTablesDomainEntityListing> 
     */
    open class func getFlowsDatatablesWithRequestBuilder(expand: Expand_getFlowsDatatables? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: SortBy_getFlowsDatatables? = nil, sortOrder: String? = nil, divisionId: [String]? = nil, name: String? = nil) -> RequestBuilder<DataTablesDomainEntityListing> {        
        let path = "/api/v2/flows/datatables"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy?.rawValue, 
            "sortOrder": sortOrder, 
            "divisionId": divisionId, 
            "name": name
        ])

        let requestBuilder: RequestBuilder<DataTablesDomainEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum Expand_getFlowsDatatablesDivisionview: String { 
        case schema = "schema"
    }

    
    /**
     Returns a specific datatable by id
     
     - parameter datatableId: (path) id of datatable 
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatablesDivisionview(datatableId: String, expand: Expand_getFlowsDatatablesDivisionview? = nil, completion: @escaping ((_ data: DataTable?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatablesDivisionviewWithRequestBuilder(datatableId: datatableId, expand: expand)
        requestBuilder.execute { (response: Response<DataTable>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Returns a specific datatable by id
     - GET /api/v2/flows/datatables/divisionviews/{datatableId}
     - Given a datatableId returns the datatable object and schema associated with it.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "schema" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter expand: (query) Expand instructions for the result (optional)

     - returns: RequestBuilder<DataTable> 
     */
    open class func getFlowsDatatablesDivisionviewWithRequestBuilder(datatableId: String, expand: Expand_getFlowsDatatablesDivisionview? = nil) -> RequestBuilder<DataTable> {        
        var path = "/api/v2/flows/datatables/divisionviews/{datatableId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<DataTable>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    public enum Expand_getFlowsDatatablesDivisionviews: String { 
        case schema = "schema"
    }

    
    
    
    
    public enum SortBy_getFlowsDatatablesDivisionviews: String { 
        case _id = "id"
        case name = "name"
    }

    
    
    
    
    /**
     Retrieve a list of datatables for the org
     
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter name: (query) Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDatatablesDivisionviews(expand: Expand_getFlowsDatatablesDivisionviews? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: SortBy_getFlowsDatatablesDivisionviews? = nil, sortOrder: String? = nil, divisionId: [String]? = nil, name: String? = nil, completion: @escaping ((_ data: DataTablesDomainEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDatatablesDivisionviewsWithRequestBuilder(expand: expand, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, divisionId: divisionId, name: name)
        requestBuilder.execute { (response: Response<DataTablesDomainEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve a list of datatables for the org
     - GET /api/v2/flows/datatables/divisionviews
     - Returns a metadata list of the datatables associated with this org, including datatableId, name and description.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "schema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  }, {
    "division" : "{}",
    "schema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter name: (query) Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)

     - returns: RequestBuilder<DataTablesDomainEntityListing> 
     */
    open class func getFlowsDatatablesDivisionviewsWithRequestBuilder(expand: Expand_getFlowsDatatablesDivisionviews? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: SortBy_getFlowsDatatablesDivisionviews? = nil, sortOrder: String? = nil, divisionId: [String]? = nil, name: String? = nil) -> RequestBuilder<DataTablesDomainEntityListing> {        
        let path = "/api/v2/flows/datatables/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy?.rawValue, 
            "sortOrder": sortOrder, 
            "divisionId": divisionId, 
            "name": name
        ])

        let requestBuilder: RequestBuilder<DataTablesDomainEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    
    
    /**
     Get a pageable list of basic flow information objects filterable by query parameters.
     
     - parameter type: (query) Type (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter publishVersionId: (query) Publish version ID (optional)
     - parameter publishedAfter: (query) Published after (optional)
     - parameter publishedBefore: (query) Published before (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter includeSchemas: (query) Include variable schemas (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsDivisionviews(type: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, publishVersionId: String? = nil, publishedAfter: String? = nil, publishedBefore: String? = nil, divisionId: [String]? = nil, includeSchemas: Bool? = nil, completion: @escaping ((_ data: FlowDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsDivisionviewsWithRequestBuilder(type: type, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, publishVersionId: publishVersionId, publishedAfter: publishedAfter, publishedBefore: publishedBefore, divisionId: divisionId, includeSchemas: includeSchemas)
        requestBuilder.execute { (response: Response<FlowDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic flow information objects filterable by query parameters.
     - GET /api/v2/flows/divisionviews
     - This returns a simplified version of /flow consisting of name and type. If one or more IDs are specified, the search will fetch flows that match the given ID(s) and not use any additional supplied query parameters in the search.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "publishedVersion" : "{}",
    "outputSchema" : "{}",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "inputSchema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id",
    "type" : "BOT",
    "debugVersion" : "{}"
  }, {
    "division" : "{}",
    "publishedVersion" : "{}",
    "outputSchema" : "{}",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "inputSchema" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id",
    "type" : "BOT",
    "debugVersion" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter type: (query) Type (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter publishVersionId: (query) Publish version ID (optional)
     - parameter publishedAfter: (query) Published after (optional)
     - parameter publishedBefore: (query) Published before (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter includeSchemas: (query) Include variable schemas (optional)

     - returns: RequestBuilder<FlowDivisionViewEntityListing> 
     */
    open class func getFlowsDivisionviewsWithRequestBuilder(type: [String]? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, publishVersionId: String? = nil, publishedAfter: String? = nil, publishedBefore: String? = nil, divisionId: [String]? = nil, includeSchemas: Bool? = nil) -> RequestBuilder<FlowDivisionViewEntityListing> {        
        let path = "/api/v2/flows/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "type": type, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "publishVersionId": publishVersionId, 
            "publishedAfter": publishedAfter, 
            "publishedBefore": publishedBefore, 
            "divisionId": divisionId, 
            "includeSchemas": includeSchemas
        ])

        let requestBuilder: RequestBuilder<FlowDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a flow execution's details. Flow execution details are available for several days after the flow is started.
     
     - parameter flowExecutionId: (path) flow execution ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsExecution(flowExecutionId: String, completion: @escaping ((_ data: FlowRuntimeExecution?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsExecutionWithRequestBuilder(flowExecutionId: flowExecutionId)
        requestBuilder.execute { (response: Response<FlowRuntimeExecution>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a flow execution's details. Flow execution details are available for several days after the flow is started.
     - GET /api/v2/flows/executions/{flowExecutionId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "outputData" : {
    "key" : "{}"
  },
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "flowVersion" : "{}",
  "id" : "id",
  "dateLaunched" : "2000-01-23T04:56:07.000+00:00",
  "flowErrorInfo" : "{}",
  "completionReason" : "completionReason",
  "conversation" : "{}",
  "status" : "UNKNOWN"
}, statusCode=200}]
     
     - parameter flowExecutionId: (path) flow execution ID 

     - returns: RequestBuilder<FlowRuntimeExecution> 
     */
    open class func getFlowsExecutionWithRequestBuilder(flowExecutionId: String) -> RequestBuilder<FlowRuntimeExecution> {        
        var path = "/api/v2/flows/executions/{flowExecutionId}"
        let flowExecutionIdPreEscape = "\(flowExecutionId)"
        let flowExecutionIdPostEscape = flowExecutionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowExecutionId}", with: flowExecutionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowRuntimeExecution>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Fetch Architect Job Status
     
     - parameter jobId: (path) Job ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsJob(jobId: String, expand: [String]? = nil, completion: @escaping ((_ data: ArchitectJobStateResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsJobWithRequestBuilder(jobId: jobId, expand: expand)
        requestBuilder.execute { (response: Response<ArchitectJobStateResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Fetch Architect Job Status
     - GET /api/v2/flows/jobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "messages" : [ {
    "dateTime" : "2000-01-23T04:56:07.000+00:00",
    "text" : "text",
    "type" : "Error"
  }, {
    "dateTime" : "2000-01-23T04:56:07.000+00:00",
    "text" : "text",
    "type" : "Error"
  } ],
  "id" : "id",
  "flow" : "{}",
  "command" : "Publish",
  "status" : "Registered"
}, statusCode=200}]
     
     - parameter jobId: (path) Job ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<ArchitectJobStateResponse> 
     */
    open class func getFlowsJobWithRequestBuilder(jobId: String, expand: [String]? = nil) -> RequestBuilder<ArchitectJobStateResponse> {        
        var path = "/api/v2/flows/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<ArchitectJobStateResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a flow milestone
     
     - parameter milestoneId: (path) flow milestone ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsMilestone(milestoneId: String, completion: @escaping ((_ data: FlowMilestone?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsMilestoneWithRequestBuilder(milestoneId: milestoneId)
        requestBuilder.execute { (response: Response<FlowMilestone>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a flow milestone
     - GET /api/v2/flows/milestones/{milestoneId}
     - Returns a specified flow milestone
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter milestoneId: (path) flow milestone ID 

     - returns: RequestBuilder<FlowMilestone> 
     */
    open class func getFlowsMilestoneWithRequestBuilder(milestoneId: String) -> RequestBuilder<FlowMilestone> {        
        var path = "/api/v2/flows/milestones/{milestoneId}"
        let milestoneIdPreEscape = "\(milestoneId)"
        let milestoneIdPostEscape = milestoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{milestoneId}", with: milestoneIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowMilestone>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    /**
     Get a pageable list of flow milestones, filtered by query parameters
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsMilestones(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: FlowMilestoneListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsMilestonesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, _description: _description, nameOrDescription: nameOrDescription, divisionId: divisionId)
        requestBuilder.execute { (response: Response<FlowMilestoneListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of flow milestones, filtered by query parameters
     - GET /api/v2/flows/milestones
     - Multiple IDs can be specified, in which case all matching flow milestones will be returned, and no other parameters will be evaluated.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter divisionId: (query) division ID(s) (optional)

     - returns: RequestBuilder<FlowMilestoneListing> 
     */
    open class func getFlowsMilestonesWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<FlowMilestoneListing> {        
        let path = "/api/v2/flows/milestones"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "description": _description, 
            "nameOrDescription": nameOrDescription, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<FlowMilestoneListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic flow milestone information objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsMilestonesDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: FlowMilestoneDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsMilestonesDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<FlowMilestoneDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic flow milestone information objects filterable by query parameters.
     - GET /api/v2/flows/milestones/divisionviews
     - This returns flow milestones consisting of name and division. If one or more IDs are specified, the search will fetch flow milestones that match the given ID(s) and not use any additional supplied query parameters in the search.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter divisionId: (query) division ID(s) (optional)

     - returns: RequestBuilder<FlowMilestoneDivisionViewEntityListing> 
     */
    open class func getFlowsMilestonesDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<FlowMilestoneDivisionViewEntityListing> {        
        let path = "/api/v2/flows/milestones/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<FlowMilestoneDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a flow outcome
     
     - parameter flowOutcomeId: (path) flow outcome ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsOutcome(flowOutcomeId: String, completion: @escaping ((_ data: FlowOutcome?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsOutcomeWithRequestBuilder(flowOutcomeId: flowOutcomeId)
        requestBuilder.execute { (response: Response<FlowOutcome>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a flow outcome
     - GET /api/v2/flows/outcomes/{flowOutcomeId}
     - Returns a specified flow outcome
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter flowOutcomeId: (path) flow outcome ID 

     - returns: RequestBuilder<FlowOutcome> 
     */
    open class func getFlowsOutcomeWithRequestBuilder(flowOutcomeId: String) -> RequestBuilder<FlowOutcome> {        
        var path = "/api/v2/flows/outcomes/{flowOutcomeId}"
        let flowOutcomeIdPreEscape = "\(flowOutcomeId)"
        let flowOutcomeIdPostEscape = flowOutcomeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowOutcomeId}", with: flowOutcomeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowOutcome>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    /**
     Get a pageable list of flow outcomes, filtered by query parameters
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsOutcomes(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: FlowOutcomeListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsOutcomesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, _description: _description, nameOrDescription: nameOrDescription, divisionId: divisionId)
        requestBuilder.execute { (response: Response<FlowOutcomeListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of flow outcomes, filtered by query parameters
     - GET /api/v2/flows/outcomes
     - Multiple IDs can be specified, in which case all matching flow outcomes will be returned, and no other parameters will be evaluated.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "currentOperation" : {
      "errorMessageParams" : {
        "key" : "errorMessageParams"
      },
      "actionStatus" : "LOCKED",
      "errorMessage" : "errorMessage",
      "client" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "errorCode" : "errorCode",
      "id" : "id",
      "complete" : true,
      "user" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "errorDetails" : [ {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      }, {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      } ],
      "actionName" : "CREATE"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  }, {
    "division" : "{}",
    "currentOperation" : {
      "errorMessageParams" : {
        "key" : "errorMessageParams"
      },
      "actionStatus" : "LOCKED",
      "errorMessage" : "errorMessage",
      "client" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "errorCode" : "errorCode",
      "id" : "id",
      "complete" : true,
      "user" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "errorDetails" : [ {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      }, {
        "fieldName" : "fieldName",
        "entityName" : "entityName",
        "errorCode" : "errorCode",
        "entityId" : "entityId"
      } ],
      "actionName" : "CREATE"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter _description: (query) Description (optional)
     - parameter nameOrDescription: (query) Name or description (optional)
     - parameter divisionId: (query) division ID(s) (optional)

     - returns: RequestBuilder<FlowOutcomeListing> 
     */
    open class func getFlowsOutcomesWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, _description: String? = nil, nameOrDescription: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<FlowOutcomeListing> {        
        let path = "/api/v2/flows/outcomes"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "description": _description, 
            "nameOrDescription": nameOrDescription, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<FlowOutcomeListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a pageable list of basic flow outcome information objects filterable by query parameters.
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter divisionId: (query) division ID(s) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFlowsOutcomesDivisionviews(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil, completion: @escaping ((_ data: FlowOutcomeDivisionViewEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getFlowsOutcomesDivisionviewsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, divisionId: divisionId)
        requestBuilder.execute { (response: Response<FlowOutcomeDivisionViewEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a pageable list of basic flow outcome information objects filterable by query parameters.
     - GET /api/v2/flows/outcomes/divisionviews
     - This returns flow outcomes consisting of name and division. If one or more IDs are specified, the search will fetch flow outcomes that match the given ID(s) and not use any additional supplied query parameters in the search.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageNumber: (query) Page number (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter _id: (query) ID (optional)
     - parameter name: (query) Name (optional)
     - parameter divisionId: (query) division ID(s) (optional)

     - returns: RequestBuilder<FlowOutcomeDivisionViewEntityListing> 
     */
    open class func getFlowsOutcomesDivisionviewsWithRequestBuilder(pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, _id: [String]? = nil, name: String? = nil, divisionId: [String]? = nil) -> RequestBuilder<FlowOutcomeDivisionViewEntityListing> {        
        let path = "/api/v2/flows/outcomes/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "id": _id, 
            "name": name, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<FlowOutcomeDivisionViewEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Rebuild Dependency Tracking data for an organization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectDependencytrackingBuild(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectDependencytrackingBuildWithRequestBuilder()
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Rebuild Dependency Tracking data for an organization
     - POST /api/v2/architect/dependencytracking/build
     - Asynchronous.  Notification topic: v2.architect.dependencytracking.build
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth

     - returns: RequestBuilder<Void> 
     */
    open class func postArchitectDependencytrackingBuildWithRequestBuilder() -> RequestBuilder<Void> {        
        let path = "/api/v2/architect/dependencytracking/build"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Creates a new emergency group
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectEmergencygroups(body: EmergencyGroup, completion: @escaping ((_ data: EmergencyGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectEmergencygroupsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EmergencyGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new emergency group
     - POST /api/v2/architect/emergencygroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "enabled" : true,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "emergencyCallFlows" : [ {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  }, {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  } ],
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<EmergencyGroup> 
     */
    open class func postArchitectEmergencygroupsWithRequestBuilder(body: EmergencyGroup) -> RequestBuilder<EmergencyGroup> {        
        let path = "/api/v2/architect/emergencygroups"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EmergencyGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create IVR config.
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectIvrs(body: IVR, completion: @escaping ((_ data: IVR?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectIvrsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<IVR>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create IVR config.
     - POST /api/v2/architect/ivrs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "scheduleGroup" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "holidayHoursFlow" : "{}",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "openHoursFlow" : "{}",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "dnis" : [ "dnis", "dnis" ],
  "closedHoursFlow" : "{}"
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<IVR> 
     */
    open class func postArchitectIvrsWithRequestBuilder(body: IVR) -> RequestBuilder<IVR> {        
        let path = "/api/v2/architect/ivrs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<IVR>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Generate prompt history
     
     - parameter promptId: (path) Prompt ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectPromptHistory(promptId: String, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectPromptHistoryWithRequestBuilder(promptId: promptId)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Generate prompt history
     - POST /api/v2/architect/prompts/{promptId}/history
     - Asynchronous.  Notification topic: v2.architect.prompts.{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 

     - returns: RequestBuilder<Operation> 
     */
    open class func postArchitectPromptHistoryWithRequestBuilder(promptId: String) -> RequestBuilder<Operation> {        
        var path = "/api/v2/architect/prompts/{promptId}/history"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new user prompt resource
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectPromptResources(promptId: String, body: PromptAssetCreate, completion: @escaping ((_ data: PromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectPromptResourcesWithRequestBuilder(promptId: promptId, body: body)
        requestBuilder.execute { (response: Response<PromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new user prompt resource
     - POST /api/v2/architect/prompts/{promptId}/resources
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  

     - returns: RequestBuilder<PromptAsset> 
     */
    open class func postArchitectPromptResourcesWithRequestBuilder(promptId: String, body: PromptAssetCreate) -> RequestBuilder<PromptAsset> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a new user prompt
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectPrompts(body: Prompt, completion: @escaping ((_ data: Prompt?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectPromptsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Prompt>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new user prompt
     - POST /api/v2/architect/prompts
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "currentOperation" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "resources" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<Prompt> 
     */
    open class func postArchitectPromptsWithRequestBuilder(body: Prompt) -> RequestBuilder<Prompt> {        
        let path = "/api/v2/architect/prompts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Prompt>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Creates a new schedule group
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectSchedulegroups(body: ScheduleGroup, completion: @escaping ((_ data: ScheduleGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectSchedulegroupsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<ScheduleGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new schedule group
     - POST /api/v2/architect/schedulegroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "closedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "timeZone" : "timeZone",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "holidaySchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "openSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<ScheduleGroup> 
     */
    open class func postArchitectSchedulegroupsWithRequestBuilder(body: ScheduleGroup) -> RequestBuilder<ScheduleGroup> {        
        let path = "/api/v2/architect/schedulegroups"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ScheduleGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a new schedule.
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectSchedules(body: Schedule, completion: @escaping ((_ data: Schedule?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectSchedulesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Schedule>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new schedule.
     - POST /api/v2/architect/schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "start" : "start",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "rrule" : "rrule",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "end" : "end",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<Schedule> 
     */
    open class func postArchitectSchedulesWithRequestBuilder(body: Schedule) -> RequestBuilder<Schedule> {        
        let path = "/api/v2/architect/schedules"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Schedule>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Generate system prompt history
     
     - parameter promptId: (path) promptId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectSystempromptHistory(promptId: String, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectSystempromptHistoryWithRequestBuilder(promptId: promptId)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Generate system prompt history
     - POST /api/v2/architect/systemprompts/{promptId}/history
     - Asynchronous.  Notification topic: v2.architect.systemprompts.{systemPromptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter promptId: (path) promptId 

     - returns: RequestBuilder<Operation> 
     */
    open class func postArchitectSystempromptHistoryWithRequestBuilder(promptId: String) -> RequestBuilder<Operation> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/history"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create system prompt resource override.
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postArchitectSystempromptResources(promptId: String, body: SystemPromptAsset, completion: @escaping ((_ data: SystemPromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = postArchitectSystempromptResourcesWithRequestBuilder(promptId: promptId, body: body)
        requestBuilder.execute { (response: Response<SystemPromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create system prompt resource override.
     - POST /api/v2/architect/systemprompts/{promptId}/resources
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "hasDefault" : true,
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  

     - returns: RequestBuilder<SystemPromptAsset> 
     */
    open class func postArchitectSystempromptResourcesWithRequestBuilder(promptId: String, body: SystemPromptAsset) -> RequestBuilder<SystemPromptAsset> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/resources"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SystemPromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Generate flow history
     
     - parameter flowId: (path) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowHistory(flowId: String, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowHistoryWithRequestBuilder(flowId: flowId)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Generate flow history
     - POST /api/v2/flows/{flowId}/history
     - Asynchronous.  Notification topic: v2.flows.{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 

     - returns: RequestBuilder<Operation> 
     */
    open class func postFlowHistoryWithRequestBuilder(flowId: String) -> RequestBuilder<Operation> {        
        var path = "/api/v2/flows/{flowId}/history"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create flow version
     
     - parameter flowId: (path) Flow ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowVersions(flowId: String, body: [String:JSON], completion: @escaping ((_ data: FlowVersion?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowVersionsWithRequestBuilder(flowId: flowId, body: body)
        requestBuilder.execute { (response: Response<FlowVersion>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create flow version
     - POST /api/v2/flows/{flowId}/versions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateSaved" : 1,
  "generationId" : "generationId",
  "debug" : true,
  "outputSchema" : {
    "$schema" : "$schema",
    "description" : "description",
    "id" : "id",
    "additionalProperties" : "{}",
    "title" : "title",
    "type" : "type",
    "required" : [ "required", "required" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "inputSchema" : {
    "$schema" : "$schema",
    "description" : "description",
    "id" : "id",
    "additionalProperties" : "{}",
    "title" : "title",
    "type" : "type",
    "required" : [ "required", "required" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "createdByClient" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
  "nluInfo" : "{}",
  "dateCheckedIn" : 6,
  "type" : "PUBLISH",
  "secure" : true,
  "configurationUri" : "configurationUri",
  "datePublished" : "2000-01-23T04:56:07.000+00:00",
  "configurationVersion" : "configurationVersion",
  "dateCreated" : 0,
  "publishResultUri" : "https://openapi-generator.tech",
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "createdBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "commitVersion" : "commitVersion"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter body: (body)  

     - returns: RequestBuilder<FlowVersion> 
     */
    open class func postFlowVersionsWithRequestBuilder(flowId: String, body: [String:JSON]) -> RequestBuilder<FlowVersion> {        
        var path = "/api/v2/flows/{flowId}/versions"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowVersion>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create flow
     
     - parameter body: (body)  
     - parameter language: (query) Language (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlows(body: Flow, language: String? = nil, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsWithRequestBuilder(body: body, language: language)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create flow
     - POST /api/v2/flows
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body)  
     - parameter language: (query) Language (optional)

     - returns: RequestBuilder<Flow> 
     */
    open class func postFlowsWithRequestBuilder(body: Flow, language: String? = nil) -> RequestBuilder<Flow> {        
        let path = "/api/v2/flows"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Check-in flow
     
     - parameter flow: (query) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsCheckin(flow: String, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsCheckinWithRequestBuilder(flow: flow)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Check-in flow
     - POST /api/v2/flows/actions/checkin
     - Asynchronous.  Notification topic: v2.flows.{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 

     - returns: RequestBuilder<Operation> 
     */
    open class func postFlowsActionsCheckinWithRequestBuilder(flow: String) -> RequestBuilder<Operation> {        
        let path = "/api/v2/flows/actions/checkin"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow
        ])

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Check-out flow
     
     - parameter flow: (query) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsCheckout(flow: String, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsCheckoutWithRequestBuilder(flow: flow)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Check-out flow
     - POST /api/v2/flows/actions/checkout
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 

     - returns: RequestBuilder<Flow> 
     */
    open class func postFlowsActionsCheckoutWithRequestBuilder(flow: String) -> RequestBuilder<Flow> {        
        let path = "/api/v2/flows/actions/checkout"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Deactivate flow
     
     - parameter flow: (query) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsDeactivate(flow: String, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsDeactivateWithRequestBuilder(flow: flow)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Deactivate flow
     - POST /api/v2/flows/actions/deactivate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 

     - returns: RequestBuilder<Flow> 
     */
    open class func postFlowsActionsDeactivateWithRequestBuilder(flow: String) -> RequestBuilder<Flow> {        
        let path = "/api/v2/flows/actions/deactivate"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Publish flow
     
     - parameter flow: (query) Flow ID 
     - parameter version: (query) version (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsPublish(flow: String, version: String? = nil, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsPublishWithRequestBuilder(flow: flow, version: version)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Publish flow
     - POST /api/v2/flows/actions/publish
     - Asynchronous.  Notification topic: v2.flows.{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 
     - parameter version: (query) version (optional)

     - returns: RequestBuilder<Operation> 
     */
    open class func postFlowsActionsPublishWithRequestBuilder(flow: String, version: String? = nil) -> RequestBuilder<Operation> {        
        let path = "/api/v2/flows/actions/publish"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow, 
            "version": version
        ])

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Revert flow
     
     - parameter flow: (query) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsRevert(flow: String, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsRevertWithRequestBuilder(flow: flow)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Revert flow
     - POST /api/v2/flows/actions/revert
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 

     - returns: RequestBuilder<Flow> 
     */
    open class func postFlowsActionsRevertWithRequestBuilder(flow: String) -> RequestBuilder<Flow> {        
        let path = "/api/v2/flows/actions/revert"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Unlock flow
     
     - parameter flow: (query) Flow ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsActionsUnlock(flow: String, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsActionsUnlockWithRequestBuilder(flow: flow)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Unlock flow
     - POST /api/v2/flows/actions/unlock
     - Allows for unlocking a flow in the case where there is no flow configuration available, and thus a check-in will not unlock the flow. The user must have Architect Admin permissions to perform this action.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flow: (query) Flow ID 

     - returns: RequestBuilder<Flow> 
     */
    open class func postFlowsActionsUnlockWithRequestBuilder(flow: String) -> RequestBuilder<Flow> {        
        let path = "/api/v2/flows/actions/unlock"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "flow": flow
        ])

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Begin an export process for exporting all rows from a datatable
     
     - parameter datatableId: (path) id of datatable 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsDatatableExportJobs(datatableId: String, completion: @escaping ((_ data: DataTableExportJob?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsDatatableExportJobsWithRequestBuilder(datatableId: datatableId)
        requestBuilder.execute { (response: Response<DataTableExportJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Begin an export process for exporting all rows from a datatable
     - POST /api/v2/flows/datatables/{datatableId}/export/jobs
     - Create an export job for exporting rows. The caller can then poll for status of the export using the token returned in the response
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "countRecordsProcessed" : 0,
  "errorInformation" : "{}",
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "downloadURI" : "https://openapi-generator.tech",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 

     - returns: RequestBuilder<DataTableExportJob> 
     */
    open class func postFlowsDatatableExportJobsWithRequestBuilder(datatableId: String) -> RequestBuilder<DataTableExportJob> {        
        var path = "/api/v2/flows/datatables/{datatableId}/export/jobs"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DataTableExportJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Begin an import process for importing rows into a datatable
     
     - parameter datatableId: (path) id of datatable 
     - parameter body: (body) import job information 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsDatatableImportJobs(datatableId: String, body: DataTableImportJob, completion: @escaping ((_ data: DataTableImportJob?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsDatatableImportJobsWithRequestBuilder(datatableId: datatableId, body: body)
        requestBuilder.execute { (response: Response<DataTableImportJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Begin an import process for importing rows into a datatable
     - POST /api/v2/flows/datatables/{datatableId}/import/jobs
     - Create an import job for importing rows. The caller can then poll for status of the import using the token returned in the response
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "importMode" : "ReplaceAll",
  "countRecordsFailed" : 1,
  "countRecordsUpdated" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "uploadURI" : "https://openapi-generator.tech",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "errorInformation" : "{}",
  "countRecordsDeleted" : 6,
  "dateCompleted" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "id" : "id",
  "status" : "WaitingForUpload"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter body: (body) import job information 

     - returns: RequestBuilder<DataTableImportJob> 
     */
    open class func postFlowsDatatableImportJobsWithRequestBuilder(datatableId: String, body: DataTableImportJob) -> RequestBuilder<DataTableImportJob> {        
        var path = "/api/v2/flows/datatables/{datatableId}/import/jobs"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DataTableImportJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new row entry for the datatable.
     
     - parameter datatableId: (path) id of datatable 
     - parameter dataTableRow: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsDatatableRows(datatableId: String, dataTableRow: [String:JSON], completion: @escaping ((_ data: [String:JSON]?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsDatatableRowsWithRequestBuilder(datatableId: datatableId, dataTableRow: dataTableRow)
        requestBuilder.execute { (response: Response<[String:JSON]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new row entry for the datatable.
     - POST /api/v2/flows/datatables/{datatableId}/rows
     - Will add the passed in row entry to the datatable with the given datatableId after verifying it against the schema.  When building the request body within API Explorer, Pro mode should be used. The DataTableRow should be a json-ized' stream of key -> value pairs {      \"Field1\": \"XYZZY\",      \"Field2\": false,      \"KEY\": \"27272\"  }
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter datatableId: (path) id of datatable 
     - parameter dataTableRow: (body)  

     - returns: RequestBuilder<[String:JSON]> 
     */
    open class func postFlowsDatatableRowsWithRequestBuilder(datatableId: String, dataTableRow: [String:JSON]) -> RequestBuilder<[String:JSON]> {        
        var path = "/api/v2/flows/datatables/{datatableId}/rows"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: dataTableRow)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String:JSON]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a new datatable with the specified json-schema definition
     
     - parameter body: (body) datatable json-schema 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsDatatables(body: DataTable, completion: @escaping ((_ data: DataTable?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsDatatablesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<DataTable>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new datatable with the specified json-schema definition
     - POST /api/v2/flows/datatables
     - This will create a new datatable with fields that match the property definitions in the JSON schema.  The schema's title field will be overridden by the name field in the DataTable object.  See also http://json-schema.org/
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "schema" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body) datatable json-schema 

     - returns: RequestBuilder<DataTable> 
     */
    open class func postFlowsDatatablesWithRequestBuilder(body: DataTable) -> RequestBuilder<DataTable> {        
        let path = "/api/v2/flows/datatables"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DataTable>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.
     
     - parameter flowLaunchRequest: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsExecutions(flowLaunchRequest: FlowExecutionLaunchRequest, completion: @escaping ((_ data: FlowExecutionLaunchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsExecutionsWithRequestBuilder(flowLaunchRequest: flowLaunchRequest)
        requestBuilder.execute { (response: Response<FlowExecutionLaunchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.
     - POST /api/v2/flows/executions
     - The launch is asynchronous, it returns as soon as the flow starts. You can use the returned ID to query its status if you need.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "flowVersion" : "{}",
  "id" : "id"
}, statusCode=200}]
     
     - parameter flowLaunchRequest: (body)  

     - returns: RequestBuilder<FlowExecutionLaunchResponse> 
     */
    open class func postFlowsExecutionsWithRequestBuilder(flowLaunchRequest: FlowExecutionLaunchRequest) -> RequestBuilder<FlowExecutionLaunchResponse> {        
        let path = "/api/v2/flows/executions"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: flowLaunchRequest)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowExecutionLaunchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    /**
     Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsJobs(completion: @escaping ((_ data: RegisterArchitectJobResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsJobsWithRequestBuilder()
        requestBuilder.execute { (response: Response<RegisterArchitectJobResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.
     - POST /api/v2/flows/jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headers" : {
    "key" : "headers"
  },
  "presignedUrl" : "presignedUrl",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id"
}, statusCode=200}]

     - returns: RequestBuilder<RegisterArchitectJobResponse> 
     */
    open class func postFlowsJobsWithRequestBuilder() -> RequestBuilder<RegisterArchitectJobResponse> {        
        let path = "/api/v2/flows/jobs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<RegisterArchitectJobResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a flow milestone
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsMilestones(body: FlowMilestone? = nil, completion: @escaping ((_ data: FlowMilestone?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsMilestonesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<FlowMilestone>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a flow milestone
     - POST /api/v2/flows/milestones
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<FlowMilestone> 
     */
    open class func postFlowsMilestonesWithRequestBuilder(body: FlowMilestone? = nil) -> RequestBuilder<FlowMilestone> {        
        let path = "/api/v2/flows/milestones"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowMilestone>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a flow outcome
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFlowsOutcomes(body: FlowOutcome? = nil, completion: @escaping ((_ data: FlowOutcome?,_ error: Error?) -> Void)) {
        let requestBuilder = postFlowsOutcomesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<FlowOutcome>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a flow outcome
     - POST /api/v2/flows/outcomes
     - Asynchronous.  Notification topic: v2.flows.outcomes.{flowOutcomeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<FlowOutcome> 
     */
    open class func postFlowsOutcomesWithRequestBuilder(body: FlowOutcome? = nil) -> RequestBuilder<FlowOutcome> {        
        let path = "/api/v2/flows/outcomes"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowOutcome>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Updates a emergency group by ID
     
     - parameter emergencyGroupId: (path) Emergency group ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectEmergencygroup(emergencyGroupId: String, body: EmergencyGroup, completion: @escaping ((_ data: EmergencyGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: emergencyGroupId, body: body)
        requestBuilder.execute { (response: Response<EmergencyGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a emergency group by ID
     - PUT /api/v2/architect/emergencygroups/{emergencyGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "enabled" : true,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "emergencyCallFlows" : [ {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  }, {
    "emergencyFlow" : "{}",
    "ivrs" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    } ]
  } ],
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter emergencyGroupId: (path) Emergency group ID 
     - parameter body: (body)  

     - returns: RequestBuilder<EmergencyGroup> 
     */
    open class func putArchitectEmergencygroupWithRequestBuilder(emergencyGroupId: String, body: EmergencyGroup) -> RequestBuilder<EmergencyGroup> {        
        var path = "/api/v2/architect/emergencygroups/{emergencyGroupId}"
        let emergencyGroupIdPreEscape = "\(emergencyGroupId)"
        let emergencyGroupIdPostEscape = emergencyGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{emergencyGroupId}", with: emergencyGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EmergencyGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update an IVR Config.
     
     - parameter ivrId: (path) IVR id 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectIvr(ivrId: String, body: IVR, completion: @escaping ((_ data: IVR?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectIvrWithRequestBuilder(ivrId: ivrId, body: body)
        requestBuilder.execute { (response: Response<IVR>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an IVR Config.
     - PUT /api/v2/architect/ivrs/{ivrId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "scheduleGroup" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "holidayHoursFlow" : "{}",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "openHoursFlow" : "{}",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "dnis" : [ "dnis", "dnis" ],
  "closedHoursFlow" : "{}"
}, statusCode=200}]
     
     - parameter ivrId: (path) IVR id 
     - parameter body: (body)  

     - returns: RequestBuilder<IVR> 
     */
    open class func putArchitectIvrWithRequestBuilder(ivrId: String, body: IVR) -> RequestBuilder<IVR> {        
        var path = "/api/v2/architect/ivrs/{ivrId}"
        let ivrIdPreEscape = "\(ivrId)"
        let ivrIdPostEscape = ivrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ivrId}", with: ivrIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<IVR>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update specified user prompt
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectPrompt(promptId: String, body: Prompt, completion: @escaping ((_ data: Prompt?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectPromptWithRequestBuilder(promptId: promptId, body: body)
        requestBuilder.execute { (response: Response<Prompt>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update specified user prompt
     - PUT /api/v2/architect/prompts/{promptId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "currentOperation" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "resources" : [ {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  }, {
    "durationSeconds" : 0.8008281904610115,
    "mediaUri" : "mediaUri",
    "selfUri" : "https://openapi-generator.tech",
    "uploadStatus" : "created",
    "language" : "language",
    "languageDefault" : true,
    "tags" : {
      "key" : [ "tags", "tags" ]
    },
    "uploadUri" : "uploadUri",
    "ttsString" : "ttsString",
    "promptId" : "promptId",
    "name" : "name",
    "id" : "id",
    "text" : "text"
  } ],
  "id" : "id"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter body: (body)  

     - returns: RequestBuilder<Prompt> 
     */
    open class func putArchitectPromptWithRequestBuilder(promptId: String, body: Prompt) -> RequestBuilder<Prompt> {        
        var path = "/api/v2/architect/prompts/{promptId}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Prompt>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update specified user prompt resource
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectPromptResource(promptId: String, languageCode: String, body: PromptAsset, completion: @escaping ((_ data: PromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectPromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode, body: body)
        requestBuilder.execute { (response: Response<PromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update specified user prompt resource
     - PUT /api/v2/architect/prompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter body: (body)  

     - returns: RequestBuilder<PromptAsset> 
     */
    open class func putArchitectPromptResourceWithRequestBuilder(promptId: String, languageCode: String, body: PromptAsset) -> RequestBuilder<PromptAsset> {        
        var path = "/api/v2/architect/prompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update schedule by ID
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectSchedule(scheduleId: String, body: Schedule, completion: @escaping ((_ data: Schedule?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectScheduleWithRequestBuilder(scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<Schedule>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update schedule by ID
     - PUT /api/v2/architect/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "start" : "start",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "rrule" : "rrule",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "end" : "end",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter body: (body)  

     - returns: RequestBuilder<Schedule> 
     */
    open class func putArchitectScheduleWithRequestBuilder(scheduleId: String, body: Schedule) -> RequestBuilder<Schedule> {        
        var path = "/api/v2/architect/schedules/{scheduleId}"
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Schedule>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Updates a schedule group by ID
     
     - parameter scheduleGroupId: (path) Schedule group ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectSchedulegroup(scheduleGroupId: String, body: ScheduleGroup, completion: @escaping ((_ data: ScheduleGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: scheduleGroupId, body: body)
        requestBuilder.execute { (response: Response<ScheduleGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a schedule group by ID
     - PUT /api/v2/architect/schedulegroups/{scheduleGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "closedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "timeZone" : "timeZone",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "createdByApp" : "createdByApp",
  "version" : 0,
  "division" : "{}",
  "holidaySchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "createdBy",
  "name" : "name",
  "modifiedByApp" : "modifiedByApp",
  "modifiedBy" : "modifiedBy",
  "id" : "id",
  "state" : "active",
  "openSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter scheduleGroupId: (path) Schedule group ID 
     - parameter body: (body)  

     - returns: RequestBuilder<ScheduleGroup> 
     */
    open class func putArchitectSchedulegroupWithRequestBuilder(scheduleGroupId: String, body: ScheduleGroup) -> RequestBuilder<ScheduleGroup> {        
        var path = "/api/v2/architect/schedulegroups/{scheduleGroupId}"
        let scheduleGroupIdPreEscape = "\(scheduleGroupId)"
        let scheduleGroupIdPostEscape = scheduleGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleGroupId}", with: scheduleGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ScheduleGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Updates a system prompt resource override.
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putArchitectSystempromptResource(promptId: String, languageCode: String, body: SystemPromptAsset, completion: @escaping ((_ data: SystemPromptAsset?,_ error: Error?) -> Void)) {
        let requestBuilder = putArchitectSystempromptResourceWithRequestBuilder(promptId: promptId, languageCode: languageCode, body: body)
        requestBuilder.execute { (response: Response<SystemPromptAsset>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a system prompt resource override.
     - PUT /api/v2/architect/systemprompts/{promptId}/resources/{languageCode}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "durationSeconds" : 0.8008281904610115,
  "mediaUri" : "mediaUri",
  "selfUri" : "https://openapi-generator.tech",
  "uploadStatus" : "created",
  "language" : "language",
  "languageDefault" : true,
  "tags" : {
    "key" : [ "tags", "tags" ]
  },
  "hasDefault" : true,
  "uploadUri" : "uploadUri",
  "ttsString" : "ttsString",
  "promptId" : "promptId",
  "name" : "name",
  "id" : "id",
  "text" : "text"
}, statusCode=200}]
     
     - parameter promptId: (path) Prompt ID 
     - parameter languageCode: (path) Language 
     - parameter body: (body)  

     - returns: RequestBuilder<SystemPromptAsset> 
     */
    open class func putArchitectSystempromptResourceWithRequestBuilder(promptId: String, languageCode: String, body: SystemPromptAsset) -> RequestBuilder<SystemPromptAsset> {        
        var path = "/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}"
        let promptIdPreEscape = "\(promptId)"
        let promptIdPostEscape = promptIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{promptId}", with: promptIdPostEscape, options: .literal, range: nil)
        let languageCodePreEscape = "\(languageCode)"
        let languageCodePostEscape = languageCodePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{languageCode}", with: languageCodePostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SystemPromptAsset>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update flow
     
     - parameter flowId: (path) Flow ID 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putFlow(flowId: String, body: Flow, completion: @escaping ((_ data: Flow?,_ error: Error?) -> Void)) {
        let requestBuilder = putFlowWithRequestBuilder(flowId: flowId, body: body)
        requestBuilder.execute { (response: Response<Flow>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update flow
     - PUT /api/v2/flows/{flowId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "publishedBy" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "savedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "outputSchema" : "{}",
  "inputSchema" : "{}",
  "compatibleFlowTypes" : [ "BOT", "BOT" ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "active" : true,
  "nluInfo" : "{}",
  "type" : "BOT",
  "lockedUser" : "{}",
  "debugVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "lockedClient" : "{}",
  "division" : "{}",
  "publishedVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "currentOperation" : {
    "errorMessageParams" : {
      "key" : "errorMessageParams"
    },
    "actionStatus" : "LOCKED",
    "errorMessage" : "errorMessage",
    "client" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "errorCode" : "errorCode",
    "id" : "id",
    "complete" : true,
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "errorDetails" : [ {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    }, {
      "fieldName" : "fieldName",
      "entityName" : "entityName",
      "errorCode" : "errorCode",
      "entityId" : "entityId"
    } ],
    "actionName" : "CREATE"
  },
  "system" : true,
  "deleted" : true,
  "supportedLanguages" : [ {
    "isDefault" : true,
    "language" : "language"
  }, {
    "isDefault" : true,
    "language" : "language"
  } ],
  "name" : "name",
  "checkedInVersion" : {
    "dateSaved" : 1,
    "generationId" : "generationId",
    "debug" : true,
    "outputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "inputSchema" : {
      "$schema" : "$schema",
      "description" : "description",
      "id" : "id",
      "additionalProperties" : "{}",
      "title" : "title",
      "type" : "type",
      "required" : [ "required", "required" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "compatibleFlowTypes" : [ "BOT", "BOT" ],
    "createdByClient" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "datePublishedEnd" : "2000-01-23T04:56:07.000+00:00",
    "nluInfo" : "{}",
    "dateCheckedIn" : 6,
    "type" : "PUBLISH",
    "secure" : true,
    "configurationUri" : "configurationUri",
    "datePublished" : "2000-01-23T04:56:07.000+00:00",
    "configurationVersion" : "configurationVersion",
    "dateCreated" : 0,
    "publishResultUri" : "https://openapi-generator.tech",
    "supportedLanguages" : [ {
      "isDefault" : true,
      "language" : "language"
    }, {
      "isDefault" : true,
      "language" : "language"
    } ],
    "createdBy" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "commitVersion" : "commitVersion"
  },
  "id" : "id"
}, statusCode=200}]
     
     - parameter flowId: (path) Flow ID 
     - parameter body: (body)  

     - returns: RequestBuilder<Flow> 
     */
    open class func putFlowWithRequestBuilder(flowId: String, body: Flow) -> RequestBuilder<Flow> {        
        var path = "/api/v2/flows/{flowId}"
        let flowIdPreEscape = "\(flowId)"
        let flowIdPostEscape = flowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowId}", with: flowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Flow>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    public enum Expand_putFlowsDatatable: String { 
        case schema = "schema"
    }

    
    /**
     Updates a specific datatable by id
     
     - parameter datatableId: (path) id of datatable 
     - parameter body: (body) datatable json-schema 
     - parameter expand: (query) Expand instructions for the result (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putFlowsDatatable(datatableId: String, body: DataTable, expand: Expand_putFlowsDatatable? = nil, completion: @escaping ((_ data: DataTable?,_ error: Error?) -> Void)) {
        let requestBuilder = putFlowsDatatableWithRequestBuilder(datatableId: datatableId, body: body, expand: expand)
        requestBuilder.execute { (response: Response<DataTable>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a specific datatable by id
     - PUT /api/v2/flows/datatables/{datatableId}
     - Updates a schema for a datatable with the given datatableId -updates allow only new fields to be added in the schema, no changes or removals of existing fields.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "schema" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter datatableId: (path) id of datatable 
     - parameter body: (body) datatable json-schema 
     - parameter expand: (query) Expand instructions for the result (optional)

     - returns: RequestBuilder<DataTable> 
     */
    open class func putFlowsDatatableWithRequestBuilder(datatableId: String, body: DataTable, expand: Expand_putFlowsDatatable? = nil) -> RequestBuilder<DataTable> {        
        var path = "/api/v2/flows/datatables/{datatableId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<DataTable>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update a row entry
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) the key for the row 
     - parameter body: (body) datatable row (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putFlowsDatatableRow(datatableId: String, rowId: String, body: [String:JSON]? = nil, completion: @escaping ((_ data: [String:JSON]?,_ error: Error?) -> Void)) {
        let requestBuilder = putFlowsDatatableRowWithRequestBuilder(datatableId: datatableId, rowId: rowId, body: body)
        requestBuilder.execute { (response: Response<[String:JSON]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a row entry
     - PUT /api/v2/flows/datatables/{datatableId}/rows/{rowId}
     - Updates a row with the given rowId (the value of the key field) to the new values.  When building the request body within API Explorer, Pro mode should be used. The DataTableRow should be a json-ized' stream of key -> value pairs {     \"Field1\": \"XYZZY\",     \"Field2\": false,     \"KEY\": \"27272\" }
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter datatableId: (path) id of datatable 
     - parameter rowId: (path) the key for the row 
     - parameter body: (body) datatable row (optional)

     - returns: RequestBuilder<[String:JSON]> 
     */
    open class func putFlowsDatatableRowWithRequestBuilder(datatableId: String, rowId: String, body: [String:JSON]? = nil) -> RequestBuilder<[String:JSON]> {        
        var path = "/api/v2/flows/datatables/{datatableId}/rows/{rowId}"
        let datatableIdPreEscape = "\(datatableId)"
        let datatableIdPostEscape = datatableIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{datatableId}", with: datatableIdPostEscape, options: .literal, range: nil)
        let rowIdPreEscape = "\(rowId)"
        let rowIdPostEscape = rowIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rowId}", with: rowIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String:JSON]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Updates a flow milestone
     
     - parameter milestoneId: (path) flow milestone ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putFlowsMilestone(milestoneId: String, body: FlowMilestone? = nil, completion: @escaping ((_ data: FlowMilestone?,_ error: Error?) -> Void)) {
        let requestBuilder = putFlowsMilestoneWithRequestBuilder(milestoneId: milestoneId, body: body)
        requestBuilder.execute { (response: Response<FlowMilestone>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a flow milestone
     - PUT /api/v2/flows/milestones/{milestoneId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "id" : "id"
}, statusCode=200}]
     
     - parameter milestoneId: (path) flow milestone ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<FlowMilestone> 
     */
    open class func putFlowsMilestoneWithRequestBuilder(milestoneId: String, body: FlowMilestone? = nil) -> RequestBuilder<FlowMilestone> {        
        var path = "/api/v2/flows/milestones/{milestoneId}"
        let milestoneIdPreEscape = "\(milestoneId)"
        let milestoneIdPostEscape = milestoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{milestoneId}", with: milestoneIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<FlowMilestone>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Updates a flow outcome
     
     - parameter flowOutcomeId: (path) flow outcome ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putFlowsOutcome(flowOutcomeId: String, body: FlowOutcome? = nil, completion: @escaping ((_ data: Operation?,_ error: Error?) -> Void)) {
        let requestBuilder = putFlowsOutcomeWithRequestBuilder(flowOutcomeId: flowOutcomeId, body: body)
        requestBuilder.execute { (response: Response<Operation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a flow outcome
     - PUT /api/v2/flows/outcomes/{flowOutcomeId}
     - Updates a flow outcome.  Asynchronous.  Notification topic: v2.flowoutcomes.{flowoutcomeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "errorMessageParams" : {
    "key" : "errorMessageParams"
  },
  "actionStatus" : "LOCKED",
  "errorMessage" : "errorMessage",
  "client" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "errorCode" : "errorCode",
  "id" : "id",
  "complete" : true,
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "errorDetails" : [ {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  }, {
    "fieldName" : "fieldName",
    "entityName" : "entityName",
    "errorCode" : "errorCode",
    "entityId" : "entityId"
  } ],
  "actionName" : "CREATE"
}, statusCode=200}]
     
     - parameter flowOutcomeId: (path) flow outcome ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Operation> 
     */
    open class func putFlowsOutcomeWithRequestBuilder(flowOutcomeId: String, body: FlowOutcome? = nil) -> RequestBuilder<Operation> {        
        var path = "/api/v2/flows/outcomes/{flowOutcomeId}"
        let flowOutcomeIdPreEscape = "\(flowOutcomeId)"
        let flowOutcomeIdPostEscape = flowOutcomeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{flowOutcomeId}", with: flowOutcomeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Operation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
