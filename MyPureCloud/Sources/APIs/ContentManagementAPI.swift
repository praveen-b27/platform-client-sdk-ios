//
// ContentManagementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ContentManagementAPI {
    
    
    /**
     Delete a document.
     
     - parameter documentId: (path) Document ID 
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementDocument(documentId: String, _override: Bool? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementDocumentWithRequestBuilder(documentId: documentId, _override: _override)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a document.
     - DELETE /api/v2/contentmanagement/documents/{documentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter documentId: (path) Document ID 
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementDocumentWithRequestBuilder(documentId: String, _override: Bool? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        let documentIdPreEscape = "\(documentId)"
        let documentIdPostEscape = documentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{documentId}", with: documentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "override": _override
        ])

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Deletes an existing share.
     
     - parameter shareId: (path) Share ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementShare(shareId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementShareWithRequestBuilder(shareId: shareId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes an existing share.
     - DELETE /api/v2/contentmanagement/shares/{shareId}
     - This revokes sharing rights specified in the share record
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter shareId: (path) Share ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementShareWithRequestBuilder(shareId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/shares/{shareId}"
        let shareIdPreEscape = "\(shareId)"
        let shareIdPostEscape = shareIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{shareId}", with: shareIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Cancel the command for this status
     
     - parameter statusId: (path) Status ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementStatusStatusId(statusId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementStatusStatusIdWithRequestBuilder(statusId: statusId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Cancel the command for this status
     - DELETE /api/v2/contentmanagement/status/{statusId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter statusId: (path) Status ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementStatusStatusIdWithRequestBuilder(statusId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/status/{statusId}"
        let statusIdPreEscape = "\(statusId)"
        let statusIdPostEscape = statusIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{statusId}", with: statusIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter moveChildrenToWorkspaceId: (query) New location for objects in deleted workspace. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementWorkspace(workspaceId: String, moveChildrenToWorkspaceId: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementWorkspaceWithRequestBuilder(workspaceId: workspaceId, moveChildrenToWorkspaceId: moveChildrenToWorkspaceId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a workspace
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter moveChildrenToWorkspaceId: (query) New location for objects in deleted workspace. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementWorkspaceWithRequestBuilder(workspaceId: String, moveChildrenToWorkspaceId: String? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "moveChildrenToWorkspaceId": moveChildrenToWorkspaceId
        ])

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a member from a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementWorkspaceMember(workspaceId: String, memberId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: workspaceId, memberId: memberId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a member from a workspace
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: String, memberId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let memberIdPreEscape = "\(memberId)"
        let memberIdPostEscape = memberIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{memberId}", with: memberIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteContentmanagementWorkspaceTagvalue(workspaceId: String, tagId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: workspaceId, tagId: tagId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete workspace tag
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - Delete a tag from a workspace. Will remove this tag from all documents.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: String, tagId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let tagIdPreEscape = "\(tagId)"
        let tagIdPostEscape = tagIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tagId}", with: tagIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Get a document.
     
     - parameter documentId: (path) Document ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementDocument(documentId: String, expand: [String]? = nil, completion: @escaping ((_ data: Document?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementDocumentWithRequestBuilder(documentId: documentId, expand: expand)
        requestBuilder.execute { (response: Response<Document>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a document.
     - GET /api/v2/contentmanagement/documents/{documentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "downloadSharingUri" : "https://openapi-generator.tech",
  "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
  "uploadStatus" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "acl" : [ "acl", "acl" ],
  "uploadMethod" : "SINGLE_PUT",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "systemType" : "DOCUMENT",
  "changeNumber" : 0,
  "id" : "id",
  "tagValues" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  } ],
  "uploadedBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentType" : "contentType",
  "callerAddress" : "callerAddress",
  "pageCount" : 1,
  "read" : true,
  "sharingStatus" : "NONE",
  "selfUri" : "https://openapi-generator.tech",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "tags" : [ "tags", "tags" ],
  "receiverAddress" : "receiverAddress",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "lockedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "dateExpires" : "2000-01-23T04:56:07.000+00:00",
    "action" : "UPDATE"
  },
  "filename" : "filename",
  "createdBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentUri" : "https://openapi-generator.tech",
  "name" : "name",
  "contentLength" : 6,
  "attributes" : [ {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  }, {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  }, {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  } ],
  "sharingUri" : "https://openapi-generator.tech",
  "uploadDestinationUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter documentId: (path) Document ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<Document> 
     */
    open class func getContentmanagementDocumentWithRequestBuilder(documentId: String, expand: [String]? = nil) -> RequestBuilder<Document> {        
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        let documentIdPreEscape = "\(documentId)"
        let documentIdPostEscape = documentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{documentId}", with: documentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<Document>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum Disposition_getContentmanagementDocumentContent: String { 
        case attachment = "attachment"
        case inline = "inline"
    }

    
    
    /**
     Download a document.
     
     - parameter documentId: (path) Document ID 
     - parameter disposition: (query) Request how the content will be downloaded: a file attachment or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementDocumentContent(documentId: String, disposition: Disposition_getContentmanagementDocumentContent? = nil, contentType: String? = nil, completion: @escaping ((_ data: DownloadResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementDocumentContentWithRequestBuilder(documentId: documentId, disposition: disposition, contentType: contentType)
        requestBuilder.execute { (response: Response<DownloadResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Download a document.
     - GET /api/v2/contentmanagement/documents/{documentId}/content
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "contentLocationUri" : "contentLocationUri",
  "imageUri" : "imageUri",
  "thumbnails" : [ {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  }, {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  } ]
}, statusCode=200}]
     
     - parameter documentId: (path) Document ID 
     - parameter disposition: (query) Request how the content will be downloaded: a file attachment or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)

     - returns: RequestBuilder<DownloadResponse> 
     */
    open class func getContentmanagementDocumentContentWithRequestBuilder(documentId: String, disposition: Disposition_getContentmanagementDocumentContent? = nil, contentType: String? = nil) -> RequestBuilder<DownloadResponse> {        
        var path = "/api/v2/contentmanagement/documents/{documentId}/content"
        let documentIdPreEscape = "\(documentId)"
        let documentIdPostEscape = documentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{documentId}", with: documentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "disposition": disposition?.rawValue, 
            "contentType": contentType
        ])

        let requestBuilder: RequestBuilder<DownloadResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    /**
     Get a list of documents.
     
     - parameter workspaceId: (query) Workspace ID 
     - parameter name: (query) Name (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementDocuments(workspaceId: String, name: String? = nil, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: DocumentEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementDocumentsWithRequestBuilder(workspaceId: workspaceId, name: name, expand: expand, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<DocumentEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of documents.
     - GET /api/v2/contentmanagement/documents
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter workspaceId: (query) Workspace ID 
     - parameter name: (query) Name (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)

     - returns: RequestBuilder<DocumentEntityListing> 
     */
    open class func getContentmanagementDocumentsWithRequestBuilder(workspaceId: String, name: String? = nil, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<DocumentEntityListing> {        
        let path = "/api/v2/contentmanagement/documents"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "workspaceId": workspaceId, 
            "name": name, 
            "expand": expand, 
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<DocumentEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    /**
     Query content
     
     - parameter queryPhrase: (query) Phrase tokens are ANDed together over all searchable fields 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementQuery(queryPhrase: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, expand: [String]? = nil, completion: @escaping ((_ data: QueryResults?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementQueryWithRequestBuilder(queryPhrase: queryPhrase, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, expand: expand)
        requestBuilder.execute { (response: Response<QueryResults>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query content
     - GET /api/v2/contentmanagement/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "facetInfo" : {
    "attributes" : [ {
      "name" : "name",
      "count" : 5,
      "id" : "id"
    }, {
      "name" : "name",
      "count" : 5,
      "id" : "id"
    } ],
    "facets" : [ {
      "other" : 4,
      "total" : 7,
      "terms" : [ {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      }, {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      } ],
      "termCount" : 1,
      "missing" : 1,
      "termType" : "TERM",
      "attribute" : {
        "name" : "name",
        "id" : "id",
        "type" : "NUMBER"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+00:00",
        "stdDeviation" : 2.027123023002322,
        "dateMin" : "2000-01-23T04:56:07.000+00:00",
        "min" : 7.061401241503109,
        "max" : 9.301444243932576,
        "mean" : 3.616076749251911,
        "count" : 2
      }
    }, {
      "other" : 4,
      "total" : 7,
      "terms" : [ {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      }, {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      } ],
      "termCount" : 1,
      "missing" : 1,
      "termType" : "TERM",
      "attribute" : {
        "name" : "name",
        "id" : "id",
        "type" : "NUMBER"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+00:00",
        "stdDeviation" : 2.027123023002322,
        "dateMin" : "2000-01-23T04:56:07.000+00:00",
        "min" : 7.061401241503109,
        "max" : 9.301444243932576,
        "mean" : 3.616076749251911,
        "count" : 2
      }
    } ]
  },
  "results" : {
    "total" : 1,
    "pageCount" : 5,
    "pageNumber" : 6,
    "entities" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "body" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "body" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    } ],
    "firstUri" : "https://openapi-generator.tech",
    "lastUri" : "https://openapi-generator.tech",
    "selfUri" : "https://openapi-generator.tech",
    "pageSize" : 0,
    "nextUri" : "https://openapi-generator.tech",
    "previousUri" : "https://openapi-generator.tech"
  }
}, statusCode=200}]
     
     - parameter queryPhrase: (query) Phrase tokens are ANDed together over all searchable fields 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<QueryResults> 
     */
    open class func getContentmanagementQueryWithRequestBuilder(queryPhrase: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, expand: [String]? = nil) -> RequestBuilder<QueryResults> {        
        let path = "/api/v2/contentmanagement/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder, 
            "queryPhrase": queryPhrase, 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<QueryResults>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a Security Profile
     
     - parameter securityProfileId: (path) Security Profile Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementSecurityprofile(securityProfileId: String, completion: @escaping ((_ data: SecurityProfile?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementSecurityprofileWithRequestBuilder(securityProfileId: securityProfileId)
        requestBuilder.execute { (response: Response<SecurityProfile>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a Security Profile
     - GET /api/v2/contentmanagement/securityprofiles/{securityProfileId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "permissions" : [ "permissions", "permissions" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id"
}, statusCode=200}]
     
     - parameter securityProfileId: (path) Security Profile Id 

     - returns: RequestBuilder<SecurityProfile> 
     */
    open class func getContentmanagementSecurityprofileWithRequestBuilder(securityProfileId: String) -> RequestBuilder<SecurityProfile> {        
        var path = "/api/v2/contentmanagement/securityprofiles/{securityProfileId}"
        let securityProfileIdPreEscape = "\(securityProfileId)"
        let securityProfileIdPostEscape = securityProfileIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{securityProfileId}", with: securityProfileIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SecurityProfile>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get a List of Security Profiles
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementSecurityprofiles(completion: @escaping ((_ data: SecurityProfileEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementSecurityprofilesWithRequestBuilder()
        requestBuilder.execute { (response: Response<SecurityProfileEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a List of Security Profiles
     - GET /api/v2/contentmanagement/securityprofiles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "permissions" : [ "permissions", "permissions" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "permissions" : [ "permissions", "permissions" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]

     - returns: RequestBuilder<SecurityProfileEntityListing> 
     */
    open class func getContentmanagementSecurityprofilesWithRequestBuilder() -> RequestBuilder<SecurityProfileEntityListing> {        
        let path = "/api/v2/contentmanagement/securityprofiles"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SecurityProfileEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Retrieve details about an existing share.
     
     - parameter shareId: (path) Share ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementShare(shareId: String, expand: [String]? = nil, completion: @escaping ((_ data: Share?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementShareWithRequestBuilder(shareId: shareId, expand: expand)
        requestBuilder.execute { (response: Response<Share>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve details about an existing share.
     - GET /api/v2/contentmanagement/shares/{shareId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "sharedEntity" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "sharedEntityType" : "DOCUMENT",
  "sharedBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "member" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "memberType" : "USER",
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "group" : {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }
}, statusCode=200}]
     
     - parameter shareId: (path) Share ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<Share> 
     */
    open class func getContentmanagementShareWithRequestBuilder(shareId: String, expand: [String]? = nil) -> RequestBuilder<Share> {        
        var path = "/api/v2/contentmanagement/shares/{shareId}"
        let shareIdPreEscape = "\(shareId)"
        let shareIdPostEscape = shareIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{shareId}", with: shareIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<Share>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum Disposition_getContentmanagementSharedSharedId: String { 
        case attachment = "attachment"
        case inline = "inline"
        case _none = "none"
    }

    
    
    
    public enum Expand_getContentmanagementSharedSharedId: String { 
        case documentAcl = "document.acl"
    }

    
    /**
     Get shared documents. Securely download a shared document.
     
     - parameter sharedId: (path) Shared ID 
     - parameter redirect: (query) Turn on or off redirect (optional)
     - parameter disposition: (query) Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementSharedSharedId(sharedId: String, redirect: Bool? = nil, disposition: Disposition_getContentmanagementSharedSharedId? = nil, contentType: String? = nil, expand: Expand_getContentmanagementSharedSharedId? = nil, completion: @escaping ((_ data: SharedResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementSharedSharedIdWithRequestBuilder(sharedId: sharedId, redirect: redirect, disposition: disposition, contentType: contentType, expand: expand)
        requestBuilder.execute { (response: Response<SharedResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get shared documents. Securely download a shared document.
     - GET /api/v2/contentmanagement/shared/{sharedId}
     - This method requires the download sharing URI obtained in the get document response (downloadSharingUri). Documents may be shared between users in the same workspace. Documents may also be shared between any user by creating a content management share.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "viewUri" : "https://openapi-generator.tech",
  "document" : {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  },
  "share" : {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  },
  "id" : "id",
  "downloadUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter sharedId: (path) Shared ID 
     - parameter redirect: (query) Turn on or off redirect (optional)
     - parameter disposition: (query) Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<SharedResponse> 
     */
    open class func getContentmanagementSharedSharedIdWithRequestBuilder(sharedId: String, redirect: Bool? = nil, disposition: Disposition_getContentmanagementSharedSharedId? = nil, contentType: String? = nil, expand: Expand_getContentmanagementSharedSharedId? = nil) -> RequestBuilder<SharedResponse> {        
        var path = "/api/v2/contentmanagement/shared/{sharedId}"
        let sharedIdPreEscape = "\(sharedId)"
        let sharedIdPostEscape = sharedIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{sharedId}", with: sharedIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "redirect": redirect, 
            "disposition": disposition?.rawValue, 
            "contentType": contentType, 
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<SharedResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Gets a list of shares.  You must specify at least one filter (e.g. entityId).
     
     - parameter entityId: (query) Filters the shares returned to only the entity specified by the value of this parameter. (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementShares(entityId: String? = nil, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: ShareEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementSharesWithRequestBuilder(entityId: entityId, expand: expand, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<ShareEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a list of shares.  You must specify at least one filter (e.g. entityId).
     - GET /api/v2/contentmanagement/shares
     - Failing to specify a filter will return 400.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter entityId: (query) Filters the shares returned to only the entity specified by the value of this parameter. (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<ShareEntityListing> 
     */
    open class func getContentmanagementSharesWithRequestBuilder(entityId: String? = nil, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<ShareEntityListing> {        
        let path = "/api/v2/contentmanagement/shares"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "entityId": entityId, 
            "expand": expand, 
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ShareEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a list of statuses for pending operations
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementStatus(pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: CommandStatusEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementStatusWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<CommandStatusEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of statuses for pending operations
     - GET /api/v2/contentmanagement/status
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "commandType" : "UPLOAD",
    "document" : {
      "workspace" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "downloadSharingUri" : "https://openapi-generator.tech",
      "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
      "uploadStatus" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "acl" : [ "acl", "acl" ],
      "uploadMethod" : "SINGLE_PUT",
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "systemType" : "DOCUMENT",
      "changeNumber" : 0,
      "id" : "id",
      "tagValues" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "inUse" : true,
        "id" : "id",
        "acl" : [ "acl", "acl" ]
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "inUse" : true,
        "id" : "id",
        "acl" : [ "acl", "acl" ]
      } ],
      "uploadedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "contentType" : "contentType",
      "callerAddress" : "callerAddress",
      "pageCount" : 1,
      "read" : true,
      "sharingStatus" : "NONE",
      "selfUri" : "https://openapi-generator.tech",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "tags" : [ "tags", "tags" ],
      "receiverAddress" : "receiverAddress",
      "lockInfo" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "lockedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateExpires" : "2000-01-23T04:56:07.000+00:00",
        "action" : "UPDATE"
      },
      "filename" : "filename",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "contentUri" : "https://openapi-generator.tech",
      "name" : "name",
      "contentLength" : 6,
      "attributes" : [ {
        "values" : [ "values", "values" ],
        "attribute" : {
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "createdBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "description" : "description",
          "modifiedBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "version" : 5
        }
      }, {
        "values" : [ "values", "values" ],
        "attribute" : {
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "createdBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "description" : "description",
          "modifiedBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "version" : 5
        }
      } ],
      "thumbnails" : [ {
        "imageUri" : "imageUri",
        "width" : 6,
        "resolution" : "resolution",
        "height" : 0
      }, {
        "imageUri" : "imageUri",
        "width" : 6,
        "resolution" : "resolution",
        "height" : 0
      } ],
      "sharingUri" : "https://openapi-generator.tech",
      "uploadDestinationUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "userId" : "userId",
    "statusCode" : "INPROGRESS"
  }, {
    "commandType" : "UPLOAD",
    "document" : {
      "workspace" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "downloadSharingUri" : "https://openapi-generator.tech",
      "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
      "uploadStatus" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "acl" : [ "acl", "acl" ],
      "uploadMethod" : "SINGLE_PUT",
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "systemType" : "DOCUMENT",
      "changeNumber" : 0,
      "id" : "id",
      "tagValues" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "inUse" : true,
        "id" : "id",
        "acl" : [ "acl", "acl" ]
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "inUse" : true,
        "id" : "id",
        "acl" : [ "acl", "acl" ]
      } ],
      "uploadedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "contentType" : "contentType",
      "callerAddress" : "callerAddress",
      "pageCount" : 1,
      "read" : true,
      "sharingStatus" : "NONE",
      "selfUri" : "https://openapi-generator.tech",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "tags" : [ "tags", "tags" ],
      "receiverAddress" : "receiverAddress",
      "lockInfo" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "lockedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateExpires" : "2000-01-23T04:56:07.000+00:00",
        "action" : "UPDATE"
      },
      "filename" : "filename",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "contentUri" : "https://openapi-generator.tech",
      "name" : "name",
      "contentLength" : 6,
      "attributes" : [ {
        "values" : [ "values", "values" ],
        "attribute" : {
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "createdBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "description" : "description",
          "modifiedBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "version" : 5
        }
      }, {
        "values" : [ "values", "values" ],
        "attribute" : {
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "createdBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "description" : "description",
          "modifiedBy" : {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          },
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "version" : 5
        }
      } ],
      "thumbnails" : [ {
        "imageUri" : "imageUri",
        "width" : 6,
        "resolution" : "resolution",
        "height" : 0
      }, {
        "imageUri" : "imageUri",
        "width" : 6,
        "resolution" : "resolution",
        "height" : 0
      } ],
      "sharingUri" : "https://openapi-generator.tech",
      "uploadDestinationUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "userId" : "userId",
    "statusCode" : "INPROGRESS"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<CommandStatusEntityListing> 
     */
    open class func getContentmanagementStatusWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<CommandStatusEntityListing> {        
        let path = "/api/v2/contentmanagement/status"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<CommandStatusEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a status.
     
     - parameter statusId: (path) Status ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementStatusStatusId(statusId: String, completion: @escaping ((_ data: CommandStatus?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementStatusStatusIdWithRequestBuilder(statusId: statusId)
        requestBuilder.execute { (response: Response<CommandStatus>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a status.
     - GET /api/v2/contentmanagement/status/{statusId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "commandType" : "UPLOAD",
  "document" : {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "expiration" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "userId" : "userId",
  "statusCode" : "INPROGRESS"
}, statusCode=200}]
     
     - parameter statusId: (path) Status ID 

     - returns: RequestBuilder<CommandStatus> 
     */
    open class func getContentmanagementStatusStatusIdWithRequestBuilder(statusId: String) -> RequestBuilder<CommandStatus> {        
        var path = "/api/v2/contentmanagement/status/{statusId}"
        let statusIdPreEscape = "\(statusId)"
        let statusIdPostEscape = statusIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{statusId}", with: statusIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CommandStatus>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get usage details.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementUsage(completion: @escaping ((_ data: Usage?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementUsageWithRequestBuilder()
        requestBuilder.execute { (response: Response<Usage>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get usage details.
     - GET /api/v2/contentmanagement/usage
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "types" : [ {
    "totalDocumentCount" : 6,
    "totalDocumentByteCount" : 0,
    "type" : "RECORDING"
  }, {
    "totalDocumentCount" : 6,
    "totalDocumentByteCount" : 0,
    "type" : "RECORDING"
  } ]
}, statusCode=200}]

     - returns: RequestBuilder<Usage> 
     */
    open class func getContentmanagementUsageWithRequestBuilder() -> RequestBuilder<Usage> {        
        let path = "/api/v2/contentmanagement/usage"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Usage>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a workspace.
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspace(workspaceId: String, expand: [String]? = nil, completion: @escaping ((_ data: Workspace?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceWithRequestBuilder(workspaceId: workspaceId, expand: expand)
        requestBuilder.execute { (response: Response<Workspace>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a workspace.
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "bucket" : "bucket",
  "summary" : {
    "totalDocumentCount" : 0,
    "totalDocumentByteCount" : 6
  },
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "acl", "acl" ],
  "type" : "USER",
  "user" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<Workspace> 
     */
    open class func getContentmanagementWorkspaceWithRequestBuilder(workspaceId: String, expand: [String]? = nil) -> RequestBuilder<Workspace> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<Workspace>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    /**
     Get a list of documents.
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaceDocuments(workspaceId: String, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: DocumentEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceDocumentsWithRequestBuilder(workspaceId: workspaceId, expand: expand, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<DocumentEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of documents.
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/documents
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "downloadSharingUri" : "https://openapi-generator.tech",
    "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
    "uploadStatus" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "acl" : [ "acl", "acl" ],
    "uploadMethod" : "SINGLE_PUT",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "systemType" : "DOCUMENT",
    "changeNumber" : 0,
    "id" : "id",
    "tagValues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "inUse" : true,
      "id" : "id",
      "acl" : [ "acl", "acl" ]
    } ],
    "uploadedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentType" : "contentType",
    "callerAddress" : "callerAddress",
    "pageCount" : 1,
    "read" : true,
    "sharingStatus" : "NONE",
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "tags" : [ "tags", "tags" ],
    "receiverAddress" : "receiverAddress",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "lockedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateExpires" : "2000-01-23T04:56:07.000+00:00",
      "action" : "UPDATE"
    },
    "filename" : "filename",
    "createdBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "contentUri" : "https://openapi-generator.tech",
    "name" : "name",
    "contentLength" : 6,
    "attributes" : [ {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    }, {
      "values" : [ "values", "values" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+00:00",
        "createdBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "description" : "description",
        "modifiedBy" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        },
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "version" : 5
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    }, {
      "imageUri" : "imageUri",
      "width" : 6,
      "resolution" : "resolution",
      "height" : 0
    } ],
    "sharingUri" : "https://openapi-generator.tech",
    "uploadDestinationUri" : "https://openapi-generator.tech"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional)

     - returns: RequestBuilder<DocumentEntityListing> 
     */
    open class func getContentmanagementWorkspaceDocumentsWithRequestBuilder(workspaceId: String, expand: [String]? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<DocumentEntityListing> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/documents"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand, 
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<DocumentEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a workspace member
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaceMember(workspaceId: String, memberId: String, expand: [String]? = nil, completion: @escaping ((_ data: WorkspaceMember?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: workspaceId, memberId: memberId, expand: expand)
        requestBuilder.execute { (response: Response<WorkspaceMember>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a workspace member
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "securityProfile" : {
    "permissions" : [ "permissions", "permissions" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "member" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "memberType" : "USER",
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "group" : {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<WorkspaceMember> 
     */
    open class func getContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: String, memberId: String, expand: [String]? = nil) -> RequestBuilder<WorkspaceMember> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let memberIdPreEscape = "\(memberId)"
        let memberIdPostEscape = memberIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{memberId}", with: memberIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<WorkspaceMember>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get a list workspace members
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaceMembers(workspaceId: String, pageSize: Int? = nil, pageNumber: Int? = nil, expand: [String]? = nil, completion: @escaping ((_ data: WorkspaceMemberEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceMembersWithRequestBuilder(workspaceId: workspaceId, pageSize: pageSize, pageNumber: pageNumber, expand: expand)
        requestBuilder.execute { (response: Response<WorkspaceMemberEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list workspace members
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/members
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "securityProfile" : {
      "permissions" : [ "permissions", "permissions" ],
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "securityProfile" : {
      "permissions" : [ "permissions", "permissions" ],
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<WorkspaceMemberEntityListing> 
     */
    open class func getContentmanagementWorkspaceMembersWithRequestBuilder(workspaceId: String, pageSize: Int? = nil, pageNumber: Int? = nil, expand: [String]? = nil) -> RequestBuilder<WorkspaceMemberEntityListing> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<WorkspaceMemberEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaceTagvalue(workspaceId: String, tagId: String, expand: [String]? = nil, completion: @escaping ((_ data: TagValue?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: workspaceId, tagId: tagId, expand: expand)
        requestBuilder.execute { (response: Response<TagValue>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a workspace tag
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "inUse" : true,
  "id" : "id",
  "acl" : [ "acl", "acl" ]
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<TagValue> 
     */
    open class func getContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: String, tagId: String, expand: [String]? = nil) -> RequestBuilder<TagValue> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let tagIdPreEscape = "\(tagId)"
        let tagIdPostEscape = tagIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tagId}", with: tagIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<TagValue>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get a list of workspace tags
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter value: (query) filter the list of tags returned (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaceTagvalues(workspaceId: String, value: String? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, expand: [String]? = nil, completion: @escaping ((_ data: TagValueEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspaceTagvaluesWithRequestBuilder(workspaceId: workspaceId, value: value, pageSize: pageSize, pageNumber: pageNumber, expand: expand)
        requestBuilder.execute { (response: Response<TagValueEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of workspace tags
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter value: (query) filter the list of tags returned (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<TagValueEntityListing> 
     */
    open class func getContentmanagementWorkspaceTagvaluesWithRequestBuilder(workspaceId: String, value: String? = nil, pageSize: Int? = nil, pageNumber: Int? = nil, expand: [String]? = nil) -> RequestBuilder<TagValueEntityListing> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "value": value, 
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<TagValueEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get a list of workspaces.
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter access: (query) Requested access level. (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getContentmanagementWorkspaces(pageSize: Int? = nil, pageNumber: Int? = nil, access: [String]? = nil, expand: [String]? = nil, completion: @escaping ((_ data: WorkspaceEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getContentmanagementWorkspacesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, access: access, expand: expand)
        requestBuilder.execute { (response: Response<WorkspaceEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of workspaces.
     - GET /api/v2/contentmanagement/workspaces
     - Specifying 'content' access will return all workspaces the user has document access to, while 'admin' access will return all group workspaces the user has administrative rights to.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "bucket" : "bucket",
    "summary" : {
      "totalDocumentCount" : 0,
      "totalDocumentByteCount" : 6
    },
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "isCurrentUserWorkspace" : true,
    "acl" : [ "acl", "acl" ],
    "type" : "USER",
    "user" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }
  }, {
    "bucket" : "bucket",
    "summary" : {
      "totalDocumentCount" : 0,
      "totalDocumentByteCount" : 6
    },
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "isCurrentUserWorkspace" : true,
    "acl" : [ "acl", "acl" ],
    "type" : "USER",
    "user" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    }
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter access: (query) Requested access level. (optional)
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<WorkspaceEntityListing> 
     */
    open class func getContentmanagementWorkspacesWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, access: [String]? = nil, expand: [String]? = nil) -> RequestBuilder<WorkspaceEntityListing> {        
        let path = "/api/v2/contentmanagement/workspaces"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "access": access, 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<WorkspaceEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum Expand_postContentmanagementDocument: String { 
        case acl = "acl"
    }

    
    
    /**
     Update a document.
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Document 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementDocument(documentId: String, body: DocumentUpdate, expand: Expand_postContentmanagementDocument? = nil, _override: Bool? = nil, completion: @escaping ((_ data: Document?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementDocumentWithRequestBuilder(documentId: documentId, body: body, expand: expand, _override: _override)
        requestBuilder.execute { (response: Response<Document>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a document.
     - POST /api/v2/contentmanagement/documents/{documentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "downloadSharingUri" : "https://openapi-generator.tech",
  "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
  "uploadStatus" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "acl" : [ "acl", "acl" ],
  "uploadMethod" : "SINGLE_PUT",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "systemType" : "DOCUMENT",
  "changeNumber" : 0,
  "id" : "id",
  "tagValues" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  } ],
  "uploadedBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentType" : "contentType",
  "callerAddress" : "callerAddress",
  "pageCount" : 1,
  "read" : true,
  "sharingStatus" : "NONE",
  "selfUri" : "https://openapi-generator.tech",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "tags" : [ "tags", "tags" ],
  "receiverAddress" : "receiverAddress",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "lockedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "dateExpires" : "2000-01-23T04:56:07.000+00:00",
    "action" : "UPDATE"
  },
  "filename" : "filename",
  "createdBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentUri" : "https://openapi-generator.tech",
  "name" : "name",
  "contentLength" : 6,
  "attributes" : [ {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  }, {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  }, {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  } ],
  "sharingUri" : "https://openapi-generator.tech",
  "uploadDestinationUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Document 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<Document> 
     */
    open class func postContentmanagementDocumentWithRequestBuilder(documentId: String, body: DocumentUpdate, expand: Expand_postContentmanagementDocument? = nil, _override: Bool? = nil) -> RequestBuilder<Document> {        
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        let documentIdPreEscape = "\(documentId)"
        let documentIdPostEscape = documentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{documentId}", with: documentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue, 
            "override": _override
        ])

        let requestBuilder: RequestBuilder<Document>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Replace the contents of a document.
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Replace Request 
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementDocumentContent(documentId: String, body: ReplaceRequest, _override: Bool? = nil, completion: @escaping ((_ data: ReplaceResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementDocumentContentWithRequestBuilder(documentId: documentId, body: body, _override: _override)
        requestBuilder.execute { (response: Response<ReplaceResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Replace the contents of a document.
     - POST /api/v2/contentmanagement/documents/{documentId}/content
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "uploadMethod" : "SINGLE_PUT",
  "name" : "name",
  "uploadStatus" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "changeNumber" : 0,
  "id" : "id",
  "uploadDestinationUri" : "https://openapi-generator.tech"
}, statusCode=202}]
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Replace Request 
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<ReplaceResponse> 
     */
    open class func postContentmanagementDocumentContentWithRequestBuilder(documentId: String, body: ReplaceRequest, _override: Bool? = nil) -> RequestBuilder<ReplaceResponse> {        
        var path = "/api/v2/contentmanagement/documents/{documentId}/content"
        let documentIdPreEscape = "\(documentId)"
        let documentIdPostEscape = documentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{documentId}", with: documentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "override": _override
        ])

        let requestBuilder: RequestBuilder<ReplaceResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Add a document.
     
     - parameter body: (body) Document 
     - parameter copySource: (query) Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional)
     - parameter moveSource: (query) Move a document to a new workspace. Provide a document ID as the move source. (optional)
     - parameter _override: (query) Override any lock on the source document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementDocuments(body: DocumentUpload, copySource: String? = nil, moveSource: String? = nil, _override: Bool? = nil, completion: @escaping ((_ data: Document?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementDocumentsWithRequestBuilder(body: body, copySource: copySource, moveSource: moveSource, _override: _override)
        requestBuilder.execute { (response: Response<Document>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a document.
     - POST /api/v2/contentmanagement/documents
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "downloadSharingUri" : "https://openapi-generator.tech",
  "dateUploaded" : "2000-01-23T04:56:07.000+00:00",
  "uploadStatus" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "acl" : [ "acl", "acl" ],
  "uploadMethod" : "SINGLE_PUT",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "systemType" : "DOCUMENT",
  "changeNumber" : 0,
  "id" : "id",
  "tagValues" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  } ],
  "uploadedBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentType" : "contentType",
  "callerAddress" : "callerAddress",
  "pageCount" : 1,
  "read" : true,
  "sharingStatus" : "NONE",
  "selfUri" : "https://openapi-generator.tech",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "tags" : [ "tags", "tags" ],
  "receiverAddress" : "receiverAddress",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "lockedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "dateExpires" : "2000-01-23T04:56:07.000+00:00",
    "action" : "UPDATE"
  },
  "filename" : "filename",
  "createdBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "contentUri" : "https://openapi-generator.tech",
  "name" : "name",
  "contentLength" : 6,
  "attributes" : [ {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  }, {
    "values" : [ "values", "values" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "description" : "description",
      "modifiedBy" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      },
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "version" : 5
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  }, {
    "imageUri" : "imageUri",
    "width" : 6,
    "resolution" : "resolution",
    "height" : 0
  } ],
  "sharingUri" : "https://openapi-generator.tech",
  "uploadDestinationUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter body: (body) Document 
     - parameter copySource: (query) Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional)
     - parameter moveSource: (query) Move a document to a new workspace. Provide a document ID as the move source. (optional)
     - parameter _override: (query) Override any lock on the source document (optional)

     - returns: RequestBuilder<Document> 
     */
    open class func postContentmanagementDocumentsWithRequestBuilder(body: DocumentUpload, copySource: String? = nil, moveSource: String? = nil, _override: Bool? = nil) -> RequestBuilder<Document> {        
        let path = "/api/v2/contentmanagement/documents"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "copySource": copySource, 
            "moveSource": moveSource, 
            "override": _override
        ])

        let requestBuilder: RequestBuilder<Document>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    public enum Expand_postContentmanagementQuery: String { 
        case acl = "acl"
        case workspace = "workspace"
    }

    
    /**
     Query content
     
     - parameter body: (body) Allows for a filtered query returning facet information 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementQuery(body: QueryRequest, expand: Expand_postContentmanagementQuery? = nil, completion: @escaping ((_ data: QueryResults?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementQueryWithRequestBuilder(body: body, expand: expand)
        requestBuilder.execute { (response: Response<QueryResults>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query content
     - POST /api/v2/contentmanagement/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "facetInfo" : {
    "attributes" : [ {
      "name" : "name",
      "count" : 5,
      "id" : "id"
    }, {
      "name" : "name",
      "count" : 5,
      "id" : "id"
    } ],
    "facets" : [ {
      "other" : 4,
      "total" : 7,
      "terms" : [ {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      }, {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      } ],
      "termCount" : 1,
      "missing" : 1,
      "termType" : "TERM",
      "attribute" : {
        "name" : "name",
        "id" : "id",
        "type" : "NUMBER"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+00:00",
        "stdDeviation" : 2.027123023002322,
        "dateMin" : "2000-01-23T04:56:07.000+00:00",
        "min" : 7.061401241503109,
        "max" : 9.301444243932576,
        "mean" : 3.616076749251911,
        "count" : 2
      }
    }, {
      "other" : 4,
      "total" : 7,
      "terms" : [ {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      }, {
        "name" : "name",
        "count" : 6,
        "term" : "term",
        "id" : "id",
        "time" : "2000-01-23T04:56:07.000+00:00",
        "key" : 1
      } ],
      "termCount" : 1,
      "missing" : 1,
      "termType" : "TERM",
      "attribute" : {
        "name" : "name",
        "id" : "id",
        "type" : "NUMBER"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+00:00",
        "stdDeviation" : 2.027123023002322,
        "dateMin" : "2000-01-23T04:56:07.000+00:00",
        "min" : 7.061401241503109,
        "max" : 9.301444243932576,
        "mean" : 3.616076749251911,
        "count" : 2
      }
    } ]
  },
  "results" : {
    "total" : 1,
    "pageCount" : 5,
    "pageNumber" : 6,
    "entities" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "body" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "body" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    } ],
    "firstUri" : "https://openapi-generator.tech",
    "lastUri" : "https://openapi-generator.tech",
    "selfUri" : "https://openapi-generator.tech",
    "pageSize" : 0,
    "nextUri" : "https://openapi-generator.tech",
    "previousUri" : "https://openapi-generator.tech"
  }
}, statusCode=200}]
     
     - parameter body: (body) Allows for a filtered query returning facet information 
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<QueryResults> 
     */
    open class func postContentmanagementQueryWithRequestBuilder(body: QueryRequest, expand: Expand_postContentmanagementQuery? = nil) -> RequestBuilder<QueryResults> {        
        let path = "/api/v2/contentmanagement/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<QueryResults>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Creates a new share or updates an existing share if the entity has already been shared
     
     - parameter body: (body) CreateShareRequest - entity id and type and a single member or list of members are required 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementShares(body: CreateShareRequest, completion: @escaping ((_ data: CreateShareResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementSharesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<CreateShareResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new share or updates an existing share if the entity has already been shared
     - POST /api/v2/contentmanagement/shares
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "sharedEntity" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "sharedEntityType" : "DOCUMENT",
  "sharedBy" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "member" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "memberType" : "USER",
  "failed" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  } ],
  "succeeded" : [ {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  }, {
    "workspace" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntity" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "sharedEntityType" : "DOCUMENT",
    "sharedBy" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "member" : {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id"
    },
    "id" : "id",
    "memberType" : "USER",
    "user" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "group" : {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }
  } ]
}, statusCode=200}]
     
     - parameter body: (body) CreateShareRequest - entity id and type and a single member or list of members are required 

     - returns: RequestBuilder<CreateShareResponse> 
     */
    open class func postContentmanagementSharesWithRequestBuilder(body: CreateShareRequest) -> RequestBuilder<CreateShareResponse> {        
        let path = "/api/v2/contentmanagement/shares"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CreateShareResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) tag 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementWorkspaceTagvalues(workspaceId: String, body: TagValue, completion: @escaping ((_ data: TagValue?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementWorkspaceTagvaluesWithRequestBuilder(workspaceId: workspaceId, body: body)
        requestBuilder.execute { (response: Response<TagValue>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a workspace tag
     - POST /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "inUse" : true,
  "id" : "id",
  "acl" : [ "acl", "acl" ]
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) tag 

     - returns: RequestBuilder<TagValue> 
     */
    open class func postContentmanagementWorkspaceTagvaluesWithRequestBuilder(workspaceId: String, body: TagValue) -> RequestBuilder<TagValue> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TagValue>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Perform a prefix query on tags in the workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) query 
     - parameter expand: (query) Which fields, if any, to expand. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementWorkspaceTagvaluesQuery(workspaceId: String, body: TagQueryRequest, expand: [String]? = nil, completion: @escaping ((_ data: TagValueEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementWorkspaceTagvaluesQueryWithRequestBuilder(workspaceId: workspaceId, body: body, expand: expand)
        requestBuilder.execute { (response: Response<TagValueEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Perform a prefix query on tags in the workspace
     - POST /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "inUse" : true,
    "id" : "id",
    "acl" : [ "acl", "acl" ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) query 
     - parameter expand: (query) Which fields, if any, to expand. (optional)

     - returns: RequestBuilder<TagValueEntityListing> 
     */
    open class func postContentmanagementWorkspaceTagvaluesQueryWithRequestBuilder(workspaceId: String, body: TagQueryRequest, expand: [String]? = nil) -> RequestBuilder<TagValueEntityListing> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/query"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<TagValueEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a group workspace
     
     - parameter body: (body) Workspace 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postContentmanagementWorkspaces(body: WorkspaceCreate, completion: @escaping ((_ data: Workspace?,_ error: Error?) -> Void)) {
        let requestBuilder = postContentmanagementWorkspacesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Workspace>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a group workspace
     - POST /api/v2/contentmanagement/workspaces
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "bucket" : "bucket",
  "summary" : {
    "totalDocumentCount" : 0,
    "totalDocumentByteCount" : 6
  },
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "acl", "acl" ],
  "type" : "USER",
  "user" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }
}, statusCode=200}]
     
     - parameter body: (body) Workspace 

     - returns: RequestBuilder<Workspace> 
     */
    open class func postContentmanagementWorkspacesWithRequestBuilder(body: WorkspaceCreate) -> RequestBuilder<Workspace> {        
        let path = "/api/v2/contentmanagement/workspaces"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Workspace>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) Workspace 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putContentmanagementWorkspace(workspaceId: String, body: Workspace, completion: @escaping ((_ data: Workspace?,_ error: Error?) -> Void)) {
        let requestBuilder = putContentmanagementWorkspaceWithRequestBuilder(workspaceId: workspaceId, body: body)
        requestBuilder.execute { (response: Response<Workspace>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a workspace
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "bucket" : "bucket",
  "summary" : {
    "totalDocumentCount" : 0,
    "totalDocumentByteCount" : 6
  },
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "acl", "acl" ],
  "type" : "USER",
  "user" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) Workspace 

     - returns: RequestBuilder<Workspace> 
     */
    open class func putContentmanagementWorkspaceWithRequestBuilder(workspaceId: String, body: Workspace) -> RequestBuilder<Workspace> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Workspace>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Add a member to a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter body: (body) Workspace Member 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putContentmanagementWorkspaceMember(workspaceId: String, memberId: String, body: WorkspaceMember, completion: @escaping ((_ data: WorkspaceMember?,_ error: Error?) -> Void)) {
        let requestBuilder = putContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: workspaceId, memberId: memberId, body: body)
        requestBuilder.execute { (response: Response<WorkspaceMember>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a member to a workspace
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "securityProfile" : {
    "permissions" : [ "permissions", "permissions" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "member" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "id" : "id",
  "memberType" : "USER",
  "user" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "group" : {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter body: (body) Workspace Member 

     - returns: RequestBuilder<WorkspaceMember> 
     */
    open class func putContentmanagementWorkspaceMemberWithRequestBuilder(workspaceId: String, memberId: String, body: WorkspaceMember) -> RequestBuilder<WorkspaceMember> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let memberIdPreEscape = "\(memberId)"
        let memberIdPostEscape = memberIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{memberId}", with: memberIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkspaceMember>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update a workspace tag. Will update all documents with the new tag value.
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter body: (body) Workspace 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putContentmanagementWorkspaceTagvalue(workspaceId: String, tagId: String, body: TagValue, completion: @escaping ((_ data: TagValue?,_ error: Error?) -> Void)) {
        let requestBuilder = putContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: workspaceId, tagId: tagId, body: body)
        requestBuilder.execute { (response: Response<TagValue>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a workspace tag. Will update all documents with the new tag value.
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "inUse" : true,
  "id" : "id",
  "acl" : [ "acl", "acl" ]
}, statusCode=200}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter body: (body) Workspace 

     - returns: RequestBuilder<TagValue> 
     */
    open class func putContentmanagementWorkspaceTagvalueWithRequestBuilder(workspaceId: String, tagId: String, body: TagValue) -> RequestBuilder<TagValue> {        
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        let workspaceIdPreEscape = "\(workspaceId)"
        let workspaceIdPostEscape = workspaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workspaceId}", with: workspaceIdPostEscape, options: .literal, range: nil)
        let tagIdPreEscape = "\(tagId)"
        let tagIdPostEscape = tagIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tagId}", with: tagIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TagValue>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
