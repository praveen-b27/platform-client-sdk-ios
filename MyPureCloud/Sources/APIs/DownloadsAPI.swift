//
// DownloadsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class DownloadsAPI {
    
    
    
    
    /**
     Issues a redirect to a signed secure download URL for specified download
     
     - parameter downloadId: (path) Download ID 
     - parameter contentDisposition: (query)  (optional)
     - parameter issueRedirect: (query)  (optional)
     - parameter redirectToAuth: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDownload(downloadId: String, contentDisposition: String? = nil, issueRedirect: Bool? = nil, redirectToAuth: Bool? = nil, completion: @escaping ((_ data: UrlResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getDownloadWithRequestBuilder(downloadId: downloadId, contentDisposition: contentDisposition, issueRedirect: issueRedirect, redirectToAuth: redirectToAuth)
        requestBuilder.execute { (response: Response<UrlResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Issues a redirect to a signed secure download URL for specified download
     - GET /api/v2/downloads/{downloadId}
     - this method will issue a redirect to the url to the content
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "url" : "url"
}, statusCode=200}]
     
     - parameter downloadId: (path) Download ID 
     - parameter contentDisposition: (query)  (optional)
     - parameter issueRedirect: (query)  (optional)
     - parameter redirectToAuth: (query)  (optional)

     - returns: RequestBuilder<UrlResponse> 
     */
    open class func getDownloadWithRequestBuilder(downloadId: String, contentDisposition: String? = nil, issueRedirect: Bool? = nil, redirectToAuth: Bool? = nil) -> RequestBuilder<UrlResponse> {        
        var path = "/api/v2/downloads/{downloadId}"
        let downloadIdPreEscape = "\(downloadId)"
        let downloadIdPostEscape = downloadIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{downloadId}", with: downloadIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "contentDisposition": contentDisposition, 
            "issueRedirect": issueRedirect, 
            "redirectToAuth": redirectToAuth
        ])

        let requestBuilder: RequestBuilder<UrlResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

}
