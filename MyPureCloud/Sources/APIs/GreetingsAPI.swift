//
// GreetingsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class GreetingsAPI {
    
    /**
     Deletes a Greeting with the given GreetingId
     
     - parameter greetingId: (path) Greeting ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteGreeting(greetingId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteGreetingWithRequestBuilder(greetingId: greetingId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes a Greeting with the given GreetingId
     - DELETE /api/v2/greetings/{greetingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter greetingId: (path) Greeting ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteGreetingWithRequestBuilder(greetingId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/greetings/{greetingId}"
        let greetingIdPreEscape = "\(greetingId)"
        let greetingIdPostEscape = greetingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{greetingId}", with: greetingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Get a Greeting with the given GreetingId
     
     - parameter greetingId: (path) Greeting ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGreeting(greetingId: String, completion: @escaping ((_ data: Greeting?,_ error: Error?) -> Void)) {
        let requestBuilder = getGreetingWithRequestBuilder(greetingId: greetingId)
        requestBuilder.execute { (response: Response<Greeting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a Greeting with the given GreetingId
     - GET /api/v2/greetings/{greetingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "ownerType" : "USER",
  "owner" : "{}",
  "audioFile" : {
    "durationMilliseconds" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "sizeBytes" : 6
  },
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "audioTTS" : "audioTTS",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "STATION"
}, statusCode=200}]
     
     - parameter greetingId: (path) Greeting ID 

     - returns: RequestBuilder<Greeting> 
     */
    open class func getGreetingWithRequestBuilder(greetingId: String) -> RequestBuilder<Greeting> {        
        var path = "/api/v2/greetings/{greetingId}"
        let greetingIdPreEscape = "\(greetingId)"
        let greetingIdPostEscape = greetingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{greetingId}", with: greetingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Greeting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum FormatId_getGreetingMedia: String { 
        case wav = "WAV"
        case webm = "WEBM"
        case wavUlaw = "WAV_ULAW"
        case oggVorbis = "OGG_VORBIS"
        case oggOpus = "OGG_OPUS"
        case mp3 = "MP3"
        case _none = "NONE"
    }

    
    /**
     Get media playback URI for this greeting
     
     - parameter greetingId: (path) Greeting ID 
     - parameter formatId: (query) The desired media format. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGreetingMedia(greetingId: String, formatId: FormatId_getGreetingMedia? = nil, completion: @escaping ((_ data: GreetingMediaInfo?,_ error: Error?) -> Void)) {
        let requestBuilder = getGreetingMediaWithRequestBuilder(greetingId: greetingId, formatId: formatId)
        requestBuilder.execute { (response: Response<GreetingMediaInfo>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get media playback URI for this greeting
     - GET /api/v2/greetings/{greetingId}/media
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "mediaImageUri" : "https://openapi-generator.tech",
  "id" : "id",
  "mediaFileUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter greetingId: (path) Greeting ID 
     - parameter formatId: (query) The desired media format. (optional)

     - returns: RequestBuilder<GreetingMediaInfo> 
     */
    open class func getGreetingMediaWithRequestBuilder(greetingId: String, formatId: FormatId_getGreetingMedia? = nil) -> RequestBuilder<GreetingMediaInfo> {        
        var path = "/api/v2/greetings/{greetingId}/media"
        let greetingIdPreEscape = "\(greetingId)"
        let greetingIdPostEscape = greetingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{greetingId}", with: greetingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "formatId": formatId?.rawValue
        ])

        let requestBuilder: RequestBuilder<GreetingMediaInfo>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Gets an Organization's Greetings
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGreetings(pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: DomainEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getGreetingsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<DomainEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets an Organization's Greetings
     - GET /api/v2/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<DomainEntityListing> 
     */
    open class func getGreetingsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<DomainEntityListing> {        
        let path = "/api/v2/greetings"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DomainEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get an Organization's DefaultGreetingList
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGreetingsDefaults(completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = getGreetingsDefaultsWithRequestBuilder()
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an Organization's DefaultGreetingList
     - GET /api/v2/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func getGreetingsDefaultsWithRequestBuilder() -> RequestBuilder<DefaultGreetingList> {        
        let path = "/api/v2/greetings/defaults"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a list of the Group's Greetings
     
     - parameter groupId: (path) Group ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGroupGreetings(groupId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: GreetingListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getGroupGreetingsWithRequestBuilder(groupId: groupId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<GreetingListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of the Group's Greetings
     - GET /api/v2/groups/{groupId}/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "ownerType" : "USER",
    "owner" : "{}",
    "audioFile" : {
      "durationMilliseconds" : 0,
      "selfUri" : "https://openapi-generator.tech",
      "sizeBytes" : 6
    },
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "https://openapi-generator.tech",
    "audioTTS" : "audioTTS",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "https://openapi-generator.tech",
    "id" : "id",
    "type" : "STATION"
  }, {
    "ownerType" : "USER",
    "owner" : "{}",
    "audioFile" : {
      "durationMilliseconds" : 0,
      "selfUri" : "https://openapi-generator.tech",
      "sizeBytes" : 6
    },
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "https://openapi-generator.tech",
    "audioTTS" : "audioTTS",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "https://openapi-generator.tech",
    "id" : "id",
    "type" : "STATION"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<GreetingListing> 
     */
    open class func getGroupGreetingsWithRequestBuilder(groupId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<GreetingListing> {        
        var path = "/api/v2/groups/{groupId}/greetings"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<GreetingListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Grabs the list of Default Greetings given a Group's ID
     
     - parameter groupId: (path) Group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGroupGreetingsDefaults(groupId: String, completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = getGroupGreetingsDefaultsWithRequestBuilder(groupId: groupId)
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Grabs the list of Default Greetings given a Group's ID
     - GET /api/v2/groups/{groupId}/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func getGroupGreetingsDefaultsWithRequestBuilder(groupId: String) -> RequestBuilder<DefaultGreetingList> {        
        var path = "/api/v2/groups/{groupId}/greetings/defaults"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a list of the User's Greetings
     
     - parameter userId: (path) User ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserGreetings(userId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: DomainEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getUserGreetingsWithRequestBuilder(userId: userId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<DomainEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of the User's Greetings
     - GET /api/v2/users/{userId}/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter userId: (path) User ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<DomainEntityListing> 
     */
    open class func getUserGreetingsWithRequestBuilder(userId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<DomainEntityListing> {        
        var path = "/api/v2/users/{userId}/greetings"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<DomainEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Grabs the list of Default Greetings given a User's ID
     
     - parameter userId: (path) User ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserGreetingsDefaults(userId: String, completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = getUserGreetingsDefaultsWithRequestBuilder(userId: userId)
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Grabs the list of Default Greetings given a User's ID
     - GET /api/v2/users/{userId}/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]
     
     - parameter userId: (path) User ID 

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func getUserGreetingsDefaultsWithRequestBuilder(userId: String) -> RequestBuilder<DefaultGreetingList> {        
        var path = "/api/v2/users/{userId}/greetings/defaults"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Create a Greeting for an Organization
     
     - parameter body: (body) The Greeting to create 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postGreetings(body: Greeting, completion: @escaping ((_ data: Greeting?,_ error: Error?) -> Void)) {
        let requestBuilder = postGreetingsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Greeting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a Greeting for an Organization
     - POST /api/v2/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "ownerType" : "USER",
  "owner" : "{}",
  "audioFile" : {
    "durationMilliseconds" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "sizeBytes" : 6
  },
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "audioTTS" : "audioTTS",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "STATION"
}, statusCode=200}]
     
     - parameter body: (body) The Greeting to create 

     - returns: RequestBuilder<Greeting> 
     */
    open class func postGreetingsWithRequestBuilder(body: Greeting) -> RequestBuilder<Greeting> {        
        let path = "/api/v2/greetings"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Greeting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Creates a Greeting for a Group
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The Greeting to create 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postGroupGreetings(groupId: String, body: Greeting, completion: @escaping ((_ data: Greeting?,_ error: Error?) -> Void)) {
        let requestBuilder = postGroupGreetingsWithRequestBuilder(groupId: groupId, body: body)
        requestBuilder.execute { (response: Response<Greeting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a Greeting for a Group
     - POST /api/v2/groups/{groupId}/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "ownerType" : "USER",
  "owner" : "{}",
  "audioFile" : {
    "durationMilliseconds" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "sizeBytes" : 6
  },
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "audioTTS" : "audioTTS",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "STATION"
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The Greeting to create 

     - returns: RequestBuilder<Greeting> 
     */
    open class func postGroupGreetingsWithRequestBuilder(groupId: String, body: Greeting) -> RequestBuilder<Greeting> {        
        var path = "/api/v2/groups/{groupId}/greetings"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Greeting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Creates a Greeting for a User
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The Greeting to create 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUserGreetings(userId: String, body: Greeting, completion: @escaping ((_ data: Greeting?,_ error: Error?) -> Void)) {
        let requestBuilder = postUserGreetingsWithRequestBuilder(userId: userId, body: body)
        requestBuilder.execute { (response: Response<Greeting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a Greeting for a User
     - POST /api/v2/users/{userId}/greetings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "ownerType" : "USER",
  "owner" : "{}",
  "audioFile" : {
    "durationMilliseconds" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "sizeBytes" : 6
  },
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "audioTTS" : "audioTTS",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "STATION"
}, statusCode=200}]
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The Greeting to create 

     - returns: RequestBuilder<Greeting> 
     */
    open class func postUserGreetingsWithRequestBuilder(userId: String, body: Greeting) -> RequestBuilder<Greeting> {        
        var path = "/api/v2/users/{userId}/greetings"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Greeting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Updates the Greeting with the given GreetingId
     
     - parameter greetingId: (path) Greeting ID 
     - parameter body: (body) The updated Greeting 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putGreeting(greetingId: String, body: Greeting, completion: @escaping ((_ data: Greeting?,_ error: Error?) -> Void)) {
        let requestBuilder = putGreetingWithRequestBuilder(greetingId: greetingId, body: body)
        requestBuilder.execute { (response: Response<Greeting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates the Greeting with the given GreetingId
     - PUT /api/v2/greetings/{greetingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "ownerType" : "USER",
  "owner" : "{}",
  "audioFile" : {
    "durationMilliseconds" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "sizeBytes" : 6
  },
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "audioTTS" : "audioTTS",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "STATION"
}, statusCode=200}]
     
     - parameter greetingId: (path) Greeting ID 
     - parameter body: (body) The updated Greeting 

     - returns: RequestBuilder<Greeting> 
     */
    open class func putGreetingWithRequestBuilder(greetingId: String, body: Greeting) -> RequestBuilder<Greeting> {        
        var path = "/api/v2/greetings/{greetingId}"
        let greetingIdPreEscape = "\(greetingId)"
        let greetingIdPostEscape = greetingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{greetingId}", with: greetingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Greeting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    /**
     Update an Organization's DefaultGreetingList
     
     - parameter body: (body) The updated defaultGreetingList 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putGreetingsDefaults(body: DefaultGreetingList, completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = putGreetingsDefaultsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an Organization's DefaultGreetingList
     - PUT /api/v2/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]
     
     - parameter body: (body) The updated defaultGreetingList 

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func putGreetingsDefaultsWithRequestBuilder(body: DefaultGreetingList) -> RequestBuilder<DefaultGreetingList> {        
        let path = "/api/v2/greetings/defaults"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Updates the DefaultGreetingList of the specified Group
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The updated defaultGreetingList 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putGroupGreetingsDefaults(groupId: String, body: DefaultGreetingList, completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = putGroupGreetingsDefaultsWithRequestBuilder(groupId: groupId, body: body)
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates the DefaultGreetingList of the specified Group
     - PUT /api/v2/groups/{groupId}/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The updated defaultGreetingList 

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func putGroupGreetingsDefaultsWithRequestBuilder(groupId: String, body: DefaultGreetingList) -> RequestBuilder<DefaultGreetingList> {        
        var path = "/api/v2/groups/{groupId}/greetings/defaults"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Updates the DefaultGreetingList of the specified User
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The updated defaultGreetingList 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putUserGreetingsDefaults(userId: String, body: DefaultGreetingList, completion: @escaping ((_ data: DefaultGreetingList?,_ error: Error?) -> Void)) {
        let requestBuilder = putUserGreetingsDefaultsWithRequestBuilder(userId: userId, body: body)
        requestBuilder.execute { (response: Response<DefaultGreetingList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates the DefaultGreetingList of the specified User
     - PUT /api/v2/users/{userId}/greetings/defaults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "ownerType" : "USER",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "https://openapi-generator.tech",
  "id" : "id",
  "greetings" : {
    "key" : {
      "ownerType" : "USER",
      "owner" : "{}",
      "audioFile" : {
        "durationMilliseconds" : 0,
        "selfUri" : "https://openapi-generator.tech",
        "sizeBytes" : 6
      },
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "https://openapi-generator.tech",
      "audioTTS" : "audioTTS",
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "modifiedBy" : "https://openapi-generator.tech",
      "id" : "id",
      "type" : "STATION"
    }
  }
}, statusCode=200}]
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The updated defaultGreetingList 

     - returns: RequestBuilder<DefaultGreetingList> 
     */
    open class func putUserGreetingsDefaultsWithRequestBuilder(userId: String, body: DefaultGreetingList) -> RequestBuilder<DefaultGreetingList> {        
        var path = "/api/v2/users/{userId}/greetings/defaults"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DefaultGreetingList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
