//
// OrganizationAuthorizationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class OrganizationAuthorizationAPI {
    
    /**
     Delete Org Trust
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrustee(trusteeOrgId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: trusteeOrgId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Org Trust
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Deletes cloned user
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Id of the cloned user to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrusteeCloneduser(trusteeOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeCloneduserWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes cloned user
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Id of the cloned user to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeCloneduserWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers/{trusteeUserId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee Group
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrusteeGroup(trusteeOrgId: String, trusteeGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeGroupWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee Group
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeGroupWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee Group Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrusteeGroupRoles(trusteeOrgId: String, trusteeGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee Group Roles
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee User
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrusteeUser(trusteeOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeUserWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee User
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeUserWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee User Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrusteeUserRoles(trusteeOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee User Roles
     - DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete Org Trust
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrustor(trustorOrgId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrustorWithRequestBuilder(trustorOrgId: trustorOrgId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Org Trust
     - DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trustorOrgId: (path) Trustor Organization Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrustorWithRequestBuilder(trustorOrgId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Cloned User
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrustorCloneduser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Cloned User
     - DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee Group
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrustorGroup(trustorOrgId: String, trustorGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: trustorOrgId, trustorGroupId: trustorGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee Group
     - DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: String, trustorGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trustorGroupIdPreEscape = "\(trustorGroupId)"
        let trustorGroupIdPostEscape = trustorGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorGroupId}", with: trustorGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete Trustee User
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOrgauthorizationTrustorUser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete Trustee User
     - DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Get Pairing Info
     
     - parameter pairingId: (path) Pairing Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationPairing(pairingId: String, completion: @escaping ((_ data: TrustRequest?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationPairingWithRequestBuilder(pairingId: pairingId)
        requestBuilder.execute { (response: Response<TrustRequest>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Pairing Info
     - GET /api/v2/orgauthorization/pairings/{pairingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "trustee" : "{}",
  "id" : "id",
  "users" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "organization" : {
      "defaultCountryCode" : "defaultCountryCode",
      "selfUri" : "https://openapi-generator.tech",
      "thirdPartyURI" : "https://openapi-generator.tech",
      "version" : 0,
      "thirdPartyOrgName" : "thirdPartyOrgName",
      "features" : {
        "key" : true
      },
      "defaultLanguage" : "defaultLanguage",
      "defaultSiteId" : "defaultSiteId",
      "supportURI" : "supportURI",
      "domain" : "domain",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "voicemailEnabled" : true,
      "productPlatform" : "GenesysCloud"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "organization" : {
      "defaultCountryCode" : "defaultCountryCode",
      "selfUri" : "https://openapi-generator.tech",
      "thirdPartyURI" : "https://openapi-generator.tech",
      "version" : 0,
      "thirdPartyOrgName" : "thirdPartyOrgName",
      "features" : {
        "key" : true
      },
      "defaultLanguage" : "defaultLanguage",
      "defaultSiteId" : "defaultSiteId",
      "supportURI" : "supportURI",
      "domain" : "domain",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "voicemailEnabled" : true,
      "productPlatform" : "GenesysCloud"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter pairingId: (path) Pairing Id 

     - returns: RequestBuilder<TrustRequest> 
     */
    open class func getOrgauthorizationPairingWithRequestBuilder(pairingId: String) -> RequestBuilder<TrustRequest> {        
        var path = "/api/v2/orgauthorization/pairings/{pairingId}"
        let pairingIdPreEscape = "\(pairingId)"
        let pairingIdPostEscape = pairingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pairingId}", with: pairingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustRequest>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get Org Trust
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustee(trusteeOrgId: String, completion: @escaping ((_ data: Trustee?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: trusteeOrgId)
        requestBuilder.execute { (response: Response<Trustee>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Org Trust
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "dateExpired" : "2000-01-23T04:56:07.000+00:00",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true,
  "usesDefaultRole" : true
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 

     - returns: RequestBuilder<Trustee> 
     */
    open class func getOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: String) -> RequestBuilder<Trustee> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Trustee>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     The list of cloned users from the trustee organization (i.e. users with a native user record).
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeClonedusers(trusteeOrgId: String, completion: @escaping ((_ data: ClonedUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeClonedusersWithRequestBuilder(trusteeOrgId: trusteeOrgId)
        requestBuilder.execute { (response: Response<ClonedUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of cloned users from the trustee organization (i.e. users with a native user record).
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers
     - There can be no more than 5 cloned users per organization, so results are represented as simple list and not paged
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "trustor" : "{}",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "trustor" : "{}",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 

     - returns: RequestBuilder<ClonedUserEntityListing> 
     */
    open class func getOrgauthorizationTrusteeClonedusersWithRequestBuilder(trusteeOrgId: String) -> RequestBuilder<ClonedUserEntityListing> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ClonedUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee Group
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeGroup(trusteeOrgId: String, trusteeGroupId: String, completion: @escaping ((_ data: TrustGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeGroupWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId)
        requestBuilder.execute { (response: Response<TrustGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee Group
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  }, {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  } ],
  "visibility" : "public",
  "memberCount" : 6,
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "owners" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "rolesEnabled" : true,
  "type" : "official",
  "version" : 1,
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "rulesVisible" : true,
  "createdBy" : "{}",
  "name" : "name",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 

     - returns: RequestBuilder<TrustGroup> 
     */
    open class func getOrgauthorizationTrusteeGroupWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String) -> RequestBuilder<TrustGroup> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee Group Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeGroupRoles(trusteeOrgId: String, trusteeGroupId: String, completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee Group Roles
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func getOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     The list of trustee groups for this organization (i.e. groups granted access to this organization).
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeGroups(trusteeOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustGroupEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeGroupsWithRequestBuilder(trusteeOrgId: trusteeOrgId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustGroupEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of trustee groups for this organization (i.e. groups granted access to this organization).
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustGroupEntityListing> 
     */
    open class func getOrgauthorizationTrusteeGroupsWithRequestBuilder(trusteeOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustGroupEntityListing> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustGroupEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee User
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeUser(trusteeOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: TrustUser?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeUserWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<TrustUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee User
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "acdAutoAnswer" : true,
  "routingStatus" : "{}",
  "title" : "title",
  "division" : "{}",
  "authorization" : "{}",
  "skills" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  } ],
  "station" : "{}",
  "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "active",
  "preferredName" : "preferredName",
  "department" : "department",
  "presence" : "{}",
  "lastTokenIssued" : {
    "dateIssued" : "2000-01-23T04:56:07.000+00:00"
  },
  "email" : "email",
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "manager" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "employerInfo" : {
    "employeeType" : "employeeType",
    "dateHire" : "dateHire",
    "employeeId" : "employeeId",
    "officialName" : "officialName"
  },
  "languages" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  } ],
  "conversationSummary" : "{}",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "primaryContactInfo" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "biography" : {
    "education" : [ {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    }, {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    } ],
    "hobbies" : [ "hobbies", "hobbies" ],
    "biography" : "biography",
    "interests" : [ "interests", "interests" ],
    "spouse" : "spouse"
  },
  "team" : "{}",
  "certifications" : [ "certifications", "certifications" ],
  "version" : 0,
  "outOfOffice" : "{}",
  "languagePreference" : "languagePreference",
  "profileSkills" : [ "profileSkills", "profileSkills" ],
  "trustUserDetails" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}"
  },
  "chat" : {
    "jabberId" : "jabberId"
  },
  "name" : "name",
  "integrationPresence" : "{}",
  "locations" : [ {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  }, {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  } ],
  "username" : "username",
  "geolocation" : "{}"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<TrustUser> 
     */
    open class func getOrgauthorizationTrusteeUserWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String) -> RequestBuilder<TrustUser> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee User Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeUserRoles(trusteeOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee User Roles
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func getOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     The list of trustee users for this organization (i.e. users granted access to this organization).
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteeUsers(trusteeOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteeUsersWithRequestBuilder(trusteeOrgId: trusteeOrgId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of trustee users for this organization (i.e. users granted access to this organization).
     - GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "trustUserDetails" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "{}"
    },
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "trustUserDetails" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "{}"
    },
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustUserEntityListing> 
     */
    open class func getOrgauthorizationTrusteeUsersWithRequestBuilder(trusteeOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustUserEntityListing> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     The list of trustees for this organization (i.e. organizations granted access to this organization).
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustees(pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of trustees for this organization (i.e. organizations granted access to this organization).
     - GET /api/v2/orgauthorization/trustees
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}",
    "dateExpired" : "2000-01-23T04:56:07.000+00:00",
    "organization" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "enabled" : true,
    "usesDefaultRole" : true
  }, {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}",
    "dateExpired" : "2000-01-23T04:56:07.000+00:00",
    "organization" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "enabled" : true,
    "usesDefaultRole" : true
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustEntityListing> 
     */
    open class func getOrgauthorizationTrusteesWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustEntityListing> {        
        let path = "/api/v2/orgauthorization/trustees"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get organization authorization trust with Customer Care, if one exists.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrusteesDefault(completion: @escaping ((_ data: Trustee?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrusteesDefaultWithRequestBuilder()
        requestBuilder.execute { (response: Response<Trustee>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get organization authorization trust with Customer Care, if one exists.
     - GET /api/v2/orgauthorization/trustees/default
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "dateExpired" : "2000-01-23T04:56:07.000+00:00",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true,
  "usesDefaultRole" : true
}, statusCode=200}]

     - returns: RequestBuilder<Trustee> 
     */
    open class func getOrgauthorizationTrusteesDefaultWithRequestBuilder() -> RequestBuilder<Trustee> {        
        let path = "/api/v2/orgauthorization/trustees/default"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Trustee>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get Org Trust
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustor(trustorOrgId: String, completion: @escaping ((_ data: Trustor?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorWithRequestBuilder(trustorOrgId: trustorOrgId)
        requestBuilder.execute { (response: Response<Trustor>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Org Trust
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "authorization" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 

     - returns: RequestBuilder<Trustor> 
     */
    open class func getOrgauthorizationTrustorWithRequestBuilder(trustorOrgId: String) -> RequestBuilder<Trustor> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Trustor>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Cloned User
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorCloneduser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: ClonedUser?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<ClonedUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Cloned User
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "trustor" : "{}",
  "id" : "id"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<ClonedUser> 
     */
    open class func getOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<ClonedUser> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ClonedUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     The list of cloned users in the trustor organization (i.e. users with a native user record).
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorClonedusers(trustorOrgId: String, completion: @escaping ((_ data: ClonedUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorClonedusersWithRequestBuilder(trustorOrgId: trustorOrgId)
        requestBuilder.execute { (response: Response<ClonedUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of cloned users in the trustor organization (i.e. users with a native user record).
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "trustor" : "{}",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "trustor" : "{}",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 

     - returns: RequestBuilder<ClonedUserEntityListing> 
     */
    open class func getOrgauthorizationTrustorClonedusersWithRequestBuilder(trustorOrgId: String) -> RequestBuilder<ClonedUserEntityListing> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ClonedUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee Group
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorGroup(trustorOrgId: String, trustorGroupId: String, completion: @escaping ((_ data: TrustGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: trustorOrgId, trustorGroupId: trustorGroupId)
        requestBuilder.execute { (response: Response<TrustGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee Group
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  }, {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  } ],
  "visibility" : "public",
  "memberCount" : 6,
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "owners" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "rolesEnabled" : true,
  "type" : "official",
  "version" : 1,
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "rulesVisible" : true,
  "createdBy" : "{}",
  "name" : "name",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 

     - returns: RequestBuilder<TrustGroup> 
     */
    open class func getOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: String, trustorGroupId: String) -> RequestBuilder<TrustGroup> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trustorGroupIdPreEscape = "\(trustorGroupId)"
        let trustorGroupIdPostEscape = trustorGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorGroupId}", with: trustorGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     The list of groups in the trustor organization (i.e. groups granted access).
     
     - parameter trustorOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorGroups(trustorOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustGroupEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorGroupsWithRequestBuilder(trustorOrgId: trustorOrgId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustGroupEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of groups in the trustor organization (i.e. groups granted access).
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/groups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustGroupEntityListing> 
     */
    open class func getOrgauthorizationTrustorGroupsWithRequestBuilder(trustorOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustGroupEntityListing> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/groups"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustGroupEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get Trustee User
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorUser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: TrustUser?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<TrustUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Trustee User
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "acdAutoAnswer" : true,
  "routingStatus" : "{}",
  "title" : "title",
  "division" : "{}",
  "authorization" : "{}",
  "skills" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  } ],
  "station" : "{}",
  "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "active",
  "preferredName" : "preferredName",
  "department" : "department",
  "presence" : "{}",
  "lastTokenIssued" : {
    "dateIssued" : "2000-01-23T04:56:07.000+00:00"
  },
  "email" : "email",
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "manager" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "employerInfo" : {
    "employeeType" : "employeeType",
    "dateHire" : "dateHire",
    "employeeId" : "employeeId",
    "officialName" : "officialName"
  },
  "languages" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  } ],
  "conversationSummary" : "{}",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "primaryContactInfo" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "biography" : {
    "education" : [ {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    }, {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    } ],
    "hobbies" : [ "hobbies", "hobbies" ],
    "biography" : "biography",
    "interests" : [ "interests", "interests" ],
    "spouse" : "spouse"
  },
  "team" : "{}",
  "certifications" : [ "certifications", "certifications" ],
  "version" : 0,
  "outOfOffice" : "{}",
  "languagePreference" : "languagePreference",
  "profileSkills" : [ "profileSkills", "profileSkills" ],
  "trustUserDetails" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}"
  },
  "chat" : {
    "jabberId" : "jabberId"
  },
  "name" : "name",
  "integrationPresence" : "{}",
  "locations" : [ {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  }, {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  } ],
  "username" : "username",
  "geolocation" : "{}"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<TrustUser> 
     */
    open class func getOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<TrustUser> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     The list of users in the trustor organization (i.e. users granted access).
     
     - parameter trustorOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustorUsers(trustorOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorUsersWithRequestBuilder(trustorOrgId: trustorOrgId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of users in the trustor organization (i.e. users granted access).
     - GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "trustUserDetails" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "{}"
    },
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "trustUserDetails" : {
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "createdBy" : "{}"
    },
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustee Organization Id 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustUserEntityListing> 
     */
    open class func getOrgauthorizationTrustorUsersWithRequestBuilder(trustorOrgId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustUserEntityListing> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/users"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     The list of organizations that have authorized/trusted your organization.
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrgauthorizationTrustors(pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: TrustorEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getOrgauthorizationTrustorsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<TrustorEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     The list of organizations that have authorized/trusted your organization.
     - GET /api/v2/orgauthorization/trustors
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "authorization" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}",
    "organization" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "enabled" : true
  }, {
    "authorization" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}",
    "organization" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "enabled" : true
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<TrustorEntityListing> 
     */
    open class func getOrgauthorizationTrustorsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<TrustorEntityListing> {        
        let path = "/api/v2/orgauthorization/trustors"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TrustorEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     A pairing id is created by the trustee and given to the trustor to create a trust.
     
     - parameter body: (body) Pairing Info 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationPairings(body: TrustRequestCreate, completion: @escaping ((_ data: TrustRequest?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationPairingsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<TrustRequest>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     A pairing id is created by the trustee and given to the trustor to create a trust.
     - POST /api/v2/orgauthorization/pairings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 6,
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 1,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "rulesVisible" : true,
    "createdBy" : "{}",
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "trustee" : "{}",
  "id" : "id",
  "users" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "organization" : {
      "defaultCountryCode" : "defaultCountryCode",
      "selfUri" : "https://openapi-generator.tech",
      "thirdPartyURI" : "https://openapi-generator.tech",
      "version" : 0,
      "thirdPartyOrgName" : "thirdPartyOrgName",
      "features" : {
        "key" : true
      },
      "defaultLanguage" : "defaultLanguage",
      "defaultSiteId" : "defaultSiteId",
      "supportURI" : "supportURI",
      "domain" : "domain",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "voicemailEnabled" : true,
      "productPlatform" : "GenesysCloud"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "manager" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 0,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "organization" : {
      "defaultCountryCode" : "defaultCountryCode",
      "selfUri" : "https://openapi-generator.tech",
      "thirdPartyURI" : "https://openapi-generator.tech",
      "version" : 0,
      "thirdPartyOrgName" : "thirdPartyOrgName",
      "features" : {
        "key" : true
      },
      "defaultLanguage" : "defaultLanguage",
      "defaultSiteId" : "defaultSiteId",
      "supportURI" : "supportURI",
      "domain" : "domain",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "voicemailEnabled" : true,
      "productPlatform" : "GenesysCloud"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Pairing Info 

     - returns: RequestBuilder<TrustRequest> 
     */
    open class func postOrgauthorizationPairingsWithRequestBuilder(body: TrustRequestCreate) -> RequestBuilder<TrustRequest> {        
        let path = "/api/v2/orgauthorization/pairings"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustRequest>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Add a group to the trust.
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Trust 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrusteeGroups(trusteeOrgId: String, body: TrustMemberCreate, completion: @escaping ((_ data: TrustGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrusteeGroupsWithRequestBuilder(trusteeOrgId: trusteeOrgId, body: body)
        requestBuilder.execute { (response: Response<TrustGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a group to the trust.
     - POST /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  }, {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  } ],
  "visibility" : "public",
  "memberCount" : 6,
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "owners" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "rolesEnabled" : true,
  "type" : "official",
  "version" : 1,
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "rulesVisible" : true,
  "createdBy" : "{}",
  "name" : "name",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Trust 

     - returns: RequestBuilder<TrustGroup> 
     */
    open class func postOrgauthorizationTrusteeGroupsWithRequestBuilder(trusteeOrgId: String, body: TrustMemberCreate) -> RequestBuilder<TrustGroup> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Add a user to the trust.
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Trust 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrusteeUsers(trusteeOrgId: String, body: TrustMemberCreate, completion: @escaping ((_ data: TrustUser?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrusteeUsersWithRequestBuilder(trusteeOrgId: trusteeOrgId, body: body)
        requestBuilder.execute { (response: Response<TrustUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a user to the trust.
     - POST /api/v2/orgauthorization/trustees/{trusteeOrgId}/users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "acdAutoAnswer" : true,
  "routingStatus" : "{}",
  "title" : "title",
  "division" : "{}",
  "authorization" : "{}",
  "skills" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  } ],
  "station" : "{}",
  "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "active",
  "preferredName" : "preferredName",
  "department" : "department",
  "presence" : "{}",
  "lastTokenIssued" : {
    "dateIssued" : "2000-01-23T04:56:07.000+00:00"
  },
  "email" : "email",
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "manager" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "employerInfo" : {
    "employeeType" : "employeeType",
    "dateHire" : "dateHire",
    "employeeId" : "employeeId",
    "officialName" : "officialName"
  },
  "languages" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  } ],
  "conversationSummary" : "{}",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "primaryContactInfo" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "biography" : {
    "education" : [ {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    }, {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    } ],
    "hobbies" : [ "hobbies", "hobbies" ],
    "biography" : "biography",
    "interests" : [ "interests", "interests" ],
    "spouse" : "spouse"
  },
  "team" : "{}",
  "certifications" : [ "certifications", "certifications" ],
  "version" : 0,
  "outOfOffice" : "{}",
  "languagePreference" : "languagePreference",
  "profileSkills" : [ "profileSkills", "profileSkills" ],
  "trustUserDetails" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}"
  },
  "chat" : {
    "jabberId" : "jabberId"
  },
  "name" : "name",
  "integrationPresence" : "{}",
  "locations" : [ {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  }, {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  } ],
  "username" : "username",
  "geolocation" : "{}"
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Trust 

     - returns: RequestBuilder<TrustUser> 
     */
    open class func postOrgauthorizationTrusteeUsersWithRequestBuilder(trusteeOrgId: String, body: TrustMemberCreate) -> RequestBuilder<TrustUser> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a new organization authorization trust. This is required to grant other organizations access to your organization.
     
     - parameter body: (body) Trust 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrustees(body: TrustCreate, completion: @escaping ((_ data: Trustee?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrusteesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Trustee>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new organization authorization trust. This is required to grant other organizations access to your organization.
     - POST /api/v2/orgauthorization/trustees
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "dateExpired" : "2000-01-23T04:56:07.000+00:00",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true,
  "usesDefaultRole" : true
}, statusCode=200}]
     
     - parameter body: (body) Trust 

     - returns: RequestBuilder<Trustee> 
     */
    open class func postOrgauthorizationTrusteesWithRequestBuilder(body: TrustCreate) -> RequestBuilder<Trustee> {        
        let path = "/api/v2/orgauthorization/trustees"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Trustee>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get Org Trustee Audits
     
     - parameter body: (body) Values to scope the request. 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrusteesAudits(body: TrusteeAuditQueryRequest, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: JSON?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrusteesAuditsWithRequestBuilder(body: body, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<JSON>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Org Trustee Audits
     - POST /api/v2/orgauthorization/trustees/audits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter body: (body) Values to scope the request. 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<JSON> 
     */
    open class func postOrgauthorizationTrusteesAuditsWithRequestBuilder(body: TrusteeAuditQueryRequest, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<JSON> {        
        let path = "/api/v2/orgauthorization/trustees/audits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<JSON>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.
     
     - parameter assignDefaultRole: (query) Assign Admin role to default pairing with Customer Care (optional)
     - parameter autoExpire: (query) Automatically expire pairing after 30 days (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrusteesDefault(assignDefaultRole: Bool? = nil, autoExpire: Bool? = nil, completion: @escaping ((_ data: Trustee?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrusteesDefaultWithRequestBuilder(assignDefaultRole: assignDefaultRole, autoExpire: autoExpire)
        requestBuilder.execute { (response: Response<Trustee>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.
     - POST /api/v2/orgauthorization/trustees/default
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "dateExpired" : "2000-01-23T04:56:07.000+00:00",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true,
  "usesDefaultRole" : true
}, statusCode=200}]
     
     - parameter assignDefaultRole: (query) Assign Admin role to default pairing with Customer Care (optional)
     - parameter autoExpire: (query) Automatically expire pairing after 30 days (optional)

     - returns: RequestBuilder<Trustee> 
     */
    open class func postOrgauthorizationTrusteesDefaultWithRequestBuilder(assignDefaultRole: Bool? = nil, autoExpire: Bool? = nil) -> RequestBuilder<Trustee> {        
        let path = "/api/v2/orgauthorization/trustees/default"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "assignDefaultRole": assignDefaultRole, 
            "autoExpire": autoExpire
        ])

        let requestBuilder: RequestBuilder<Trustee>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get Org Trustor Audits
     
     - parameter body: (body) Values to scope the request. 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postOrgauthorizationTrustorAudits(body: TrustorAuditQueryRequest, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: JSON?,_ error: Error?) -> Void)) {
        let requestBuilder = postOrgauthorizationTrustorAuditsWithRequestBuilder(body: body, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<JSON>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get Org Trustor Audits
     - POST /api/v2/orgauthorization/trustor/audits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter body: (body) Values to scope the request. 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<JSON> 
     */
    open class func postOrgauthorizationTrustorAuditsWithRequestBuilder(body: TrustorAuditQueryRequest, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<JSON> {        
        let path = "/api/v2/orgauthorization/trustor/audits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<JSON>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update Org Trust
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Client 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrustee(trusteeOrgId: String, body: TrustUpdate, completion: @escaping ((_ data: Trustee?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: trusteeOrgId, body: body)
        requestBuilder.execute { (response: Response<Trustee>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update Org Trust
     - PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "createdBy" : "{}",
  "dateExpired" : "2000-01-23T04:56:07.000+00:00",
  "organization" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "enabled" : true,
  "usesDefaultRole" : true
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter body: (body) Client 

     - returns: RequestBuilder<Trustee> 
     */
    open class func putOrgauthorizationTrusteeWithRequestBuilder(trusteeOrgId: String, body: TrustUpdate) -> RequestBuilder<Trustee> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Trustee>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update Trustee Group Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter body: (body) Set of roles with corresponding divisions to apply 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrusteeGroupRoledivisions(trusteeOrgId: String, trusteeGroupId: String, body: RoleDivisionGrants, completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrusteeGroupRoledivisionsWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId, body: body)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update Trustee Group Roles
     - PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roledivisions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter body: (body) Set of roles with corresponding divisions to apply 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func putOrgauthorizationTrusteeGroupRoledivisionsWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String, body: RoleDivisionGrants) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roledivisions"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update Trustee Group Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter body: (body) List of roles 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrusteeGroupRoles(trusteeOrgId: String, trusteeGroupId: String, body: [String], completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeGroupId: trusteeGroupId, body: body)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update Trustee Group Roles
     - PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeGroupId: (path) Trustee Group Id 
     - parameter body: (body) List of roles 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func putOrgauthorizationTrusteeGroupRolesWithRequestBuilder(trusteeOrgId: String, trusteeGroupId: String, body: [String]) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeGroupIdPreEscape = "\(trusteeGroupId)"
        let trusteeGroupIdPostEscape = trusteeGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeGroupId}", with: trusteeGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update Trustee User Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter body: (body) Set of roles with corresponding divisions to apply 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId: String, trusteeUserId: String, body: RoleDivisionGrants, completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrusteeUserRoledivisionsWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId, body: body)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update Trustee User Roles
     - PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter body: (body) Set of roles with corresponding divisions to apply 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func putOrgauthorizationTrusteeUserRoledivisionsWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String, body: RoleDivisionGrants) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Update Trustee User Roles
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter body: (body) List of roles 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrusteeUserRoles(trusteeOrgId: String, trusteeUserId: String, body: [String], completion: @escaping ((_ data: UserAuthorization?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: trusteeOrgId, trusteeUserId: trusteeUserId, body: body)
        requestBuilder.execute { (response: Response<UserAuthorization>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update Trustee User Roles
     - PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "unusedRoles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ],
  "permissions" : [ "permissions", "permissions" ],
  "permissionPolicies" : [ {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  }, {
    "policyDescription" : "policyDescription",
    "resourceConditionNode" : {
      "operands" : [ {
        "type" : "SCALAR",
        "value" : "value"
      }, {
        "type" : "SCALAR",
        "value" : "value"
      } ],
      "variableName" : "variableName",
      "conjunction" : "AND",
      "terms" : [ null, null ],
      "operator" : "EQ"
    },
    "actionSetKey" : "actionSetKey",
    "namedResources" : [ "namedResources", "namedResources" ],
    "policyName" : "policyName",
    "entityName" : "entityName",
    "domain" : "domain",
    "allowConditions" : true,
    "id" : "id",
    "resourceCondition" : "resourceCondition",
    "actionSet" : [ "actionSet", "actionSet" ]
  } ],
  "roles" : [ {
    "name" : "name",
    "id" : "id"
  }, {
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter trusteeOrgId: (path) Trustee Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter body: (body) List of roles 

     - returns: RequestBuilder<UserAuthorization> 
     */
    open class func putOrgauthorizationTrusteeUserRolesWithRequestBuilder(trusteeOrgId: String, trusteeUserId: String, body: [String]) -> RequestBuilder<UserAuthorization> {        
        var path = "/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles"
        let trusteeOrgIdPreEscape = "\(trusteeOrgId)"
        let trusteeOrgIdPostEscape = trusteeOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeOrgId}", with: trusteeOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserAuthorization>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Creates a clone of the trustee user in the trustor org.
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrustorCloneduser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: ClonedUser?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<ClonedUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a clone of the trustee user in the trustor org.
     - PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "trustor" : "{}",
  "id" : "id"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<ClonedUser> 
     */
    open class func putOrgauthorizationTrustorCloneduserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<ClonedUser> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ClonedUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Add a Trustee Group to the trust.
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrustorGroup(trustorOrgId: String, trustorGroupId: String, completion: @escaping ((_ data: TrustGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: trustorOrgId, trustorGroupId: trustorGroupId)
        requestBuilder.execute { (response: Response<TrustGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a Trustee Group to the trust.
     - PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  }, {
    "extension" : "extension",
    "address" : "address",
    "display" : "display",
    "mediaType" : "PHONE",
    "type" : "GROUPRING"
  } ],
  "visibility" : "public",
  "memberCount" : 6,
  "description" : "description",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "owners" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "rolesEnabled" : true,
  "type" : "official",
  "version" : 1,
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "rulesVisible" : true,
  "createdBy" : "{}",
  "name" : "name",
  "id" : "id",
  "state" : "active"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trustorGroupId: (path) Trustor Group Id 

     - returns: RequestBuilder<TrustGroup> 
     */
    open class func putOrgauthorizationTrustorGroupWithRequestBuilder(trustorOrgId: String, trustorGroupId: String) -> RequestBuilder<TrustGroup> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trustorGroupIdPreEscape = "\(trustorGroupId)"
        let trustorGroupIdPostEscape = trustorGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorGroupId}", with: trustorGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Add a Trustee user to the trust.
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putOrgauthorizationTrustorUser(trustorOrgId: String, trusteeUserId: String, completion: @escaping ((_ data: TrustUser?,_ error: Error?) -> Void)) {
        let requestBuilder = putOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: trustorOrgId, trusteeUserId: trusteeUserId)
        requestBuilder.execute { (response: Response<TrustUser>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a Trustee user to the trust.
     - PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "addresses" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "acdAutoAnswer" : true,
  "routingStatus" : "{}",
  "title" : "title",
  "division" : "{}",
  "authorization" : "{}",
  "skills" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "skillUri" : "https://openapi-generator.tech",
    "id" : "id",
    "state" : "active",
    "proficiency" : 7.061401241503109
  } ],
  "station" : "{}",
  "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "active",
  "preferredName" : "preferredName",
  "department" : "department",
  "presence" : "{}",
  "lastTokenIssued" : {
    "dateIssued" : "2000-01-23T04:56:07.000+00:00"
  },
  "email" : "email",
  "images" : [ {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  }, {
    "imageUri" : "imageUri",
    "resolution" : "resolution"
  } ],
  "manager" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "employerInfo" : {
    "employeeType" : "employeeType",
    "dateHire" : "dateHire",
    "employeeId" : "employeeId",
    "officialName" : "officialName"
  },
  "languages" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "state" : "active",
    "languageUri" : "https://openapi-generator.tech",
    "proficiency" : 9.301444243932576
  } ],
  "conversationSummary" : "{}",
  "groups" : [ {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  }, {
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    }, {
      "extension" : "extension",
      "address" : "address",
      "display" : "display",
      "mediaType" : "PHONE",
      "type" : "GROUPRING"
    } ],
    "visibility" : "public",
    "memberCount" : 5,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "owners" : [ null, null ],
    "rolesEnabled" : true,
    "type" : "official",
    "version" : 2,
    "rulesVisible" : true,
    "name" : "name",
    "id" : "id",
    "state" : "active"
  } ],
  "primaryContactInfo" : [ {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  }, {
    "extension" : "extension",
    "address" : "address",
    "countryCode" : "countryCode",
    "display" : "display",
    "integration" : "microsoftteams",
    "mediaType" : "PHONE",
    "type" : "PRIMARY"
  } ],
  "biography" : {
    "education" : [ {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    }, {
      "notes" : "notes",
      "school" : "school",
      "dateStart" : "2000-01-23",
      "dateEnd" : "2000-01-23",
      "fieldOfStudy" : "fieldOfStudy"
    } ],
    "hobbies" : [ "hobbies", "hobbies" ],
    "biography" : "biography",
    "interests" : [ "interests", "interests" ],
    "spouse" : "spouse"
  },
  "team" : "{}",
  "certifications" : [ "certifications", "certifications" ],
  "version" : 0,
  "outOfOffice" : "{}",
  "languagePreference" : "languagePreference",
  "profileSkills" : [ "profileSkills", "profileSkills" ],
  "trustUserDetails" : {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "createdBy" : "{}"
  },
  "chat" : {
    "jabberId" : "jabberId"
  },
  "name" : "name",
  "integrationPresence" : "{}",
  "locations" : [ {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  }, {
    "notes" : "notes",
    "coordinates" : {
      "key" : 1.4658129805029452
    },
    "locationDefinition" : {
      "images" : "images",
      "address" : {
        "zipcode" : "zipcode",
        "country" : "country",
        "city" : "city",
        "street1" : "street1",
        "countryName" : "countryName",
        "state" : "state",
        "street2" : "street2"
      },
      "notes" : "notes",
      "floorplanImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addressVerificationDetails" : "{}",
      "selfUri" : "https://openapi-generator.tech",
      "profileImage" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "emergencyNumber" : "{}",
      "version" : 5,
      "path" : [ "path", "path" ],
      "addressStored" : true,
      "name" : "name",
      "id" : "id",
      "contactUser" : "{}",
      "state" : "active",
      "addressVerified" : true
    },
    "id" : "id",
    "floorplanId" : "floorplanId"
  } ],
  "username" : "username",
  "geolocation" : "{}"
}, statusCode=200}]
     
     - parameter trustorOrgId: (path) Trustor Organization Id 
     - parameter trusteeUserId: (path) Trustee User Id 

     - returns: RequestBuilder<TrustUser> 
     */
    open class func putOrgauthorizationTrustorUserWithRequestBuilder(trustorOrgId: String, trusteeUserId: String) -> RequestBuilder<TrustUser> {        
        var path = "/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}"
        let trustorOrgIdPreEscape = "\(trustorOrgId)"
        let trustorOrgIdPostEscape = trustorOrgIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trustorOrgId}", with: trustorOrgIdPostEscape, options: .literal, range: nil)
        let trusteeUserIdPreEscape = "\(trusteeUserId)"
        let trusteeUserIdPostEscape = trusteeUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{trusteeUserId}", with: trusteeUserIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TrustUser>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
