//
// QualityAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class QualityAPI {
    
    
    /**
     Delete a calibration by id.
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter calibratorId: (query) calibratorId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteQualityCalibration(calibrationId: String, calibratorId: String, completion: @escaping ((_ data: Calibration?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteQualityCalibrationWithRequestBuilder(calibrationId: calibrationId, calibratorId: calibratorId)
        requestBuilder.execute { (response: Response<Calibration>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a calibration by id.
     - DELETE /api/v2/quality/calibrations/{calibrationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "evaluations" : [ null, null ],
  "selfUri" : "https://openapi-generator.tech",
  "evaluators" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "contextId" : "contextId",
  "averageScore" : 4,
  "calibrator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "highScore" : 5,
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "expertEvaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "lowScore" : 9,
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : {
    "publishedVersions" : {
      "total" : 7,
      "pageCount" : 1,
      "pageNumber" : 6,
      "entities" : [ null, null ],
      "firstUri" : "https://openapi-generator.tech",
      "lastUri" : "https://openapi-generator.tech",
      "selfUri" : "https://openapi-generator.tech",
      "pageSize" : 1,
      "nextUri" : "https://openapi-generator.tech",
      "previousUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }
}, statusCode=200}]
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter calibratorId: (query) calibratorId 

     - returns: RequestBuilder<Calibration> 
     */
    open class func deleteQualityCalibrationWithRequestBuilder(calibrationId: String, calibratorId: String) -> RequestBuilder<Calibration> {        
        var path = "/api/v2/quality/calibrations/{calibrationId}"
        let calibrationIdPreEscape = "\(calibrationId)"
        let calibrationIdPostEscape = calibrationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{calibrationId}", with: calibrationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "calibratorId": calibratorId
        ])

        let requestBuilder: RequestBuilder<Calibration>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    
    /**
     Delete an evaluation
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter expand: (query) evaluatorId, evaluationForm (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteQualityConversationEvaluation(conversationId: String, evaluationId: String, expand: String? = nil, completion: @escaping ((_ data: EvaluationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteQualityConversationEvaluationWithRequestBuilder(conversationId: conversationId, evaluationId: evaluationId, expand: expand)
        requestBuilder.execute { (response: Response<EvaluationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Delete an evaluation
     - DELETE /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "assignedDate" : "2000-01-23T04:56:07.000+00:00",
  "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "resourceId" : "resourceId",
  "evaluationSource" : "{}",
  "redacted" : true,
  "answers" : {
    "totalNonCriticalScore" : 8.762042,
    "comments" : "comments",
    "privateComments" : "privateComments",
    "agentComments" : "agentComments",
    "totalCriticalScore" : 6.6835623,
    "questionGroupScores" : [ {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    }, {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    } ],
    "transcriptTopics" : [ {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    }, {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    } ],
    "totalScore" : 9.36931,
    "anyFailedKillQuestions" : true
  },
  "changedDate" : "2000-01-23T04:56:07.000+00:00",
  "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
  "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
  "hasAssistanceFailed" : true,
  "id" : "id",
  "rescore" : true,
  "calibration" : {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  },
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : "{}",
  "evaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "releaseDate" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "mediaType" : [ "CALL", "CALL" ],
  "assigneeApplicable" : true,
  "neverRelease" : true,
  "agentHasRead" : true,
  "conversationDate" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "assigned" : true,
  "assignee" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "queue" : {
    "peerId" : "peerId",
    "conditionalGroupRouting" : "{}",
    "enableAudioMonitoring" : true,
    "mediaSettings" : "{}",
    "enableManualAssignment" : true,
    "description" : "description",
    "onHoldPrompt" : "{}",
    "emailInQueueFlow" : "{}",
    "autoAnswerOnly" : true,
    "routingRules" : [ {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    }, {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    } ],
    "skillEvaluationMethod" : "NONE",
    "defaultScripts" : {
      "key" : {
        "variables" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "customActions" : "{}",
        "versionDate" : "2000-01-23T04:56:07.000+00:00",
        "division" : "{}",
        "features" : "{}",
        "versionId" : "versionId",
        "createdDate" : "2000-01-23T04:56:07.000+00:00",
        "pages" : [ {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        }, {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        } ],
        "startPageName" : "startPageName",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "startPageId" : "startPageId",
        "id" : "id",
        "publishedDate" : "2000-01-23T04:56:07.000+00:00"
      }
    },
    "division" : "{}",
    "suppressInQueueCallRecording" : true,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "queueFlow" : "{}",
    "callingPartyNumber" : "callingPartyNumber",
    "userMemberCount" : 6,
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "memberGroups" : [ {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    }, {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    } ],
    "scoringMethod" : "TimestampAndPriority",
    "joinedMemberCount" : 1,
    "messageInQueueFlow" : "{}",
    "callingPartyName" : "callingPartyName",
    "acwSettings" : "{}",
    "memberCount" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "whisperPrompt" : "{}",
    "enableTranscription" : true,
    "outboundEmailAddress" : {
      "route" : {
        "signature" : "{}",
        "replyEmailAddress" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "pattern" : "pattern",
        "language" : "{}",
        "autoBcc" : [ {
          "name" : "name",
          "email" : "email"
        }, {
          "name" : "name",
          "email" : "email"
        } ],
        "priority" : 7,
        "fromEmail" : "fromEmail",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        } ],
        "allowMultipleActions" : true,
        "name" : "name",
        "fromName" : "fromName",
        "id" : "id",
        "historyInclusion" : "Include",
        "queue" : "{}",
        "flow" : "{}",
        "spamFlow" : "{}"
      },
      "domain" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    },
    "bullseye" : "{}",
    "outboundMessagingAddresses" : "{}",
    "createdBy" : "createdBy",
    "directRouting" : "{}",
    "name" : "name",
    "agentOwnedRouting" : "{}"
  },
  "isScoringIndex" : true,
  "status" : "PENDING",
  "resourceType" : "EMAIL"
}, statusCode=200}]
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter expand: (query) evaluatorId, evaluationForm (optional)

     - returns: RequestBuilder<EvaluationResponse> 
     */
    open class func deleteQualityConversationEvaluationWithRequestBuilder(conversationId: String, evaluationId: String, expand: String? = nil) -> RequestBuilder<EvaluationResponse> {        
        var path = "/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let evaluationIdPreEscape = "\(evaluationId)"
        let evaluationIdPostEscape = evaluationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{evaluationId}", with: evaluationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<EvaluationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete an evaluation form.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteQualityForm(formId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteQualityFormWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete an evaluation form.
     - DELETE /api/v2/quality/forms/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteQualityFormWithRequestBuilder(formId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/quality/forms/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete an evaluation form.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteQualityFormsEvaluation(formId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteQualityFormsEvaluationWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete an evaluation form.
     - DELETE /api/v2/quality/forms/evaluations/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteQualityFormsEvaluationWithRequestBuilder(formId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/quality/forms/evaluations/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete a survey form.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteQualityFormsSurvey(formId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteQualityFormsSurveyWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a survey form.
     - DELETE /api/v2/quality/forms/surveys/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteQualityFormsSurveyWithRequestBuilder(formId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/quality/forms/surveys/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     Gets a list of Agent Activities
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter startTime: (query) Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter agentUserId: (query) user id of agent requested (optional)
     - parameter evaluatorUserId: (query) user id of the evaluator (optional)
     - parameter name: (query) name (optional)
     - parameter group: (query) group id (optional)
     - parameter agentTeamId: (query) team id of agents requested (optional)
     - parameter formContextId: (query) shared id between form versions (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityAgentsActivity(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, startTime: Date? = nil, endTime: Date? = nil, agentUserId: [String]? = nil, evaluatorUserId: String? = nil, name: String? = nil, group: String? = nil, agentTeamId: String? = nil, formContextId: String? = nil, completion: @escaping ((_ data: AgentActivityEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityAgentsActivityWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, expand: expand, nextPage: nextPage, previousPage: previousPage, startTime: startTime, endTime: endTime, agentUserId: agentUserId, evaluatorUserId: evaluatorUserId, name: name, group: group, agentTeamId: agentTeamId, formContextId: formContextId)
        requestBuilder.execute { (response: Response<AgentActivityEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a list of Agent Activities
     - GET /api/v2/quality/agents/activity
     - Each item on the list shows one agent's evaluation activity comprised of the number of evaluations and the highest, average, and lowest standard and critical scores, as well as a sub list showing the number and average score of evaluations for each evaluator for that agent.  evaluatorUserId, startTime, and endTime are all filtering criteria. If specified, the only evaluations used to compile the agent activity response will be ones that match the filtering criteria. agentUserId, name, group, and agentTeamId are all agent selection criteria. criteria.  If one or more agent selection criteria are specified, then the returned activity will include users that match the criteria even if those users did not have any agent activity or evaluations that do not match any filtering criteria.  If no agent selection criteria are specified but an evaluatorUserId is, then the returned activity will be only for those agents that had evaluations where the evaluator is the evaluatorUserId.  If no agent selection criteria are specified and no evaluatorUserId is specified, then the returned activity will be for all users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 6,
  "pageNumber" : 1,
  "entities" : [ {
    "numCriticalEvaluations" : 1,
    "numEvaluations" : 0,
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highestEvaluationScore" : 5.637377,
    "selfUri" : "https://openapi-generator.tech",
    "averageCriticalScore" : 5.962134,
    "numEvaluationsWithoutViewPermission" : 7,
    "highestCriticalScore" : 7.0614014,
    "lowestEvaluationScore" : 2.302136,
    "name" : "name",
    "agentEvaluatorActivityList" : [ {
      "numEvaluations" : 3,
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "numEvaluationsWithoutViewPermission" : 4,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "averageEvaluationScore" : 2,
      "evaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }
    }, {
      "numEvaluations" : 3,
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "numEvaluationsWithoutViewPermission" : 4,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "averageEvaluationScore" : 2,
      "evaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }
    } ],
    "id" : "id",
    "averageEvaluationScore" : 6,
    "lowestCriticalScore" : 9.301444
  }, {
    "numCriticalEvaluations" : 1,
    "numEvaluations" : 0,
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highestEvaluationScore" : 5.637377,
    "selfUri" : "https://openapi-generator.tech",
    "averageCriticalScore" : 5.962134,
    "numEvaluationsWithoutViewPermission" : 7,
    "highestCriticalScore" : 7.0614014,
    "lowestEvaluationScore" : 2.302136,
    "name" : "name",
    "agentEvaluatorActivityList" : [ {
      "numEvaluations" : 3,
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "numEvaluationsWithoutViewPermission" : 4,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "averageEvaluationScore" : 2,
      "evaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }
    }, {
      "numEvaluations" : 3,
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "numEvaluationsWithoutViewPermission" : 4,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "averageEvaluationScore" : 2,
      "evaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }
    } ],
    "id" : "id",
    "averageEvaluationScore" : 6,
    "lowestCriticalScore" : 9.301444
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 1,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter startTime: (query) Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter agentUserId: (query) user id of agent requested (optional)
     - parameter evaluatorUserId: (query) user id of the evaluator (optional)
     - parameter name: (query) name (optional)
     - parameter group: (query) group id (optional)
     - parameter agentTeamId: (query) team id of agents requested (optional)
     - parameter formContextId: (query) shared id between form versions (optional)

     - returns: RequestBuilder<AgentActivityEntityListing> 
     */
    open class func getQualityAgentsActivityWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, startTime: Date? = nil, endTime: Date? = nil, agentUserId: [String]? = nil, evaluatorUserId: String? = nil, name: String? = nil, group: String? = nil, agentTeamId: String? = nil, formContextId: String? = nil) -> RequestBuilder<AgentActivityEntityListing> {        
        let path = "/api/v2/quality/agents/activity"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "expand": expand, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "startTime": startTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON(), 
            "agentUserId": agentUserId, 
            "evaluatorUserId": evaluatorUserId, 
            "name": name, 
            "group": group, 
            "agentTeamId": agentTeamId, 
            "formContextId": formContextId
        ])

        let requestBuilder: RequestBuilder<AgentActivityEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a calibration by id.  Requires either calibrator id or conversation id
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter calibratorId: (query) calibratorId (optional)
     - parameter conversationId: (query) conversationId (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityCalibration(calibrationId: String, calibratorId: String? = nil, conversationId: String? = nil, completion: @escaping ((_ data: Calibration?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityCalibrationWithRequestBuilder(calibrationId: calibrationId, calibratorId: calibratorId, conversationId: conversationId)
        requestBuilder.execute { (response: Response<Calibration>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a calibration by id.  Requires either calibrator id or conversation id
     - GET /api/v2/quality/calibrations/{calibrationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "evaluations" : [ null, null ],
  "selfUri" : "https://openapi-generator.tech",
  "evaluators" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "contextId" : "contextId",
  "averageScore" : 4,
  "calibrator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "highScore" : 5,
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "expertEvaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "lowScore" : 9,
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : {
    "publishedVersions" : {
      "total" : 7,
      "pageCount" : 1,
      "pageNumber" : 6,
      "entities" : [ null, null ],
      "firstUri" : "https://openapi-generator.tech",
      "lastUri" : "https://openapi-generator.tech",
      "selfUri" : "https://openapi-generator.tech",
      "pageSize" : 1,
      "nextUri" : "https://openapi-generator.tech",
      "previousUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }
}, statusCode=200}]
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter calibratorId: (query) calibratorId (optional)
     - parameter conversationId: (query) conversationId (optional)

     - returns: RequestBuilder<Calibration> 
     */
    open class func getQualityCalibrationWithRequestBuilder(calibrationId: String, calibratorId: String? = nil, conversationId: String? = nil) -> RequestBuilder<Calibration> {        
        var path = "/api/v2/quality/calibrations/{calibrationId}"
        let calibrationIdPreEscape = "\(calibrationId)"
        let calibrationIdPostEscape = calibrationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{calibrationId}", with: calibrationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "calibratorId": calibratorId, 
            "conversationId": conversationId
        ])

        let requestBuilder: RequestBuilder<Calibration>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    /**
     Get the list of calibrations
     
     - parameter calibratorId: (query) user id of calibrator 
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter conversationId: (query) conversation id (optional)
     - parameter startTime: (query) Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityCalibrations(calibratorId: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, conversationId: String? = nil, startTime: Date? = nil, endTime: Date? = nil, completion: @escaping ((_ data: CalibrationEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityCalibrationsWithRequestBuilder(calibratorId: calibratorId, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, expand: expand, nextPage: nextPage, previousPage: previousPage, conversationId: conversationId, startTime: startTime, endTime: endTime)
        requestBuilder.execute { (response: Response<CalibrationEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of calibrations
     - GET /api/v2/quality/calibrations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  }, {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter calibratorId: (query) user id of calibrator 
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter conversationId: (query) conversation id (optional)
     - parameter startTime: (query) Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)

     - returns: RequestBuilder<CalibrationEntityListing> 
     */
    open class func getQualityCalibrationsWithRequestBuilder(calibratorId: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, conversationId: String? = nil, startTime: Date? = nil, endTime: Date? = nil) -> RequestBuilder<CalibrationEntityListing> {        
        let path = "/api/v2/quality/calibrations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "expand": expand, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "conversationId": conversationId, 
            "startTime": startTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON(), 
            "calibratorId": calibratorId
        ])

        let requestBuilder: RequestBuilder<CalibrationEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get an evaluation
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter expand: (query) agent, assignee, evaluator, evaluationForm (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityConversationEvaluation(conversationId: String, evaluationId: String, expand: String? = nil, completion: @escaping ((_ data: EvaluationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityConversationEvaluationWithRequestBuilder(conversationId: conversationId, evaluationId: evaluationId, expand: expand)
        requestBuilder.execute { (response: Response<EvaluationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an evaluation
     - GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "assignedDate" : "2000-01-23T04:56:07.000+00:00",
  "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "resourceId" : "resourceId",
  "evaluationSource" : "{}",
  "redacted" : true,
  "answers" : {
    "totalNonCriticalScore" : 8.762042,
    "comments" : "comments",
    "privateComments" : "privateComments",
    "agentComments" : "agentComments",
    "totalCriticalScore" : 6.6835623,
    "questionGroupScores" : [ {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    }, {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    } ],
    "transcriptTopics" : [ {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    }, {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    } ],
    "totalScore" : 9.36931,
    "anyFailedKillQuestions" : true
  },
  "changedDate" : "2000-01-23T04:56:07.000+00:00",
  "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
  "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
  "hasAssistanceFailed" : true,
  "id" : "id",
  "rescore" : true,
  "calibration" : {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  },
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : "{}",
  "evaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "releaseDate" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "mediaType" : [ "CALL", "CALL" ],
  "assigneeApplicable" : true,
  "neverRelease" : true,
  "agentHasRead" : true,
  "conversationDate" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "assigned" : true,
  "assignee" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "queue" : {
    "peerId" : "peerId",
    "conditionalGroupRouting" : "{}",
    "enableAudioMonitoring" : true,
    "mediaSettings" : "{}",
    "enableManualAssignment" : true,
    "description" : "description",
    "onHoldPrompt" : "{}",
    "emailInQueueFlow" : "{}",
    "autoAnswerOnly" : true,
    "routingRules" : [ {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    }, {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    } ],
    "skillEvaluationMethod" : "NONE",
    "defaultScripts" : {
      "key" : {
        "variables" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "customActions" : "{}",
        "versionDate" : "2000-01-23T04:56:07.000+00:00",
        "division" : "{}",
        "features" : "{}",
        "versionId" : "versionId",
        "createdDate" : "2000-01-23T04:56:07.000+00:00",
        "pages" : [ {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        }, {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        } ],
        "startPageName" : "startPageName",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "startPageId" : "startPageId",
        "id" : "id",
        "publishedDate" : "2000-01-23T04:56:07.000+00:00"
      }
    },
    "division" : "{}",
    "suppressInQueueCallRecording" : true,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "queueFlow" : "{}",
    "callingPartyNumber" : "callingPartyNumber",
    "userMemberCount" : 6,
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "memberGroups" : [ {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    }, {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    } ],
    "scoringMethod" : "TimestampAndPriority",
    "joinedMemberCount" : 1,
    "messageInQueueFlow" : "{}",
    "callingPartyName" : "callingPartyName",
    "acwSettings" : "{}",
    "memberCount" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "whisperPrompt" : "{}",
    "enableTranscription" : true,
    "outboundEmailAddress" : {
      "route" : {
        "signature" : "{}",
        "replyEmailAddress" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "pattern" : "pattern",
        "language" : "{}",
        "autoBcc" : [ {
          "name" : "name",
          "email" : "email"
        }, {
          "name" : "name",
          "email" : "email"
        } ],
        "priority" : 7,
        "fromEmail" : "fromEmail",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        } ],
        "allowMultipleActions" : true,
        "name" : "name",
        "fromName" : "fromName",
        "id" : "id",
        "historyInclusion" : "Include",
        "queue" : "{}",
        "flow" : "{}",
        "spamFlow" : "{}"
      },
      "domain" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    },
    "bullseye" : "{}",
    "outboundMessagingAddresses" : "{}",
    "createdBy" : "createdBy",
    "directRouting" : "{}",
    "name" : "name",
    "agentOwnedRouting" : "{}"
  },
  "isScoringIndex" : true,
  "status" : "PENDING",
  "resourceType" : "EMAIL"
}, statusCode=200}]
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter expand: (query) agent, assignee, evaluator, evaluationForm (optional)

     - returns: RequestBuilder<EvaluationResponse> 
     */
    open class func getQualityConversationEvaluationWithRequestBuilder(conversationId: String, evaluationId: String, expand: String? = nil) -> RequestBuilder<EvaluationResponse> {        
        var path = "/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let evaluationIdPreEscape = "\(evaluationId)"
        let evaluationIdPostEscape = evaluationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{evaluationId}", with: evaluationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<EvaluationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the surveys for a conversation
     
     - parameter conversationId: (path) conversationId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityConversationSurveys(conversationId: String, completion: @escaping ((_ data: [Survey]?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityConversationSurveysWithRequestBuilder(conversationId: conversationId)
        requestBuilder.execute { (response: Response<[Survey]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the surveys for a conversation
     - GET /api/v2/quality/conversations/{conversationId}/surveys
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "surveyForm" : "{}",
  "surveyErrorDetails" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "answers" : {
    "npsScore" : 6,
    "questionGroupScores" : [ {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    }, {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    } ],
    "totalScore" : 0.8008282
  },
  "agentTeam" : "{}",
  "id" : "id",
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "queue" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "completedDate" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter conversationId: (path) conversationId 

     - returns: RequestBuilder<[Survey]> 
     */
    open class func getQualityConversationSurveysWithRequestBuilder(conversationId: String) -> RequestBuilder<[Survey]> {        
        var path = "/api/v2/quality/conversations/{conversationId}/surveys"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Survey]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get status of audit query execution
     
     - parameter transactionId: (path) Transaction ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityConversationsAuditsQueryTransactionId(transactionId: String, completion: @escaping ((_ data: QualityAuditQueryExecutionStatusResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityConversationsAuditsQueryTransactionIdWithRequestBuilder(transactionId: transactionId)
        requestBuilder.execute { (response: Response<QualityAuditQueryExecutionStatusResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get status of audit query execution
     - GET /api/v2/quality/conversations/audits/query/{transactionId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateStart" : "2000-01-23T04:56:07.000+00:00",
  "interval" : "interval",
  "id" : "id",
  "state" : "Queued",
  "filters" : [ {
    "property" : "UserId",
    "value" : "value"
  }, {
    "property" : "UserId",
    "value" : "value"
  } ],
  "sort" : [ {
    "sortOrder" : "ascending",
    "name" : "Timestamp"
  }, {
    "sortOrder" : "ascending",
    "name" : "Timestamp"
  } ]
}, statusCode=200}]
     
     - parameter transactionId: (path) Transaction ID 

     - returns: RequestBuilder<QualityAuditQueryExecutionStatusResponse> 
     */
    open class func getQualityConversationsAuditsQueryTransactionIdWithRequestBuilder(transactionId: String) -> RequestBuilder<QualityAuditQueryExecutionStatusResponse> {        
        var path = "/api/v2/quality/conversations/audits/query/{transactionId}"
        let transactionIdPreEscape = "\(transactionId)"
        let transactionIdPostEscape = transactionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{transactionId}", with: transactionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<QualityAuditQueryExecutionStatusResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get results of audit query
     
     - parameter transactionId: (path) Transaction ID 
     - parameter cursor: (query) Indicates where to resume query results (not required for first page) (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter expand: (query) Which fields, if any, to expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityConversationsAuditsQueryTransactionIdResults(transactionId: String, cursor: String? = nil, pageSize: Int? = nil, expand: [String]? = nil, completion: @escaping ((_ data: QualityAuditQueryExecutionResultsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityConversationsAuditsQueryTransactionIdResultsWithRequestBuilder(transactionId: transactionId, cursor: cursor, pageSize: pageSize, expand: expand)
        requestBuilder.execute { (response: Response<QualityAuditQueryExecutionResultsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get results of audit query
     - GET /api/v2/quality/conversations/audits/query/{transactionId}/results
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "cursor" : "cursor",
  "entities" : [ {
    "propertyChanges" : [ {
      "property" : "property",
      "newValues" : [ "newValues", "newValues" ],
      "oldValues" : [ "oldValues", "oldValues" ]
    }, {
      "property" : "property",
      "newValues" : [ "newValues", "newValues" ],
      "oldValues" : [ "oldValues", "oldValues" ]
    } ],
    "level" : "User",
    "messageInfo" : "{}",
    "entityType" : "Recording",
    "serviceName" : "RecordingService",
    "remoteIps" : [ "remoteIps", "remoteIps" ],
    "userTrusteeOrgId" : "userTrusteeOrgId",
    "context" : {
      "key" : "context"
    },
    "client" : "{}",
    "action" : "Read",
    "userHomeOrgId" : "userHomeOrgId",
    "id" : "id",
    "user" : "{}",
    "entity" : "{}",
    "status" : "Success",
    "eventDate" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "propertyChanges" : [ {
      "property" : "property",
      "newValues" : [ "newValues", "newValues" ],
      "oldValues" : [ "oldValues", "oldValues" ]
    }, {
      "property" : "property",
      "newValues" : [ "newValues", "newValues" ],
      "oldValues" : [ "oldValues", "oldValues" ]
    } ],
    "level" : "User",
    "messageInfo" : "{}",
    "entityType" : "Recording",
    "serviceName" : "RecordingService",
    "remoteIps" : [ "remoteIps", "remoteIps" ],
    "userTrusteeOrgId" : "userTrusteeOrgId",
    "context" : {
      "key" : "context"
    },
    "client" : "{}",
    "action" : "Read",
    "userHomeOrgId" : "userHomeOrgId",
    "id" : "id",
    "user" : "{}",
    "entity" : "{}",
    "status" : "Success",
    "eventDate" : "2000-01-23T04:56:07.000+00:00"
  } ],
  "pageSize" : 0,
  "id" : "id"
}, statusCode=200}]
     
     - parameter transactionId: (path) Transaction ID 
     - parameter cursor: (query) Indicates where to resume query results (not required for first page) (optional)
     - parameter pageSize: (query) Page size (optional)
     - parameter expand: (query) Which fields, if any, to expand (optional)

     - returns: RequestBuilder<QualityAuditQueryExecutionResultsResponse> 
     */
    open class func getQualityConversationsAuditsQueryTransactionIdResultsWithRequestBuilder(transactionId: String, cursor: String? = nil, pageSize: Int? = nil, expand: [String]? = nil) -> RequestBuilder<QualityAuditQueryExecutionResultsResponse> {        
        var path = "/api/v2/quality/conversations/audits/query/{transactionId}/results"
        let transactionIdPreEscape = "\(transactionId)"
        let transactionIdPostEscape = transactionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{transactionId}", with: transactionIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "cursor": cursor, 
            "pageSize": pageSize?.encodeToJSON(), 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<QualityAuditQueryExecutionResultsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     Queries Evaluations and returns a paged list
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) NOTE: Does not work when querying evaluations (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) NOTE: Does not work when querying evaluations (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter conversationId: (query) conversationId specified (optional)
     - parameter agentUserId: (query) user id of the agent (optional)
     - parameter agentTeamId: (query) team id of the agent (optional)
     - parameter evaluatorUserId: (query) evaluator user id (optional)
     - parameter assigneeUserId: (query) assignee user id (optional)
     - parameter queueId: (query) queue id (optional)
     - parameter startTime: (query) start time of the evaluation query (optional)
     - parameter endTime: (query) end time of the evaluation query (optional)
     - parameter formContextId: (query) shared id between form versions (optional)
     - parameter evaluationState: (query)  (optional)
     - parameter isReleased: (query) the evaluation has been released (optional)
     - parameter agentHasRead: (query) agent has the evaluation (optional)
     - parameter expandAnswerTotalScores: (query) get the total scores for evaluations (optional)
     - parameter maximum: (query) the maximum number of results to return (optional)
     - parameter sortOrder: (query) NOTE: Does not work when conversationId is supplied. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityEvaluationsQuery(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, conversationId: String? = nil, agentUserId: String? = nil, agentTeamId: String? = nil, evaluatorUserId: String? = nil, assigneeUserId: String? = nil, queueId: String? = nil, startTime: String? = nil, endTime: String? = nil, formContextId: String? = nil, evaluationState: [String]? = nil, isReleased: Bool? = nil, agentHasRead: Bool? = nil, expandAnswerTotalScores: Bool? = nil, maximum: Int? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: EvaluationEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityEvaluationsQueryWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, expand: expand, nextPage: nextPage, previousPage: previousPage, conversationId: conversationId, agentUserId: agentUserId, agentTeamId: agentTeamId, evaluatorUserId: evaluatorUserId, assigneeUserId: assigneeUserId, queueId: queueId, startTime: startTime, endTime: endTime, formContextId: formContextId, evaluationState: evaluationState, isReleased: isReleased, agentHasRead: agentHasRead, expandAnswerTotalScores: expandAnswerTotalScores, maximum: maximum, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<EvaluationEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Queries Evaluations and returns a paged list
     - GET /api/v2/quality/evaluations/query
     - Query params must include one of conversationId, evaluatorUserId, agentUserId or assigneeUserId. When querying by agentUserId (and not conversationId or evaluatorUserId), the results are sorted by release date. Evaluations set to 'Never Release' are omitted in this case. When querying by evaluatorUserId or conversationId (including when combined with agentUserId), the results are sorted by assigned date.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "assignedDate" : "2000-01-23T04:56:07.000+00:00",
    "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "resourceId" : "resourceId",
    "evaluationSource" : "{}",
    "redacted" : true,
    "answers" : {
      "totalNonCriticalScore" : 8.762042,
      "comments" : "comments",
      "privateComments" : "privateComments",
      "agentComments" : "agentComments",
      "totalCriticalScore" : 6.6835623,
      "questionGroupScores" : [ {
        "totalNonCriticalScore" : 1.284659,
        "totalCriticalScoreUnweighted" : 5.9448957,
        "totalNonCriticalScoreUnweighted" : 3.3531933,
        "systemMarkedNA" : true,
        "markedNA" : true,
        "totalScoreUnweighted" : 6.778325,
        "maxTotalNonCriticalScore" : 2.8841622,
        "questionScores" : [ {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        }, {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        } ],
        "questionGroupId" : "questionGroupId",
        "totalScore" : 9.018348,
        "maxTotalScore" : 6.4384236,
        "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
        "totalCriticalScore" : 3.5571952,
        "maxTotalCriticalScore" : 6.965118,
        "maxTotalCriticalScoreUnweighted" : 6.704019,
        "maxTotalScoreUnweighted" : 6.878052
      }, {
        "totalNonCriticalScore" : 1.284659,
        "totalCriticalScoreUnweighted" : 5.9448957,
        "totalNonCriticalScoreUnweighted" : 3.3531933,
        "systemMarkedNA" : true,
        "markedNA" : true,
        "totalScoreUnweighted" : 6.778325,
        "maxTotalNonCriticalScore" : 2.8841622,
        "questionScores" : [ {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        }, {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        } ],
        "questionGroupId" : "questionGroupId",
        "totalScore" : 9.018348,
        "maxTotalScore" : 6.4384236,
        "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
        "totalCriticalScore" : 3.5571952,
        "maxTotalCriticalScore" : 6.965118,
        "maxTotalCriticalScoreUnweighted" : 6.704019,
        "maxTotalScoreUnweighted" : 6.878052
      } ],
      "transcriptTopics" : [ {
        "duration" : {
          "totalMilliseconds" : 6
        },
        "offset" : "{}",
        "recordingLocation" : 0,
        "startTimeMilliseconds" : 7,
        "confidence" : 0,
        "name" : "name",
        "topicPhrase" : "topicPhrase",
        "id" : "id",
        "transcriptPhrase" : "transcriptPhrase"
      }, {
        "duration" : {
          "totalMilliseconds" : 6
        },
        "offset" : "{}",
        "recordingLocation" : 0,
        "startTimeMilliseconds" : 7,
        "confidence" : 0,
        "name" : "name",
        "topicPhrase" : "topicPhrase",
        "id" : "id",
        "transcriptPhrase" : "transcriptPhrase"
      } ],
      "totalScore" : 9.36931,
      "anyFailedKillQuestions" : true
    },
    "changedDate" : "2000-01-23T04:56:07.000+00:00",
    "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
    "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
    "agentTeam" : "{}",
    "hasAssistanceFailed" : true,
    "id" : "id",
    "rescore" : true,
    "calibration" : {
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "evaluations" : [ null, null ],
      "selfUri" : "https://openapi-generator.tech",
      "evaluators" : [ {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }, {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      } ],
      "contextId" : "contextId",
      "averageScore" : 4,
      "calibrator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "highScore" : 5,
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "expertEvaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "lowScore" : 9,
      "conversation" : {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      },
      "evaluationForm" : {
        "publishedVersions" : {
          "total" : 7,
          "pageCount" : 1,
          "pageNumber" : 6,
          "entities" : [ null, null ],
          "firstUri" : "https://openapi-generator.tech",
          "lastUri" : "https://openapi-generator.tech",
          "selfUri" : "https://openapi-generator.tech",
          "pageSize" : 1,
          "nextUri" : "https://openapi-generator.tech",
          "previousUri" : "https://openapi-generator.tech"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "contextId" : "contextId",
        "id" : "id",
        "published" : true,
        "questionGroups" : [ {
          "defaultAnswersToHighest" : true,
          "manualWeight" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "name" : "name",
          "questions" : [ {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          }, {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          } ],
          "weight" : 1.2315135,
          "id" : "id",
          "defaultAnswersToNA" : true,
          "type" : "type",
          "naEnabled" : true
        }, {
          "defaultAnswersToHighest" : true,
          "manualWeight" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "name" : "name",
          "questions" : [ {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          }, {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          } ],
          "weight" : 1.2315135,
          "id" : "id",
          "defaultAnswersToNA" : true,
          "type" : "type",
          "naEnabled" : true
        } ]
      }
    },
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : "{}",
    "evaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "releaseDate" : "2000-01-23T04:56:07.000+00:00",
    "selfUri" : "https://openapi-generator.tech",
    "mediaType" : [ "CALL", "CALL" ],
    "revisionCreatedDate" : "2000-01-23T04:56:07.000+00:00",
    "assigneeApplicable" : true,
    "neverRelease" : true,
    "agentHasRead" : true,
    "conversationDate" : "2000-01-23T04:56:07.000+00:00",
    "name" : "name",
    "assigned" : true,
    "assignee" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "queue" : {
      "peerId" : "peerId",
      "conditionalGroupRouting" : "{}",
      "enableAudioMonitoring" : true,
      "mediaSettings" : "{}",
      "enableManualAssignment" : true,
      "description" : "description",
      "onHoldPrompt" : "{}",
      "emailInQueueFlow" : "{}",
      "autoAnswerOnly" : true,
      "routingRules" : [ {
        "waitSeconds" : 5.637376656633329,
        "threshold" : 5,
        "operator" : "MEETS_THRESHOLD"
      }, {
        "waitSeconds" : 5.637376656633329,
        "threshold" : 5,
        "operator" : "MEETS_THRESHOLD"
      } ],
      "skillEvaluationMethod" : "NONE",
      "defaultScripts" : {
        "key" : {
          "variables" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "customActions" : "{}",
          "versionDate" : "2000-01-23T04:56:07.000+00:00",
          "division" : "{}",
          "features" : "{}",
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "pages" : [ {
            "versionId" : "versionId",
            "createdDate" : "2000-01-23T04:56:07.000+00:00",
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
            "id" : "id",
            "rootContainer" : {
              "key" : "{}"
            },
            "properties" : {
              "key" : "{}"
            }
          }, {
            "versionId" : "versionId",
            "createdDate" : "2000-01-23T04:56:07.000+00:00",
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
            "id" : "id",
            "rootContainer" : {
              "key" : "{}"
            },
            "properties" : {
              "key" : "{}"
            }
          } ],
          "startPageName" : "startPageName",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "startPageId" : "startPageId",
          "id" : "id",
          "publishedDate" : "2000-01-23T04:56:07.000+00:00"
        }
      },
      "division" : "{}",
      "suppressInQueueCallRecording" : true,
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "queueFlow" : "{}",
      "callingPartyNumber" : "callingPartyNumber",
      "userMemberCount" : 6,
      "modifiedBy" : "modifiedBy",
      "id" : "id",
      "memberGroups" : [ {
        "division" : "{}",
        "memberCount" : 2,
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "type" : "TEAM"
      }, {
        "division" : "{}",
        "memberCount" : 2,
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "type" : "TEAM"
      } ],
      "scoringMethod" : "TimestampAndPriority",
      "joinedMemberCount" : 1,
      "messageInQueueFlow" : "{}",
      "callingPartyName" : "callingPartyName",
      "acwSettings" : "{}",
      "memberCount" : 0,
      "selfUri" : "https://openapi-generator.tech",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "whisperPrompt" : "{}",
      "enableTranscription" : true,
      "outboundEmailAddress" : {
        "route" : {
          "signature" : "{}",
          "replyEmailAddress" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "pattern" : "pattern",
          "language" : "{}",
          "autoBcc" : [ {
            "name" : "name",
            "email" : "email"
          }, {
            "name" : "name",
            "email" : "email"
          } ],
          "priority" : 7,
          "fromEmail" : "fromEmail",
          "skills" : [ {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          }, {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          } ],
          "allowMultipleActions" : true,
          "name" : "name",
          "fromName" : "fromName",
          "id" : "id",
          "historyInclusion" : "Include",
          "queue" : "{}",
          "flow" : "{}",
          "spamFlow" : "{}"
        },
        "domain" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }
      },
      "bullseye" : "{}",
      "outboundMessagingAddresses" : "{}",
      "createdBy" : "createdBy",
      "directRouting" : "{}",
      "name" : "name",
      "agentOwnedRouting" : "{}"
    },
    "isScoringIndex" : true,
    "status" : "PENDING",
    "resourceType" : "EMAIL"
  }, {
    "assignedDate" : "2000-01-23T04:56:07.000+00:00",
    "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "resourceId" : "resourceId",
    "evaluationSource" : "{}",
    "redacted" : true,
    "answers" : {
      "totalNonCriticalScore" : 8.762042,
      "comments" : "comments",
      "privateComments" : "privateComments",
      "agentComments" : "agentComments",
      "totalCriticalScore" : 6.6835623,
      "questionGroupScores" : [ {
        "totalNonCriticalScore" : 1.284659,
        "totalCriticalScoreUnweighted" : 5.9448957,
        "totalNonCriticalScoreUnweighted" : 3.3531933,
        "systemMarkedNA" : true,
        "markedNA" : true,
        "totalScoreUnweighted" : 6.778325,
        "maxTotalNonCriticalScore" : 2.8841622,
        "questionScores" : [ {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        }, {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        } ],
        "questionGroupId" : "questionGroupId",
        "totalScore" : 9.018348,
        "maxTotalScore" : 6.4384236,
        "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
        "totalCriticalScore" : 3.5571952,
        "maxTotalCriticalScore" : 6.965118,
        "maxTotalCriticalScoreUnweighted" : 6.704019,
        "maxTotalScoreUnweighted" : 6.878052
      }, {
        "totalNonCriticalScore" : 1.284659,
        "totalCriticalScoreUnweighted" : 5.9448957,
        "totalNonCriticalScoreUnweighted" : 3.3531933,
        "systemMarkedNA" : true,
        "markedNA" : true,
        "totalScoreUnweighted" : 6.778325,
        "maxTotalNonCriticalScore" : 2.8841622,
        "questionScores" : [ {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        }, {
          "answerId" : "answerId",
          "failedKillQuestion" : true,
          "score" : 7,
          "questionId" : "questionId",
          "systemMarkedNA" : true,
          "comments" : "comments",
          "markedNA" : true,
          "assistedAnswerId" : "assistedAnswerId"
        } ],
        "questionGroupId" : "questionGroupId",
        "totalScore" : 9.018348,
        "maxTotalScore" : 6.4384236,
        "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
        "totalCriticalScore" : 3.5571952,
        "maxTotalCriticalScore" : 6.965118,
        "maxTotalCriticalScoreUnweighted" : 6.704019,
        "maxTotalScoreUnweighted" : 6.878052
      } ],
      "transcriptTopics" : [ {
        "duration" : {
          "totalMilliseconds" : 6
        },
        "offset" : "{}",
        "recordingLocation" : 0,
        "startTimeMilliseconds" : 7,
        "confidence" : 0,
        "name" : "name",
        "topicPhrase" : "topicPhrase",
        "id" : "id",
        "transcriptPhrase" : "transcriptPhrase"
      }, {
        "duration" : {
          "totalMilliseconds" : 6
        },
        "offset" : "{}",
        "recordingLocation" : 0,
        "startTimeMilliseconds" : 7,
        "confidence" : 0,
        "name" : "name",
        "topicPhrase" : "topicPhrase",
        "id" : "id",
        "transcriptPhrase" : "transcriptPhrase"
      } ],
      "totalScore" : 9.36931,
      "anyFailedKillQuestions" : true
    },
    "changedDate" : "2000-01-23T04:56:07.000+00:00",
    "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
    "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
    "agentTeam" : "{}",
    "hasAssistanceFailed" : true,
    "id" : "id",
    "rescore" : true,
    "calibration" : {
      "agent" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "evaluations" : [ null, null ],
      "selfUri" : "https://openapi-generator.tech",
      "evaluators" : [ {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      }, {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      } ],
      "contextId" : "contextId",
      "averageScore" : 4,
      "calibrator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "highScore" : 5,
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "expertEvaluator" : {
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "acdAutoAnswer" : true,
        "routingStatus" : "{}",
        "title" : "title",
        "division" : "{}",
        "authorization" : "{}",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "skillUri" : "https://openapi-generator.tech",
          "id" : "id",
          "state" : "active",
          "proficiency" : 7.061401241503109
        } ],
        "station" : "{}",
        "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
        "id" : "id",
        "state" : "active",
        "preferredName" : "preferredName",
        "department" : "department",
        "presence" : "{}",
        "lastTokenIssued" : {
          "dateIssued" : "2000-01-23T04:56:07.000+00:00"
        },
        "email" : "email",
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "employerInfo" : {
          "employeeType" : "employeeType",
          "dateHire" : "dateHire",
          "employeeId" : "employeeId",
          "officialName" : "officialName"
        },
        "languages" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id",
          "state" : "active",
          "languageUri" : "https://openapi-generator.tech",
          "proficiency" : 9.301444243932576
        } ],
        "selfUri" : "https://openapi-generator.tech",
        "conversationSummary" : "{}",
        "groups" : [ {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        }, {
          "images" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addresses" : [ {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          }, {
            "extension" : "extension",
            "address" : "address",
            "display" : "display",
            "mediaType" : "PHONE",
            "type" : "GROUPRING"
          } ],
          "visibility" : "public",
          "memberCount" : 5,
          "selfUri" : "https://openapi-generator.tech",
          "description" : "description",
          "dateModified" : "2000-01-23T04:56:07.000+00:00",
          "owners" : [ null, null ],
          "rolesEnabled" : true,
          "type" : "official",
          "version" : 2,
          "rulesVisible" : true,
          "name" : "name",
          "id" : "id",
          "state" : "active"
        } ],
        "primaryContactInfo" : [ {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        }, {
          "extension" : "extension",
          "address" : "address",
          "countryCode" : "countryCode",
          "display" : "display",
          "integration" : "microsoftteams",
          "mediaType" : "PHONE",
          "type" : "PRIMARY"
        } ],
        "biography" : {
          "education" : [ {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          }, {
            "notes" : "notes",
            "school" : "school",
            "dateStart" : "2000-01-23",
            "dateEnd" : "2000-01-23",
            "fieldOfStudy" : "fieldOfStudy"
          } ],
          "hobbies" : [ "hobbies", "hobbies" ],
          "biography" : "biography",
          "interests" : [ "interests", "interests" ],
          "spouse" : "spouse"
        },
        "team" : "{}",
        "certifications" : [ "certifications", "certifications" ],
        "version" : 6,
        "outOfOffice" : "{}",
        "languagePreference" : "languagePreference",
        "profileSkills" : [ "profileSkills", "profileSkills" ],
        "chat" : {
          "jabberId" : "jabberId"
        },
        "name" : "name",
        "integrationPresence" : "{}",
        "locations" : [ {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        }, {
          "notes" : "notes",
          "coordinates" : {
            "key" : 1.4658129805029452
          },
          "locationDefinition" : {
            "images" : "images",
            "address" : {
              "zipcode" : "zipcode",
              "country" : "country",
              "city" : "city",
              "street1" : "street1",
              "countryName" : "countryName",
              "state" : "state",
              "street2" : "street2"
            },
            "notes" : "notes",
            "floorplanImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "addressVerificationDetails" : "{}",
            "selfUri" : "https://openapi-generator.tech",
            "profileImage" : [ {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            }, {
              "imageUri" : "imageUri",
              "resolution" : "resolution"
            } ],
            "emergencyNumber" : "{}",
            "version" : 5,
            "path" : [ "path", "path" ],
            "addressStored" : true,
            "name" : "name",
            "id" : "id",
            "contactUser" : "{}",
            "state" : "active",
            "addressVerified" : true
          },
          "id" : "id",
          "floorplanId" : "floorplanId"
        } ],
        "username" : "username",
        "geolocation" : "{}"
      },
      "name" : "name",
      "id" : "id",
      "lowScore" : 9,
      "conversation" : {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      },
      "evaluationForm" : {
        "publishedVersions" : {
          "total" : 7,
          "pageCount" : 1,
          "pageNumber" : 6,
          "entities" : [ null, null ],
          "firstUri" : "https://openapi-generator.tech",
          "lastUri" : "https://openapi-generator.tech",
          "selfUri" : "https://openapi-generator.tech",
          "pageSize" : 1,
          "nextUri" : "https://openapi-generator.tech",
          "previousUri" : "https://openapi-generator.tech"
        },
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "contextId" : "contextId",
        "id" : "id",
        "published" : true,
        "questionGroups" : [ {
          "defaultAnswersToHighest" : true,
          "manualWeight" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "name" : "name",
          "questions" : [ {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          }, {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          } ],
          "weight" : 1.2315135,
          "id" : "id",
          "defaultAnswersToNA" : true,
          "type" : "type",
          "naEnabled" : true
        }, {
          "defaultAnswersToHighest" : true,
          "manualWeight" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "name" : "name",
          "questions" : [ {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          }, {
            "helpText" : "helpText",
            "commentsRequired" : true,
            "visibilityCondition" : {
              "combiningOperation" : "AND",
              "predicates" : [ "{}", "{}" ]
            },
            "isCritical" : true,
            "id" : "id",
            "text" : "text",
            "type" : "multipleChoiceQuestion",
            "isKill" : true,
            "naEnabled" : true,
            "answerOptions" : [ {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            }, {
              "id" : "id",
              "text" : "text",
              "value" : 1,
              "assistanceConditions" : [ {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              }, {
                "topicIds" : [ "topicIds", "topicIds" ],
                "operator" : "EXISTS"
              } ]
            } ]
          } ],
          "weight" : 1.2315135,
          "id" : "id",
          "defaultAnswersToNA" : true,
          "type" : "type",
          "naEnabled" : true
        } ]
      }
    },
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : "{}",
    "evaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "releaseDate" : "2000-01-23T04:56:07.000+00:00",
    "selfUri" : "https://openapi-generator.tech",
    "mediaType" : [ "CALL", "CALL" ],
    "revisionCreatedDate" : "2000-01-23T04:56:07.000+00:00",
    "assigneeApplicable" : true,
    "neverRelease" : true,
    "agentHasRead" : true,
    "conversationDate" : "2000-01-23T04:56:07.000+00:00",
    "name" : "name",
    "assigned" : true,
    "assignee" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "queue" : {
      "peerId" : "peerId",
      "conditionalGroupRouting" : "{}",
      "enableAudioMonitoring" : true,
      "mediaSettings" : "{}",
      "enableManualAssignment" : true,
      "description" : "description",
      "onHoldPrompt" : "{}",
      "emailInQueueFlow" : "{}",
      "autoAnswerOnly" : true,
      "routingRules" : [ {
        "waitSeconds" : 5.637376656633329,
        "threshold" : 5,
        "operator" : "MEETS_THRESHOLD"
      }, {
        "waitSeconds" : 5.637376656633329,
        "threshold" : 5,
        "operator" : "MEETS_THRESHOLD"
      } ],
      "skillEvaluationMethod" : "NONE",
      "defaultScripts" : {
        "key" : {
          "variables" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "customActions" : "{}",
          "versionDate" : "2000-01-23T04:56:07.000+00:00",
          "division" : "{}",
          "features" : "{}",
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "pages" : [ {
            "versionId" : "versionId",
            "createdDate" : "2000-01-23T04:56:07.000+00:00",
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
            "id" : "id",
            "rootContainer" : {
              "key" : "{}"
            },
            "properties" : {
              "key" : "{}"
            }
          }, {
            "versionId" : "versionId",
            "createdDate" : "2000-01-23T04:56:07.000+00:00",
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
            "id" : "id",
            "rootContainer" : {
              "key" : "{}"
            },
            "properties" : {
              "key" : "{}"
            }
          } ],
          "startPageName" : "startPageName",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "startPageId" : "startPageId",
          "id" : "id",
          "publishedDate" : "2000-01-23T04:56:07.000+00:00"
        }
      },
      "division" : "{}",
      "suppressInQueueCallRecording" : true,
      "dateCreated" : "2000-01-23T04:56:07.000+00:00",
      "queueFlow" : "{}",
      "callingPartyNumber" : "callingPartyNumber",
      "userMemberCount" : 6,
      "modifiedBy" : "modifiedBy",
      "id" : "id",
      "memberGroups" : [ {
        "division" : "{}",
        "memberCount" : 2,
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "type" : "TEAM"
      }, {
        "division" : "{}",
        "memberCount" : 2,
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "type" : "TEAM"
      } ],
      "scoringMethod" : "TimestampAndPriority",
      "joinedMemberCount" : 1,
      "messageInQueueFlow" : "{}",
      "callingPartyName" : "callingPartyName",
      "acwSettings" : "{}",
      "memberCount" : 0,
      "selfUri" : "https://openapi-generator.tech",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "whisperPrompt" : "{}",
      "enableTranscription" : true,
      "outboundEmailAddress" : {
        "route" : {
          "signature" : "{}",
          "replyEmailAddress" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "pattern" : "pattern",
          "language" : "{}",
          "autoBcc" : [ {
            "name" : "name",
            "email" : "email"
          }, {
            "name" : "name",
            "email" : "email"
          } ],
          "priority" : 7,
          "fromEmail" : "fromEmail",
          "skills" : [ {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          }, {
            "selfUri" : "https://openapi-generator.tech",
            "name" : "name",
            "id" : "id"
          } ],
          "allowMultipleActions" : true,
          "name" : "name",
          "fromName" : "fromName",
          "id" : "id",
          "historyInclusion" : "Include",
          "queue" : "{}",
          "flow" : "{}",
          "spamFlow" : "{}"
        },
        "domain" : {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }
      },
      "bullseye" : "{}",
      "outboundMessagingAddresses" : "{}",
      "createdBy" : "createdBy",
      "directRouting" : "{}",
      "name" : "name",
      "agentOwnedRouting" : "{}"
    },
    "isScoringIndex" : true,
    "status" : "PENDING",
    "resourceType" : "EMAIL"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) NOTE: Does not work when querying evaluations (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) NOTE: Does not work when querying evaluations (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter conversationId: (query) conversationId specified (optional)
     - parameter agentUserId: (query) user id of the agent (optional)
     - parameter agentTeamId: (query) team id of the agent (optional)
     - parameter evaluatorUserId: (query) evaluator user id (optional)
     - parameter assigneeUserId: (query) assignee user id (optional)
     - parameter queueId: (query) queue id (optional)
     - parameter startTime: (query) start time of the evaluation query (optional)
     - parameter endTime: (query) end time of the evaluation query (optional)
     - parameter formContextId: (query) shared id between form versions (optional)
     - parameter evaluationState: (query)  (optional)
     - parameter isReleased: (query) the evaluation has been released (optional)
     - parameter agentHasRead: (query) agent has the evaluation (optional)
     - parameter expandAnswerTotalScores: (query) get the total scores for evaluations (optional)
     - parameter maximum: (query) the maximum number of results to return (optional)
     - parameter sortOrder: (query) NOTE: Does not work when conversationId is supplied. (optional)

     - returns: RequestBuilder<EvaluationEntityListing> 
     */
    open class func getQualityEvaluationsQueryWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, conversationId: String? = nil, agentUserId: String? = nil, agentTeamId: String? = nil, evaluatorUserId: String? = nil, assigneeUserId: String? = nil, queueId: String? = nil, startTime: String? = nil, endTime: String? = nil, formContextId: String? = nil, evaluationState: [String]? = nil, isReleased: Bool? = nil, agentHasRead: Bool? = nil, expandAnswerTotalScores: Bool? = nil, maximum: Int? = nil, sortOrder: String? = nil) -> RequestBuilder<EvaluationEntityListing> {        
        let path = "/api/v2/quality/evaluations/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "expand": expand, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "conversationId": conversationId, 
            "agentUserId": agentUserId, 
            "agentTeamId": agentTeamId, 
            "evaluatorUserId": evaluatorUserId, 
            "assigneeUserId": assigneeUserId, 
            "queueId": queueId, 
            "startTime": startTime, 
            "endTime": endTime, 
            "formContextId": formContextId, 
            "evaluationState": evaluationState, 
            "isReleased": isReleased, 
            "agentHasRead": agentHasRead, 
            "expandAnswerTotalScores": expandAnswerTotalScores, 
            "maximum": maximum?.encodeToJSON(), 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<EvaluationEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    
    
    
    
    
    
    /**
     Get an evaluator activity
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter startTime: (query) The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter name: (query) Evaluator name (optional)
     - parameter permission: (query) permission strings (optional)
     - parameter group: (query) group id (optional)
     - parameter agentTeamId: (query) team id of agents to be considered (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityEvaluatorsActivity(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, startTime: Date? = nil, endTime: Date? = nil, name: String? = nil, permission: [String]? = nil, group: String? = nil, agentTeamId: String? = nil, completion: @escaping ((_ data: EvaluatorActivityEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityEvaluatorsActivityWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, expand: expand, nextPage: nextPage, previousPage: previousPage, startTime: startTime, endTime: endTime, name: name, permission: permission, group: group, agentTeamId: agentTeamId)
        requestBuilder.execute { (response: Response<EvaluatorActivityEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an evaluator activity
     - GET /api/v2/quality/evaluators/activity
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 2,
  "pageCount" : 4,
  "pageNumber" : 3,
  "entities" : [ {
    "numCalibrationsStarted" : 5,
    "numEvaluationsWithoutViewPermission" : 7,
    "numEvaluationsAssigned" : 0,
    "numEvaluationsCompleted" : 1,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "numEvaluationsStarted" : 6,
    "id" : "id",
    "numCalibrationsAssigned" : 5,
    "numCalibrationsCompleted" : 2,
    "evaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }
  }, {
    "numCalibrationsStarted" : 5,
    "numEvaluationsWithoutViewPermission" : 7,
    "numEvaluationsAssigned" : 0,
    "numEvaluationsCompleted" : 1,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "numEvaluationsStarted" : 6,
    "id" : "id",
    "numCalibrationsAssigned" : 5,
    "numCalibrationsCompleted" : 2,
    "evaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 9,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter expand: (query) variable name requested by expand list (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter startTime: (query) The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter endTime: (query) The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)
     - parameter name: (query) Evaluator name (optional)
     - parameter permission: (query) permission strings (optional)
     - parameter group: (query) group id (optional)
     - parameter agentTeamId: (query) team id of agents to be considered (optional)

     - returns: RequestBuilder<EvaluatorActivityEntityListing> 
     */
    open class func getQualityEvaluatorsActivityWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, expand: [String]? = nil, nextPage: String? = nil, previousPage: String? = nil, startTime: Date? = nil, endTime: Date? = nil, name: String? = nil, permission: [String]? = nil, group: String? = nil, agentTeamId: String? = nil) -> RequestBuilder<EvaluatorActivityEntityListing> {        
        let path = "/api/v2/quality/evaluators/activity"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "expand": expand, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "startTime": startTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON(), 
            "name": name, 
            "permission": permission, 
            "group": group, 
            "agentTeamId": agentTeamId
        ])

        let requestBuilder: RequestBuilder<EvaluatorActivityEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get an evaluation form
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityForm(formId: String, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an evaluation form
     - GET /api/v2/quality/forms/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func getQualityFormWithRequestBuilder(formId: String) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/forms/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Gets all the revisions for a specific evaluation.
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormVersions(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormVersionsWithRequestBuilder(formId: formId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all the revisions for a specific evaluation.
     - GET /api/v2/quality/forms/{formId}/versions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityFormVersionsWithRequestBuilder(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        var path = "/api/v2/quality/forms/{formId}/versions"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum Expand_getQualityForms: String { 
        case publishhistory = "publishHistory"
    }

    
    
    
    /**
     Get the list of evaluation forms
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityForms(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityForms? = nil, name: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, nextPage: nextPage, previousPage: previousPage, expand: expand, name: name, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of evaluation forms
     - GET /api/v2/quality/forms
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityFormsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityForms? = nil, name: String? = nil, sortOrder: String? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        let path = "/api/v2/quality/forms"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "expand": expand?.rawValue, 
            "name": name, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get an evaluation form
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsEvaluation(formId: String, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsEvaluationWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an evaluation form
     - GET /api/v2/quality/forms/evaluations/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func getQualityFormsEvaluationWithRequestBuilder(formId: String) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/forms/evaluations/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Gets all the revisions for a specific evaluation.
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsEvaluationVersions(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsEvaluationVersionsWithRequestBuilder(formId: formId, pageSize: pageSize, pageNumber: pageNumber, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all the revisions for a specific evaluation.
     - GET /api/v2/quality/forms/evaluations/{formId}/versions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityFormsEvaluationVersionsWithRequestBuilder(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil, sortOrder: String? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        var path = "/api/v2/quality/forms/evaluations/{formId}/versions"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum Expand_getQualityFormsEvaluations: String { 
        case publishhistory = "publishHistory"
    }

    
    
    
    /**
     Get the list of evaluation forms
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsEvaluations(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityFormsEvaluations? = nil, name: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsEvaluationsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, nextPage: nextPage, previousPage: previousPage, expand: expand, name: name, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of evaluation forms
     - GET /api/v2/quality/forms/evaluations
     - By default, \"published\" field is always returned as false for all evaluation forms. If you set \"expand=publishHistory\", then you will be able to get published versions for each corresponding evaluation form. In addition, \"questionGroups\", the detailed information about evaluation form, is not returned by default. We will enhance this field in the future release.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityFormsEvaluationsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityFormsEvaluations? = nil, name: String? = nil, sortOrder: String? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        let path = "/api/v2/quality/forms/evaluations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "expand": expand?.rawValue, 
            "name": name, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Retrieve a list of the latest published evaluation form versions by context ids
     
     - parameter contextId: (query) A comma-delimited list of valid evaluation form context ids 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsEvaluationsBulkContexts(contextId: [String], completion: @escaping ((_ data: [EvaluationFormResponse]?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsEvaluationsBulkContextsWithRequestBuilder(contextId: contextId)
        requestBuilder.execute { (response: Response<[EvaluationFormResponse]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve a list of the latest published evaluation form versions by context ids
     - GET /api/v2/quality/forms/evaluations/bulk/contexts
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter contextId: (query) A comma-delimited list of valid evaluation form context ids 

     - returns: RequestBuilder<[EvaluationFormResponse]> 
     */
    open class func getQualityFormsEvaluationsBulkContextsWithRequestBuilder(contextId: [String]) -> RequestBuilder<[EvaluationFormResponse]> {        
        let path = "/api/v2/quality/forms/evaluations/bulk/contexts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "contextId": contextId
        ])

        let requestBuilder: RequestBuilder<[EvaluationFormResponse]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a survey form
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsSurvey(formId: String, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsSurveyWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a survey form
     - GET /api/v2/quality/forms/surveys/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func getQualityFormsSurveyWithRequestBuilder(formId: String) -> RequestBuilder<SurveyForm> {        
        var path = "/api/v2/quality/forms/surveys/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Gets all the revisions for a specific survey.
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsSurveyVersions(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: SurveyFormEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsSurveyVersionsWithRequestBuilder(formId: formId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<SurveyFormEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all the revisions for a specific survey.
     - GET /api/v2/quality/forms/surveys/{formId}/versions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<SurveyFormEntityListing> 
     */
    open class func getQualityFormsSurveyVersionsWithRequestBuilder(formId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<SurveyFormEntityListing> {        
        var path = "/api/v2/quality/forms/surveys/{formId}/versions"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<SurveyFormEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    
    public enum Expand_getQualityFormsSurveys: String { 
        case publishhistory = "publishHistory"
    }

    
    
    
    /**
     Get the list of survey forms
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsSurveys(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityFormsSurveys? = nil, name: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: SurveyFormEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsSurveysWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, nextPage: nextPage, previousPage: previousPage, expand: expand, name: name, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<SurveyFormEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of survey forms
     - GET /api/v2/quality/forms/surveys
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) The total page size requested (optional)
     - parameter pageNumber: (query) The page number requested (optional)
     - parameter sortBy: (query) variable name requested to sort by (optional)
     - parameter nextPage: (query) next page token (optional)
     - parameter previousPage: (query) Previous page token (optional)
     - parameter expand: (query) If &#39;expand&#x3D;publishHistory&#39;, then each unpublished evaluation form includes a listing of its published versions (optional)
     - parameter name: (query) Name (optional)
     - parameter sortOrder: (query) Order to sort results, either asc or desc (optional)

     - returns: RequestBuilder<SurveyFormEntityListing> 
     */
    open class func getQualityFormsSurveysWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, sortBy: String? = nil, nextPage: String? = nil, previousPage: String? = nil, expand: Expand_getQualityFormsSurveys? = nil, name: String? = nil, sortOrder: String? = nil) -> RequestBuilder<SurveyFormEntityListing> {        
        let path = "/api/v2/quality/forms/surveys"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "sortBy": sortBy, 
            "nextPage": nextPage, 
            "previousPage": previousPage, 
            "expand": expand?.rawValue, 
            "name": name, 
            "sortOrder": sortOrder
        ])

        let requestBuilder: RequestBuilder<SurveyFormEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Retrieve a list of survey forms by their ids
     
     - parameter _id: (query) A comma-delimited list of valid survey form ids 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsSurveysBulk(_id: [String], completion: @escaping ((_ data: SurveyFormEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsSurveysBulkWithRequestBuilder(_id: _id)
        requestBuilder.execute { (response: Response<SurveyFormEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve a list of survey forms by their ids
     - GET /api/v2/quality/forms/surveys/bulk
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter _id: (query) A comma-delimited list of valid survey form ids 

     - returns: RequestBuilder<SurveyFormEntityListing> 
     */
    open class func getQualityFormsSurveysBulkWithRequestBuilder(_id: [String]) -> RequestBuilder<SurveyFormEntityListing> {        
        let path = "/api/v2/quality/forms/surveys/bulk"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id
        ])

        let requestBuilder: RequestBuilder<SurveyFormEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Retrieve a list of the latest form versions by context ids
     
     - parameter contextId: (query) A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100. 
     - parameter published: (query) If true, the latest published version will be included. If false, only the unpublished version will be included. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityFormsSurveysBulkContexts(contextId: [String], published: Bool? = nil, completion: @escaping ((_ data: [SurveyForm]?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityFormsSurveysBulkContextsWithRequestBuilder(contextId: contextId, published: published)
        requestBuilder.execute { (response: Response<[SurveyForm]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve a list of the latest form versions by context ids
     - GET /api/v2/quality/forms/surveys/bulk/contexts
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter contextId: (query) A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100. 
     - parameter published: (query) If true, the latest published version will be included. If false, only the unpublished version will be included. (optional)

     - returns: RequestBuilder<[SurveyForm]> 
     */
    open class func getQualityFormsSurveysBulkContextsWithRequestBuilder(contextId: [String], published: Bool? = nil) -> RequestBuilder<[SurveyForm]> {        
        let path = "/api/v2/quality/forms/surveys/bulk/contexts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "contextId": contextId, 
            "published": published
        ])

        let requestBuilder: RequestBuilder<[SurveyForm]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the published evaluation forms.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedform(formId: String, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the published evaluation forms.
     - GET /api/v2/quality/publishedforms/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func getQualityPublishedformWithRequestBuilder(formId: String) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/publishedforms/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the published evaluation forms.
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestPerContext: (query) onlyLatestPerContext (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedforms(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestPerContext: Bool? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, onlyLatestPerContext: onlyLatestPerContext)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the published evaluation forms.
     - GET /api/v2/quality/publishedforms
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestPerContext: (query) onlyLatestPerContext (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityPublishedformsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestPerContext: Bool? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        let path = "/api/v2/quality/publishedforms"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "name": name, 
            "onlyLatestPerContext": onlyLatestPerContext
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the most recent published version of an evaluation form.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedformsEvaluation(formId: String, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformsEvaluationWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the most recent published version of an evaluation form.
     - GET /api/v2/quality/publishedforms/evaluations/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func getQualityPublishedformsEvaluationWithRequestBuilder(formId: String) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/publishedforms/evaluations/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the published evaluation forms.
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestPerContext: (query) onlyLatestPerContext (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedformsEvaluations(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestPerContext: Bool? = nil, completion: @escaping ((_ data: EvaluationFormResponseEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformsEvaluationsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, onlyLatestPerContext: onlyLatestPerContext)
        requestBuilder.execute { (response: Response<EvaluationFormResponseEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the published evaluation forms.
     - GET /api/v2/quality/publishedforms/evaluations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "weightMode" : "SCALED",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestPerContext: (query) onlyLatestPerContext (optional)

     - returns: RequestBuilder<EvaluationFormResponseEntityListing> 
     */
    open class func getQualityPublishedformsEvaluationsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestPerContext: Bool? = nil) -> RequestBuilder<EvaluationFormResponseEntityListing> {        
        let path = "/api/v2/quality/publishedforms/evaluations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "name": name, 
            "onlyLatestPerContext": onlyLatestPerContext
        ])

        let requestBuilder: RequestBuilder<EvaluationFormResponseEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the most recent published version of a survey form.
     
     - parameter formId: (path) Form ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedformsSurvey(formId: String, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformsSurveyWithRequestBuilder(formId: formId)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the most recent published version of a survey form.
     - GET /api/v2/quality/publishedforms/surveys/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func getQualityPublishedformsSurveyWithRequestBuilder(formId: String) -> RequestBuilder<SurveyForm> {        
        var path = "/api/v2/quality/publishedforms/surveys/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the published survey forms.
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestEnabledPerContext: (query) onlyLatestEnabledPerContext (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualityPublishedformsSurveys(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestEnabledPerContext: Bool? = nil, completion: @escaping ((_ data: SurveyFormEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualityPublishedformsSurveysWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, onlyLatestEnabledPerContext: onlyLatestEnabledPerContext)
        requestBuilder.execute { (response: Response<SurveyFormEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the published survey forms.
     - GET /api/v2/quality/publishedforms/surveys
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  }, {
    "footer" : "footer",
    "publishedVersions" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "header" : "header",
    "disabled" : true,
    "contextId" : "contextId",
    "language" : "language",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    }, {
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "explanationPrompt" : "explanationPrompt",
        "helpText" : "helpText",
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "maxResponseCharacters" : 0,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "id" : "id",
      "type" : "type",
      "naEnabled" : true
    } ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter name: (query) Name (optional)
     - parameter onlyLatestEnabledPerContext: (query) onlyLatestEnabledPerContext (optional)

     - returns: RequestBuilder<SurveyFormEntityListing> 
     */
    open class func getQualityPublishedformsSurveysWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, name: String? = nil, onlyLatestEnabledPerContext: Bool? = nil) -> RequestBuilder<SurveyFormEntityListing> {        
        let path = "/api/v2/quality/publishedforms/surveys"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "name": name, 
            "onlyLatestEnabledPerContext": onlyLatestEnabledPerContext
        ])

        let requestBuilder: RequestBuilder<SurveyFormEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a survey for a conversation
     
     - parameter surveyId: (path) surveyId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualitySurvey(surveyId: String, completion: @escaping ((_ data: Survey?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualitySurveyWithRequestBuilder(surveyId: surveyId)
        requestBuilder.execute { (response: Response<Survey>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a survey for a conversation
     - GET /api/v2/quality/surveys/{surveyId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  },
  "surveyForm" : "{}",
  "surveyErrorDetails" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "answers" : {
    "npsScore" : 6,
    "questionGroupScores" : [ {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    }, {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    } ],
    "totalScore" : 0.8008282
  },
  "agentTeam" : "{}",
  "id" : "id",
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "queue" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "completedDate" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter surveyId: (path) surveyId 

     - returns: RequestBuilder<Survey> 
     */
    open class func getQualitySurveyWithRequestBuilder(surveyId: String) -> RequestBuilder<Survey> {        
        var path = "/api/v2/quality/surveys/{surveyId}"
        let surveyIdPreEscape = "\(surveyId)"
        let surveyIdPostEscape = surveyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{surveyId}", with: surveyIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Survey>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a survey as an end-customer, for the purposes of scoring it.
     
     - parameter customerSurveyUrl: (query) customerSurveyUrl 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getQualitySurveysScorable(customerSurveyUrl: String, completion: @escaping ((_ data: ScorableSurvey?,_ error: Error?) -> Void)) {
        let requestBuilder = getQualitySurveysScorableWithRequestBuilder(customerSurveyUrl: customerSurveyUrl)
        requestBuilder.execute { (response: Response<ScorableSurvey>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a survey as an end-customer, for the purposes of scoring it.
     - GET /api/v2/quality/surveys/scorable
     - examples: [{contentType=application/json, example={
  "surveyForm" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "answers" : {
    "npsScore" : 6,
    "questionGroupScores" : [ {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    }, {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    } ],
    "totalScore" : 0.8008282
  },
  "id" : "id",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter customerSurveyUrl: (query) customerSurveyUrl 

     - returns: RequestBuilder<ScorableSurvey> 
     */
    open class func getQualitySurveysScorableWithRequestBuilder(customerSurveyUrl: String) -> RequestBuilder<ScorableSurvey> {        
        let path = "/api/v2/quality/surveys/scorable"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "customerSurveyUrl": customerSurveyUrl
        ])

        let requestBuilder: RequestBuilder<ScorableSurvey>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Survey form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchQualityFormsSurvey(formId: String, body: SurveyForm, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = patchQualityFormsSurveyWithRequestBuilder(formId: formId, body: body)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.
     - PATCH /api/v2/quality/forms/surveys/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Survey form 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func patchQualityFormsSurveyWithRequestBuilder(formId: String, body: SurveyForm) -> RequestBuilder<SurveyForm> {        
        var path = "/api/v2/quality/forms/surveys/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    /**
     Query for evaluation aggregates
     
     - parameter body: (body) query 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postAnalyticsEvaluationsAggregatesQuery(body: EvaluationAggregationQuery, completion: @escaping ((_ data: EvaluationAggregateQueryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postAnalyticsEvaluationsAggregatesQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationAggregateQueryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query for evaluation aggregates
     - POST /api/v2/analytics/evaluations/aggregates/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  }, {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  } ]
}, statusCode=200}]
     
     - parameter body: (body) query 

     - returns: RequestBuilder<EvaluationAggregateQueryResponse> 
     */
    open class func postAnalyticsEvaluationsAggregatesQueryWithRequestBuilder(body: EvaluationAggregationQuery) -> RequestBuilder<EvaluationAggregateQueryResponse> {        
        let path = "/api/v2/analytics/evaluations/aggregates/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationAggregateQueryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Query for survey aggregates
     
     - parameter body: (body) query 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postAnalyticsSurveysAggregatesQuery(body: SurveyAggregationQuery, completion: @escaping ((_ data: SurveyAggregateQueryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postAnalyticsSurveysAggregatesQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<SurveyAggregateQueryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query for survey aggregates
     - POST /api/v2/analytics/surveys/aggregates/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  }, {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  } ]
}, statusCode=200}]
     
     - parameter body: (body) query 

     - returns: RequestBuilder<SurveyAggregateQueryResponse> 
     */
    open class func postAnalyticsSurveysAggregatesQueryWithRequestBuilder(body: SurveyAggregationQuery) -> RequestBuilder<SurveyAggregateQueryResponse> {        
        let path = "/api/v2/analytics/surveys/aggregates/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyAggregateQueryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a calibration
     
     - parameter body: (body) calibration 
     - parameter expand: (query) calibratorId (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityCalibrations(body: CalibrationCreate, expand: String? = nil, completion: @escaping ((_ data: Calibration?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityCalibrationsWithRequestBuilder(body: body, expand: expand)
        requestBuilder.execute { (response: Response<Calibration>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a calibration
     - POST /api/v2/quality/calibrations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "evaluations" : [ null, null ],
  "selfUri" : "https://openapi-generator.tech",
  "evaluators" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "contextId" : "contextId",
  "averageScore" : 4,
  "calibrator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "highScore" : 5,
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "expertEvaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "lowScore" : 9,
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : {
    "publishedVersions" : {
      "total" : 7,
      "pageCount" : 1,
      "pageNumber" : 6,
      "entities" : [ null, null ],
      "firstUri" : "https://openapi-generator.tech",
      "lastUri" : "https://openapi-generator.tech",
      "selfUri" : "https://openapi-generator.tech",
      "pageSize" : 1,
      "nextUri" : "https://openapi-generator.tech",
      "previousUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }
}, statusCode=200}]
     
     - parameter body: (body) calibration 
     - parameter expand: (query) calibratorId (optional)

     - returns: RequestBuilder<Calibration> 
     */
    open class func postQualityCalibrationsWithRequestBuilder(body: CalibrationCreate, expand: String? = nil) -> RequestBuilder<Calibration> {        
        let path = "/api/v2/quality/calibrations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<Calibration>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Create an evaluation
     
     - parameter conversationId: (path) conversationId 
     - parameter body: (body) evaluation 
     - parameter expand: (query) evaluatorId (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityConversationEvaluations(conversationId: String, body: Evaluation, expand: String? = nil, completion: @escaping ((_ data: Evaluation?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityConversationEvaluationsWithRequestBuilder(conversationId: conversationId, body: body, expand: expand)
        requestBuilder.execute { (response: Response<Evaluation>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create an evaluation
     - POST /api/v2/quality/conversations/{conversationId}/evaluations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "assignedDate" : "2000-01-23T04:56:07.000+00:00",
  "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "resourceId" : "resourceId",
  "evaluationSource" : "{}",
  "redacted" : true,
  "answers" : {
    "totalNonCriticalScore" : 8.762042,
    "comments" : "comments",
    "privateComments" : "privateComments",
    "agentComments" : "agentComments",
    "totalCriticalScore" : 6.6835623,
    "questionGroupScores" : [ {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    }, {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    } ],
    "transcriptTopics" : [ {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    }, {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    } ],
    "totalScore" : 9.36931,
    "anyFailedKillQuestions" : true
  },
  "changedDate" : "2000-01-23T04:56:07.000+00:00",
  "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
  "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
  "agentTeam" : "{}",
  "hasAssistanceFailed" : true,
  "id" : "id",
  "rescore" : true,
  "calibration" : {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  },
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : "{}",
  "evaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "releaseDate" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "mediaType" : [ "CALL", "CALL" ],
  "revisionCreatedDate" : "2000-01-23T04:56:07.000+00:00",
  "assigneeApplicable" : true,
  "neverRelease" : true,
  "agentHasRead" : true,
  "conversationDate" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "assigned" : true,
  "assignee" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "queue" : {
    "peerId" : "peerId",
    "conditionalGroupRouting" : "{}",
    "enableAudioMonitoring" : true,
    "mediaSettings" : "{}",
    "enableManualAssignment" : true,
    "description" : "description",
    "onHoldPrompt" : "{}",
    "emailInQueueFlow" : "{}",
    "autoAnswerOnly" : true,
    "routingRules" : [ {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    }, {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    } ],
    "skillEvaluationMethod" : "NONE",
    "defaultScripts" : {
      "key" : {
        "variables" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "customActions" : "{}",
        "versionDate" : "2000-01-23T04:56:07.000+00:00",
        "division" : "{}",
        "features" : "{}",
        "versionId" : "versionId",
        "createdDate" : "2000-01-23T04:56:07.000+00:00",
        "pages" : [ {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        }, {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        } ],
        "startPageName" : "startPageName",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "startPageId" : "startPageId",
        "id" : "id",
        "publishedDate" : "2000-01-23T04:56:07.000+00:00"
      }
    },
    "division" : "{}",
    "suppressInQueueCallRecording" : true,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "queueFlow" : "{}",
    "callingPartyNumber" : "callingPartyNumber",
    "userMemberCount" : 6,
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "memberGroups" : [ {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    }, {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    } ],
    "scoringMethod" : "TimestampAndPriority",
    "joinedMemberCount" : 1,
    "messageInQueueFlow" : "{}",
    "callingPartyName" : "callingPartyName",
    "acwSettings" : "{}",
    "memberCount" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "whisperPrompt" : "{}",
    "enableTranscription" : true,
    "outboundEmailAddress" : {
      "route" : {
        "signature" : "{}",
        "replyEmailAddress" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "pattern" : "pattern",
        "language" : "{}",
        "autoBcc" : [ {
          "name" : "name",
          "email" : "email"
        }, {
          "name" : "name",
          "email" : "email"
        } ],
        "priority" : 7,
        "fromEmail" : "fromEmail",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        } ],
        "allowMultipleActions" : true,
        "name" : "name",
        "fromName" : "fromName",
        "id" : "id",
        "historyInclusion" : "Include",
        "queue" : "{}",
        "flow" : "{}",
        "spamFlow" : "{}"
      },
      "domain" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    },
    "bullseye" : "{}",
    "outboundMessagingAddresses" : "{}",
    "createdBy" : "createdBy",
    "directRouting" : "{}",
    "name" : "name",
    "agentOwnedRouting" : "{}"
  },
  "isScoringIndex" : true,
  "status" : "PENDING",
  "resourceType" : "EMAIL"
}, statusCode=200}]
     
     - parameter conversationId: (path) conversationId 
     - parameter body: (body) evaluation 
     - parameter expand: (query) evaluatorId (optional)

     - returns: RequestBuilder<Evaluation> 
     */
    open class func postQualityConversationEvaluationsWithRequestBuilder(conversationId: String, body: Evaluation, expand: String? = nil) -> RequestBuilder<Evaluation> {        
        var path = "/api/v2/quality/conversations/{conversationId}/evaluations"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<Evaluation>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create audit query execution
     
     - parameter body: (body) query 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityConversationsAuditsQuery(body: QMAuditQueryRequest, completion: @escaping ((_ data: QualityAuditQueryExecutionStatusResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityConversationsAuditsQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<QualityAuditQueryExecutionStatusResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create audit query execution
     - POST /api/v2/quality/conversations/audits/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "dateStart" : "2000-01-23T04:56:07.000+00:00",
  "interval" : "interval",
  "id" : "id",
  "state" : "Queued",
  "filters" : [ {
    "property" : "UserId",
    "value" : "value"
  }, {
    "property" : "UserId",
    "value" : "value"
  } ],
  "sort" : [ {
    "sortOrder" : "ascending",
    "name" : "Timestamp"
  }, {
    "sortOrder" : "ascending",
    "name" : "Timestamp"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) query 

     - returns: RequestBuilder<QualityAuditQueryExecutionStatusResponse> 
     */
    open class func postQualityConversationsAuditsQueryWithRequestBuilder(body: QMAuditQueryRequest) -> RequestBuilder<QualityAuditQueryExecutionStatusResponse> {        
        let path = "/api/v2/quality/conversations/audits/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<QualityAuditQueryExecutionStatusResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Query for evaluation aggregates for the current user
     
     - parameter body: (body) query 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityEvaluationsAggregatesQueryMe(body: EvaluationAggregationQueryMe, completion: @escaping ((_ data: EvaluationAggregateQueryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityEvaluationsAggregatesQueryMeWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationAggregateQueryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query for evaluation aggregates for the current user
     - POST /api/v2/quality/evaluations/aggregates/query/me
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  }, {
    "data" : [ {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    }, {
      "interval" : "interval",
      "metrics" : [ {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      }, {
        "metric" : "metric",
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "qualifier" : "qualifier"
      } ],
      "views" : [ {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      }, {
        "stats" : {
          "max" : 0.8008281904610115,
          "count" : 1,
          "sum" : 2.3021358869347655,
          "p95" : 7,
          "countNegative" : 5,
          "numerator" : 3.616076749251911,
          "denominator" : 2.027123023002322,
          "target" : 4.145608029883936,
          "p99" : 1,
          "current" : 7.061401241503109,
          "min" : 6.027456183070403,
          "countPositive" : 5,
          "ratio" : 9.301444243932576
        },
        "name" : "name"
      } ]
    } ],
    "group" : {
      "key" : "group"
    }
  } ]
}, statusCode=200}]
     
     - parameter body: (body) query 

     - returns: RequestBuilder<EvaluationAggregateQueryResponse> 
     */
    open class func postQualityEvaluationsAggregatesQueryMeWithRequestBuilder(body: EvaluationAggregationQueryMe) -> RequestBuilder<EvaluationAggregateQueryResponse> {        
        let path = "/api/v2/quality/evaluations/aggregates/query/me"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationAggregateQueryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Score evaluation
     
     - parameter body: (body) evaluationAndScoringSet 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityEvaluationsScoring(body: EvaluationFormAndScoringSet, completion: @escaping ((_ data: EvaluationScoringSet?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityEvaluationsScoringWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationScoringSet>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Score evaluation
     - POST /api/v2/quality/evaluations/scoring
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "totalNonCriticalScore" : 8.762042,
  "comments" : "comments",
  "privateComments" : "privateComments",
  "agentComments" : "agentComments",
  "totalCriticalScore" : 6.6835623,
  "questionGroupScores" : [ {
    "totalNonCriticalScore" : 1.284659,
    "totalCriticalScoreUnweighted" : 5.9448957,
    "totalNonCriticalScoreUnweighted" : 3.3531933,
    "systemMarkedNA" : true,
    "markedNA" : true,
    "totalScoreUnweighted" : 6.778325,
    "maxTotalNonCriticalScore" : 2.8841622,
    "questionScores" : [ {
      "answerId" : "answerId",
      "failedKillQuestion" : true,
      "score" : 7,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "comments" : "comments",
      "markedNA" : true,
      "assistedAnswerId" : "assistedAnswerId"
    }, {
      "answerId" : "answerId",
      "failedKillQuestion" : true,
      "score" : 7,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "comments" : "comments",
      "markedNA" : true,
      "assistedAnswerId" : "assistedAnswerId"
    } ],
    "questionGroupId" : "questionGroupId",
    "totalScore" : 9.018348,
    "maxTotalScore" : 6.4384236,
    "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
    "totalCriticalScore" : 3.5571952,
    "maxTotalCriticalScore" : 6.965118,
    "maxTotalCriticalScoreUnweighted" : 6.704019,
    "maxTotalScoreUnweighted" : 6.878052
  }, {
    "totalNonCriticalScore" : 1.284659,
    "totalCriticalScoreUnweighted" : 5.9448957,
    "totalNonCriticalScoreUnweighted" : 3.3531933,
    "systemMarkedNA" : true,
    "markedNA" : true,
    "totalScoreUnweighted" : 6.778325,
    "maxTotalNonCriticalScore" : 2.8841622,
    "questionScores" : [ {
      "answerId" : "answerId",
      "failedKillQuestion" : true,
      "score" : 7,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "comments" : "comments",
      "markedNA" : true,
      "assistedAnswerId" : "assistedAnswerId"
    }, {
      "answerId" : "answerId",
      "failedKillQuestion" : true,
      "score" : 7,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "comments" : "comments",
      "markedNA" : true,
      "assistedAnswerId" : "assistedAnswerId"
    } ],
    "questionGroupId" : "questionGroupId",
    "totalScore" : 9.018348,
    "maxTotalScore" : 6.4384236,
    "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
    "totalCriticalScore" : 3.5571952,
    "maxTotalCriticalScore" : 6.965118,
    "maxTotalCriticalScoreUnweighted" : 6.704019,
    "maxTotalScoreUnweighted" : 6.878052
  } ],
  "transcriptTopics" : [ {
    "duration" : {
      "totalMilliseconds" : 6
    },
    "offset" : "{}",
    "recordingLocation" : 0,
    "startTimeMilliseconds" : 7,
    "confidence" : 0,
    "name" : "name",
    "topicPhrase" : "topicPhrase",
    "id" : "id",
    "transcriptPhrase" : "transcriptPhrase"
  }, {
    "duration" : {
      "totalMilliseconds" : 6
    },
    "offset" : "{}",
    "recordingLocation" : 0,
    "startTimeMilliseconds" : 7,
    "confidence" : 0,
    "name" : "name",
    "topicPhrase" : "topicPhrase",
    "id" : "id",
    "transcriptPhrase" : "transcriptPhrase"
  } ],
  "totalScore" : 9.36931,
  "anyFailedKillQuestions" : true
}, statusCode=200}]
     
     - parameter body: (body) evaluationAndScoringSet 

     - returns: RequestBuilder<EvaluationScoringSet> 
     */
    open class func postQualityEvaluationsScoringWithRequestBuilder(body: EvaluationFormAndScoringSet) -> RequestBuilder<EvaluationScoringSet> {        
        let path = "/api/v2/quality/evaluations/scoring"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationScoringSet>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create an evaluation form.
     
     - parameter body: (body) Evaluation form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityForms(body: EvaluationForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityFormsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create an evaluation form.
     - POST /api/v2/quality/forms
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Evaluation form 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func postQualityFormsWithRequestBuilder(body: EvaluationForm) -> RequestBuilder<EvaluationFormResponse> {        
        let path = "/api/v2/quality/forms"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create an evaluation form.
     
     - parameter body: (body) Evaluation form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityFormsEvaluations(body: EvaluationForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityFormsEvaluationsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create an evaluation form.
     - POST /api/v2/quality/forms/evaluations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Evaluation form 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func postQualityFormsEvaluationsWithRequestBuilder(body: EvaluationForm) -> RequestBuilder<EvaluationFormResponse> {        
        let path = "/api/v2/quality/forms/evaluations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a survey form.
     
     - parameter body: (body) Survey form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityFormsSurveys(body: SurveyForm, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityFormsSurveysWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a survey form.
     - POST /api/v2/quality/forms/surveys
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Survey form 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func postQualityFormsSurveysWithRequestBuilder(body: SurveyForm) -> RequestBuilder<SurveyForm> {        
        let path = "/api/v2/quality/forms/surveys"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Publish an evaluation form.
     
     - parameter body: (body) Publish request containing id of form to publish 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityPublishedforms(body: PublishForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityPublishedformsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Publish an evaluation form.
     - POST /api/v2/quality/publishedforms
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Publish request containing id of form to publish 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func postQualityPublishedformsWithRequestBuilder(body: PublishForm) -> RequestBuilder<EvaluationFormResponse> {        
        let path = "/api/v2/quality/publishedforms"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Publish an evaluation form.
     
     - parameter body: (body) Publish request containing id of form to publish 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityPublishedformsEvaluations(body: PublishForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityPublishedformsEvaluationsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Publish an evaluation form.
     - POST /api/v2/quality/publishedforms/evaluations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Publish request containing id of form to publish 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func postQualityPublishedformsEvaluationsWithRequestBuilder(body: PublishForm) -> RequestBuilder<EvaluationFormResponse> {        
        let path = "/api/v2/quality/publishedforms/evaluations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Publish a survey form.
     
     - parameter body: (body) Survey form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualityPublishedformsSurveys(body: PublishForm, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualityPublishedformsSurveysWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Publish a survey form.
     - POST /api/v2/quality/publishedforms/surveys
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Survey form 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func postQualityPublishedformsSurveysWithRequestBuilder(body: PublishForm) -> RequestBuilder<SurveyForm> {        
        let path = "/api/v2/quality/publishedforms/surveys"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Score survey
     
     - parameter body: (body) surveyAndScoringSet 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postQualitySurveysScoring(body: SurveyFormAndScoringSet, completion: @escaping ((_ data: SurveyScoringSet?,_ error: Error?) -> Void)) {
        let requestBuilder = postQualitySurveysScoringWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<SurveyScoringSet>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Score survey
     - POST /api/v2/quality/surveys/scoring
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "npsScore" : 6,
  "questionGroupScores" : [ {
    "maxTotalScore" : 5.962134,
    "systemMarkedNA" : true,
    "markedNA" : true,
    "questionScores" : [ {
      "answerId" : "answerId",
      "score" : 5,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "npsTextAnswer" : "npsTextAnswer",
      "markedNA" : true,
      "freeTextAnswer" : "freeTextAnswer",
      "npsScore" : 2,
      "assistedAnswerId" : "assistedAnswerId"
    }, {
      "answerId" : "answerId",
      "score" : 5,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "npsTextAnswer" : "npsTextAnswer",
      "markedNA" : true,
      "freeTextAnswer" : "freeTextAnswer",
      "npsScore" : 2,
      "assistedAnswerId" : "assistedAnswerId"
    } ],
    "questionGroupId" : "questionGroupId",
    "totalScore" : 1.4658129
  }, {
    "maxTotalScore" : 5.962134,
    "systemMarkedNA" : true,
    "markedNA" : true,
    "questionScores" : [ {
      "answerId" : "answerId",
      "score" : 5,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "npsTextAnswer" : "npsTextAnswer",
      "markedNA" : true,
      "freeTextAnswer" : "freeTextAnswer",
      "npsScore" : 2,
      "assistedAnswerId" : "assistedAnswerId"
    }, {
      "answerId" : "answerId",
      "score" : 5,
      "questionId" : "questionId",
      "systemMarkedNA" : true,
      "npsTextAnswer" : "npsTextAnswer",
      "markedNA" : true,
      "freeTextAnswer" : "freeTextAnswer",
      "npsScore" : 2,
      "assistedAnswerId" : "assistedAnswerId"
    } ],
    "questionGroupId" : "questionGroupId",
    "totalScore" : 1.4658129
  } ],
  "totalScore" : 0.8008282
}, statusCode=200}]
     
     - parameter body: (body) surveyAndScoringSet 

     - returns: RequestBuilder<SurveyScoringSet> 
     */
    open class func postQualitySurveysScoringWithRequestBuilder(body: SurveyFormAndScoringSet) -> RequestBuilder<SurveyScoringSet> {        
        let path = "/api/v2/quality/surveys/scoring"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyScoringSet>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter body: (body) Calibration 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualityCalibration(calibrationId: String, body: Calibration, completion: @escaping ((_ data: Calibration?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualityCalibrationWithRequestBuilder(calibrationId: calibrationId, body: body)
        requestBuilder.execute { (response: Response<Calibration>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex
     - PUT /api/v2/quality/calibrations/{calibrationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "evaluations" : [ null, null ],
  "selfUri" : "https://openapi-generator.tech",
  "evaluators" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ],
  "contextId" : "contextId",
  "averageScore" : 4,
  "calibrator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "highScore" : 5,
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "expertEvaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "name" : "name",
  "id" : "id",
  "lowScore" : 9,
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : {
    "publishedVersions" : {
      "total" : 7,
      "pageCount" : 1,
      "pageNumber" : 6,
      "entities" : [ null, null ],
      "firstUri" : "https://openapi-generator.tech",
      "lastUri" : "https://openapi-generator.tech",
      "selfUri" : "https://openapi-generator.tech",
      "pageSize" : 1,
      "nextUri" : "https://openapi-generator.tech",
      "previousUri" : "https://openapi-generator.tech"
    },
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "contextId" : "contextId",
    "id" : "id",
    "published" : true,
    "questionGroups" : [ {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    }, {
      "defaultAnswersToHighest" : true,
      "manualWeight" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "name" : "name",
      "questions" : [ {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      }, {
        "helpText" : "helpText",
        "commentsRequired" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "isCritical" : true,
        "id" : "id",
        "text" : "text",
        "type" : "multipleChoiceQuestion",
        "isKill" : true,
        "naEnabled" : true,
        "answerOptions" : [ {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        }, {
          "id" : "id",
          "text" : "text",
          "value" : 1,
          "assistanceConditions" : [ {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          }, {
            "topicIds" : [ "topicIds", "topicIds" ],
            "operator" : "EXISTS"
          } ]
        } ]
      } ],
      "weight" : 1.2315135,
      "id" : "id",
      "defaultAnswersToNA" : true,
      "type" : "type",
      "naEnabled" : true
    } ]
  }
}, statusCode=200}]
     
     - parameter calibrationId: (path) Calibration ID 
     - parameter body: (body) Calibration 

     - returns: RequestBuilder<Calibration> 
     */
    open class func putQualityCalibrationWithRequestBuilder(calibrationId: String, body: Calibration) -> RequestBuilder<Calibration> {        
        var path = "/api/v2/quality/calibrations/{calibrationId}"
        let calibrationIdPreEscape = "\(calibrationId)"
        let calibrationIdPostEscape = calibrationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{calibrationId}", with: calibrationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Calibration>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    
    /**
     Update an evaluation
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter body: (body) evaluation 
     - parameter expand: (query) evaluatorId, evaluationForm, assignee, evaluator (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualityConversationEvaluation(conversationId: String, evaluationId: String, body: Evaluation, expand: String? = nil, completion: @escaping ((_ data: EvaluationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualityConversationEvaluationWithRequestBuilder(conversationId: conversationId, evaluationId: evaluationId, body: body, expand: expand)
        requestBuilder.execute { (response: Response<EvaluationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an evaluation
     - PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}
     - The quality:evaluation:edit permission allows modification of most fields, while the quality:evaluation:editScore permission allows an evaluator to change just the question scores, and the quality:evaluation:editAgentSignoff permission allows an agent to change the agent comments and sign off on the evaluation. authorizedActions is not returned for this PUT request, and is only returned for GET requests to this endpoint.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "assignedDate" : "2000-01-23T04:56:07.000+00:00",
  "dateAssigneeChanged" : "2000-01-23T04:56:07.000+00:00",
  "agent" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "resourceId" : "resourceId",
  "evaluationSource" : "{}",
  "redacted" : true,
  "answers" : {
    "totalNonCriticalScore" : 8.762042,
    "comments" : "comments",
    "privateComments" : "privateComments",
    "agentComments" : "agentComments",
    "totalCriticalScore" : 6.6835623,
    "questionGroupScores" : [ {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    }, {
      "totalNonCriticalScore" : 1.284659,
      "totalCriticalScoreUnweighted" : 5.9448957,
      "totalNonCriticalScoreUnweighted" : 3.3531933,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "totalScoreUnweighted" : 6.778325,
      "maxTotalNonCriticalScore" : 2.8841622,
      "questionScores" : [ {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "failedKillQuestion" : true,
        "score" : 7,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "comments" : "comments",
        "markedNA" : true,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 9.018348,
      "maxTotalScore" : 6.4384236,
      "maxTotalNonCriticalScoreUnweighted" : 3.0937452,
      "totalCriticalScore" : 3.5571952,
      "maxTotalCriticalScore" : 6.965118,
      "maxTotalCriticalScoreUnweighted" : 6.704019,
      "maxTotalScoreUnweighted" : 6.878052
    } ],
    "transcriptTopics" : [ {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    }, {
      "duration" : {
        "totalMilliseconds" : 6
      },
      "offset" : "{}",
      "recordingLocation" : 0,
      "startTimeMilliseconds" : 7,
      "confidence" : 0,
      "name" : "name",
      "topicPhrase" : "topicPhrase",
      "id" : "id",
      "transcriptPhrase" : "transcriptPhrase"
    } ],
    "totalScore" : 9.36931,
    "anyFailedKillQuestions" : true
  },
  "changedDate" : "2000-01-23T04:56:07.000+00:00",
  "authorizedActions" : [ "authorizedActions", "authorizedActions" ],
  "conversationEndDate" : "2000-01-23T04:56:07.000+00:00",
  "hasAssistanceFailed" : true,
  "id" : "id",
  "rescore" : true,
  "calibration" : {
    "agent" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "evaluations" : [ null, null ],
    "selfUri" : "https://openapi-generator.tech",
    "evaluators" : [ {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    }, {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    } ],
    "contextId" : "contextId",
    "averageScore" : 4,
    "calibrator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "highScore" : 5,
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "expertEvaluator" : {
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "acdAutoAnswer" : true,
      "routingStatus" : "{}",
      "title" : "title",
      "division" : "{}",
      "authorization" : "{}",
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "skillUri" : "https://openapi-generator.tech",
        "id" : "id",
        "state" : "active",
        "proficiency" : 7.061401241503109
      } ],
      "station" : "{}",
      "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
      "id" : "id",
      "state" : "active",
      "preferredName" : "preferredName",
      "department" : "department",
      "presence" : "{}",
      "lastTokenIssued" : {
        "dateIssued" : "2000-01-23T04:56:07.000+00:00"
      },
      "email" : "email",
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "employerInfo" : {
        "employeeType" : "employeeType",
        "dateHire" : "dateHire",
        "employeeId" : "employeeId",
        "officialName" : "officialName"
      },
      "languages" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id",
        "state" : "active",
        "languageUri" : "https://openapi-generator.tech",
        "proficiency" : 9.301444243932576
      } ],
      "selfUri" : "https://openapi-generator.tech",
      "conversationSummary" : "{}",
      "groups" : [ {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      }, {
        "images" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addresses" : [ {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        }, {
          "extension" : "extension",
          "address" : "address",
          "display" : "display",
          "mediaType" : "PHONE",
          "type" : "GROUPRING"
        } ],
        "visibility" : "public",
        "memberCount" : 5,
        "selfUri" : "https://openapi-generator.tech",
        "description" : "description",
        "dateModified" : "2000-01-23T04:56:07.000+00:00",
        "owners" : [ null, null ],
        "rolesEnabled" : true,
        "type" : "official",
        "version" : 2,
        "rulesVisible" : true,
        "name" : "name",
        "id" : "id",
        "state" : "active"
      } ],
      "primaryContactInfo" : [ {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      }, {
        "extension" : "extension",
        "address" : "address",
        "countryCode" : "countryCode",
        "display" : "display",
        "integration" : "microsoftteams",
        "mediaType" : "PHONE",
        "type" : "PRIMARY"
      } ],
      "biography" : {
        "education" : [ {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        }, {
          "notes" : "notes",
          "school" : "school",
          "dateStart" : "2000-01-23",
          "dateEnd" : "2000-01-23",
          "fieldOfStudy" : "fieldOfStudy"
        } ],
        "hobbies" : [ "hobbies", "hobbies" ],
        "biography" : "biography",
        "interests" : [ "interests", "interests" ],
        "spouse" : "spouse"
      },
      "team" : "{}",
      "certifications" : [ "certifications", "certifications" ],
      "version" : 6,
      "outOfOffice" : "{}",
      "languagePreference" : "languagePreference",
      "profileSkills" : [ "profileSkills", "profileSkills" ],
      "chat" : {
        "jabberId" : "jabberId"
      },
      "name" : "name",
      "integrationPresence" : "{}",
      "locations" : [ {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      }, {
        "notes" : "notes",
        "coordinates" : {
          "key" : 1.4658129805029452
        },
        "locationDefinition" : {
          "images" : "images",
          "address" : {
            "zipcode" : "zipcode",
            "country" : "country",
            "city" : "city",
            "street1" : "street1",
            "countryName" : "countryName",
            "state" : "state",
            "street2" : "street2"
          },
          "notes" : "notes",
          "floorplanImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "addressVerificationDetails" : "{}",
          "selfUri" : "https://openapi-generator.tech",
          "profileImage" : [ {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          }, {
            "imageUri" : "imageUri",
            "resolution" : "resolution"
          } ],
          "emergencyNumber" : "{}",
          "version" : 5,
          "path" : [ "path", "path" ],
          "addressStored" : true,
          "name" : "name",
          "id" : "id",
          "contactUser" : "{}",
          "state" : "active",
          "addressVerified" : true
        },
        "id" : "id",
        "floorplanId" : "floorplanId"
      } ],
      "username" : "username",
      "geolocation" : "{}"
    },
    "name" : "name",
    "id" : "id",
    "lowScore" : 9,
    "conversation" : {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    },
    "evaluationForm" : {
      "publishedVersions" : {
        "total" : 7,
        "pageCount" : 1,
        "pageNumber" : 6,
        "entities" : [ null, null ],
        "firstUri" : "https://openapi-generator.tech",
        "lastUri" : "https://openapi-generator.tech",
        "selfUri" : "https://openapi-generator.tech",
        "pageSize" : 1,
        "nextUri" : "https://openapi-generator.tech",
        "previousUri" : "https://openapi-generator.tech"
      },
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "contextId" : "contextId",
      "id" : "id",
      "published" : true,
      "questionGroups" : [ {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      }, {
        "defaultAnswersToHighest" : true,
        "manualWeight" : true,
        "visibilityCondition" : {
          "combiningOperation" : "AND",
          "predicates" : [ "{}", "{}" ]
        },
        "name" : "name",
        "questions" : [ {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        }, {
          "helpText" : "helpText",
          "commentsRequired" : true,
          "visibilityCondition" : {
            "combiningOperation" : "AND",
            "predicates" : [ "{}", "{}" ]
          },
          "isCritical" : true,
          "id" : "id",
          "text" : "text",
          "type" : "multipleChoiceQuestion",
          "isKill" : true,
          "naEnabled" : true,
          "answerOptions" : [ {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          }, {
            "id" : "id",
            "text" : "text",
            "value" : 1,
            "assistanceConditions" : [ {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            }, {
              "topicIds" : [ "topicIds", "topicIds" ],
              "operator" : "EXISTS"
            } ]
          } ]
        } ],
        "weight" : 1.2315135,
        "id" : "id",
        "defaultAnswersToNA" : true,
        "type" : "type",
        "naEnabled" : true
      } ]
    }
  },
  "conversation" : {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  },
  "evaluationForm" : "{}",
  "evaluator" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "releaseDate" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "mediaType" : [ "CALL", "CALL" ],
  "assigneeApplicable" : true,
  "neverRelease" : true,
  "agentHasRead" : true,
  "conversationDate" : "2000-01-23T04:56:07.000+00:00",
  "name" : "name",
  "assigned" : true,
  "assignee" : {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  },
  "queue" : {
    "peerId" : "peerId",
    "conditionalGroupRouting" : "{}",
    "enableAudioMonitoring" : true,
    "mediaSettings" : "{}",
    "enableManualAssignment" : true,
    "description" : "description",
    "onHoldPrompt" : "{}",
    "emailInQueueFlow" : "{}",
    "autoAnswerOnly" : true,
    "routingRules" : [ {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    }, {
      "waitSeconds" : 5.637376656633329,
      "threshold" : 5,
      "operator" : "MEETS_THRESHOLD"
    } ],
    "skillEvaluationMethod" : "NONE",
    "defaultScripts" : {
      "key" : {
        "variables" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "customActions" : "{}",
        "versionDate" : "2000-01-23T04:56:07.000+00:00",
        "division" : "{}",
        "features" : "{}",
        "versionId" : "versionId",
        "createdDate" : "2000-01-23T04:56:07.000+00:00",
        "pages" : [ {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        }, {
          "versionId" : "versionId",
          "createdDate" : "2000-01-23T04:56:07.000+00:00",
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
          "id" : "id",
          "rootContainer" : {
            "key" : "{}"
          },
          "properties" : {
            "key" : "{}"
          }
        } ],
        "startPageName" : "startPageName",
        "name" : "name",
        "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
        "startPageId" : "startPageId",
        "id" : "id",
        "publishedDate" : "2000-01-23T04:56:07.000+00:00"
      }
    },
    "division" : "{}",
    "suppressInQueueCallRecording" : true,
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "queueFlow" : "{}",
    "callingPartyNumber" : "callingPartyNumber",
    "userMemberCount" : 6,
    "modifiedBy" : "modifiedBy",
    "id" : "id",
    "memberGroups" : [ {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    }, {
      "division" : "{}",
      "memberCount" : 2,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "type" : "TEAM"
    } ],
    "scoringMethod" : "TimestampAndPriority",
    "joinedMemberCount" : 1,
    "messageInQueueFlow" : "{}",
    "callingPartyName" : "callingPartyName",
    "acwSettings" : "{}",
    "memberCount" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "whisperPrompt" : "{}",
    "enableTranscription" : true,
    "outboundEmailAddress" : {
      "route" : {
        "signature" : "{}",
        "replyEmailAddress" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "pattern" : "pattern",
        "language" : "{}",
        "autoBcc" : [ {
          "name" : "name",
          "email" : "email"
        }, {
          "name" : "name",
          "email" : "email"
        } ],
        "priority" : 7,
        "fromEmail" : "fromEmail",
        "skills" : [ {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        }, {
          "selfUri" : "https://openapi-generator.tech",
          "name" : "name",
          "id" : "id"
        } ],
        "allowMultipleActions" : true,
        "name" : "name",
        "fromName" : "fromName",
        "id" : "id",
        "historyInclusion" : "Include",
        "queue" : "{}",
        "flow" : "{}",
        "spamFlow" : "{}"
      },
      "domain" : {
        "selfUri" : "https://openapi-generator.tech",
        "name" : "name",
        "id" : "id"
      }
    },
    "bullseye" : "{}",
    "outboundMessagingAddresses" : "{}",
    "createdBy" : "createdBy",
    "directRouting" : "{}",
    "name" : "name",
    "agentOwnedRouting" : "{}"
  },
  "isScoringIndex" : true,
  "status" : "PENDING",
  "resourceType" : "EMAIL"
}, statusCode=200}]
     
     - parameter conversationId: (path) conversationId 
     - parameter evaluationId: (path) evaluationId 
     - parameter body: (body) evaluation 
     - parameter expand: (query) evaluatorId, evaluationForm, assignee, evaluator (optional)

     - returns: RequestBuilder<EvaluationResponse> 
     */
    open class func putQualityConversationEvaluationWithRequestBuilder(conversationId: String, evaluationId: String, body: Evaluation, expand: String? = nil) -> RequestBuilder<EvaluationResponse> {        
        var path = "/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let evaluationIdPreEscape = "\(evaluationId)"
        let evaluationIdPostEscape = evaluationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{evaluationId}", with: evaluationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<EvaluationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update an evaluation form.
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Evaluation form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualityForm(formId: String, body: EvaluationForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualityFormWithRequestBuilder(formId: formId, body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an evaluation form.
     - PUT /api/v2/quality/forms/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Evaluation form 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func putQualityFormWithRequestBuilder(formId: String, body: EvaluationForm) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/forms/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update an evaluation form.
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Evaluation form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualityFormsEvaluation(formId: String, body: EvaluationForm, completion: @escaping ((_ data: EvaluationFormResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualityFormsEvaluationWithRequestBuilder(formId: formId, body: body)
        requestBuilder.execute { (response: Response<EvaluationFormResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an evaluation form.
     - PUT /api/v2/quality/forms/evaluations/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weightMode" : "SCALED",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "contextId" : "contextId",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  }, {
    "defaultAnswersToHighest" : true,
    "manualWeight" : true,
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "helpText" : "helpText",
      "commentsRequired" : true,
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "isCritical" : true,
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "isKill" : true,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "weight" : 1.2315135,
    "id" : "id",
    "defaultAnswersToNA" : true,
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Evaluation form 

     - returns: RequestBuilder<EvaluationFormResponse> 
     */
    open class func putQualityFormsEvaluationWithRequestBuilder(formId: String, body: EvaluationForm) -> RequestBuilder<EvaluationFormResponse> {        
        var path = "/api/v2/quality/forms/evaluations/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EvaluationFormResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update a survey form.
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Survey form 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualityFormsSurvey(formId: String, body: SurveyForm, completion: @escaping ((_ data: SurveyForm?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualityFormsSurveyWithRequestBuilder(formId: formId, body: body)
        requestBuilder.execute { (response: Response<SurveyForm>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a survey form.
     - PUT /api/v2/quality/forms/surveys/{formId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "footer" : "footer",
  "publishedVersions" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "header" : "header",
  "disabled" : true,
  "contextId" : "contextId",
  "language" : "language",
  "id" : "id",
  "published" : true,
  "questionGroups" : [ {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  }, {
    "visibilityCondition" : {
      "combiningOperation" : "AND",
      "predicates" : [ "{}", "{}" ]
    },
    "name" : "name",
    "questions" : [ {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    }, {
      "explanationPrompt" : "explanationPrompt",
      "helpText" : "helpText",
      "visibilityCondition" : {
        "combiningOperation" : "AND",
        "predicates" : [ "{}", "{}" ]
      },
      "id" : "id",
      "text" : "text",
      "type" : "multipleChoiceQuestion",
      "maxResponseCharacters" : 0,
      "naEnabled" : true,
      "answerOptions" : [ {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      }, {
        "id" : "id",
        "text" : "text",
        "value" : 1,
        "assistanceConditions" : [ {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        }, {
          "topicIds" : [ "topicIds", "topicIds" ],
          "operator" : "EXISTS"
        } ]
      } ]
    } ],
    "id" : "id",
    "type" : "type",
    "naEnabled" : true
  } ]
}, statusCode=200}]
     
     - parameter formId: (path) Form ID 
     - parameter body: (body) Survey form 

     - returns: RequestBuilder<SurveyForm> 
     */
    open class func putQualityFormsSurveyWithRequestBuilder(formId: String, body: SurveyForm) -> RequestBuilder<SurveyForm> {        
        var path = "/api/v2/quality/forms/surveys/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SurveyForm>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update a survey as an end-customer, for the purposes of scoring it.
     
     - parameter customerSurveyUrl: (query) customerSurveyUrl 
     - parameter body: (body) survey 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putQualitySurveysScorable(customerSurveyUrl: String, body: ScorableSurvey, completion: @escaping ((_ data: ScorableSurvey?,_ error: Error?) -> Void)) {
        let requestBuilder = putQualitySurveysScorableWithRequestBuilder(customerSurveyUrl: customerSurveyUrl, body: body)
        requestBuilder.execute { (response: Response<ScorableSurvey>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a survey as an end-customer, for the purposes of scoring it.
     - PUT /api/v2/quality/surveys/scorable
     - examples: [{contentType=application/json, example={
  "surveyForm" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "answers" : {
    "npsScore" : 6,
    "questionGroupScores" : [ {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    }, {
      "maxTotalScore" : 5.962134,
      "systemMarkedNA" : true,
      "markedNA" : true,
      "questionScores" : [ {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      }, {
        "answerId" : "answerId",
        "score" : 5,
        "questionId" : "questionId",
        "systemMarkedNA" : true,
        "npsTextAnswer" : "npsTextAnswer",
        "markedNA" : true,
        "freeTextAnswer" : "freeTextAnswer",
        "npsScore" : 2,
        "assistedAnswerId" : "assistedAnswerId"
      } ],
      "questionGroupId" : "questionGroupId",
      "totalScore" : 1.4658129
    } ],
    "totalScore" : 0.8008282
  },
  "id" : "id",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter customerSurveyUrl: (query) customerSurveyUrl 
     - parameter body: (body) survey 

     - returns: RequestBuilder<ScorableSurvey> 
     */
    open class func putQualitySurveysScorableWithRequestBuilder(customerSurveyUrl: String, body: ScorableSurvey) -> RequestBuilder<ScorableSurvey> {        
        let path = "/api/v2/quality/surveys/scorable"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "customerSurveyUrl": customerSurveyUrl
        ])

        let requestBuilder: RequestBuilder<ScorableSurvey>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
