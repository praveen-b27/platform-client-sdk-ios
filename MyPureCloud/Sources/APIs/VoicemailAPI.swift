//
// VoicemailAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class VoicemailAPI {
    
    /**
     Delete a voicemail message.
     
     - parameter messageId: (path) Message ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteVoicemailMessage(messageId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteVoicemailMessageWithRequestBuilder(messageId: messageId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a voicemail message.
     - DELETE /api/v2/voicemail/messages/{messageId}
     - A user voicemail can only be deleted by its associated user. A group voicemail can only be deleted by a user that is a member of the group. A queue voicemail can only be deleted by a user with the acd voicemail delete permission.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter messageId: (path) Message ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteVoicemailMessageWithRequestBuilder(messageId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/voicemail/messages/{messageId}"
        let messageIdPreEscape = "\(messageId)"
        let messageIdPostEscape = messageIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{messageId}", with: messageIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    /**
     Delete all voicemail messages
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteVoicemailMessages(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteVoicemailMessagesWithRequestBuilder()
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete all voicemail messages
     - DELETE /api/v2/voicemail/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth

     - returns: RequestBuilder<Void> 
     */
    open class func deleteVoicemailMessagesWithRequestBuilder() -> RequestBuilder<Void> {        
        let path = "/api/v2/voicemail/messages"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Get the group's mailbox information
     
     - parameter groupId: (path) groupId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailGroupMailbox(groupId: String, completion: @escaping ((_ data: VoicemailMailboxInfo?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailGroupMailboxWithRequestBuilder(groupId: groupId)
        requestBuilder.execute { (response: Response<VoicemailMailboxInfo>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the group's mailbox information
     - GET /api/v2/voicemail/groups/{groupId}/mailbox
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "usageSizeBytes" : 0,
  "deletedCount" : 5,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "unreadCount" : 1,
  "totalCount" : 6
}, statusCode=200}]
     
     - parameter groupId: (path) groupId 

     - returns: RequestBuilder<VoicemailMailboxInfo> 
     */
    open class func getVoicemailGroupMailboxWithRequestBuilder(groupId: String) -> RequestBuilder<VoicemailMailboxInfo> {        
        var path = "/api/v2/voicemail/groups/{groupId}/mailbox"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMailboxInfo>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     List voicemail messages
     
     - parameter groupId: (path) Group ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailGroupMessages(groupId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: VoicemailMessageEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailGroupMessagesWithRequestBuilder(groupId: groupId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<VoicemailMessageEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     List voicemail messages
     - GET /api/v2/voicemail/groups/{groupId}/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 2,
  "pageNumber" : 5,
  "entities" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 1,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<VoicemailMessageEntityListing> 
     */
    open class func getVoicemailGroupMessagesWithRequestBuilder(groupId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<VoicemailMessageEntityListing> {        
        var path = "/api/v2/voicemail/groups/{groupId}/messages"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<VoicemailMessageEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a group's voicemail policy
     
     - parameter groupId: (path) Group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailGroupPolicy(groupId: String, completion: @escaping ((_ data: VoicemailGroupPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailGroupPolicyWithRequestBuilder(groupId: groupId)
        requestBuilder.execute { (response: Response<VoicemailGroupPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a group's voicemail policy
     - GET /api/v2/voicemail/groups/{groupId}/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "disableEmailPii" : true,
  "sendEmailNotifications" : true,
  "includeEmailTranscriptions" : true,
  "stopRingingAfterRotations" : 6,
  "overflowGroupId" : "overflowGroupId",
  "interactiveResponsePromptId" : "interactiveResponsePromptId",
  "enabled" : true,
  "rotateCallsSecs" : 0,
  "languagePreference" : "languagePreference",
  "interactiveResponseRequired" : true,
  "name" : "name",
  "groupAlertType" : "RANDOM",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 

     - returns: RequestBuilder<VoicemailGroupPolicy> 
     */
    open class func getVoicemailGroupPolicyWithRequestBuilder(groupId: String) -> RequestBuilder<VoicemailGroupPolicy> {        
        var path = "/api/v2/voicemail/groups/{groupId}/policy"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailGroupPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get the current user's mailbox information
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMailbox(completion: @escaping ((_ data: VoicemailMailboxInfo?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMailboxWithRequestBuilder()
        requestBuilder.execute { (response: Response<VoicemailMailboxInfo>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the current user's mailbox information
     - GET /api/v2/voicemail/mailbox
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "usageSizeBytes" : 0,
  "deletedCount" : 5,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "unreadCount" : 1,
  "totalCount" : 6
}, statusCode=200}]

     - returns: RequestBuilder<VoicemailMailboxInfo> 
     */
    open class func getVoicemailMailboxWithRequestBuilder() -> RequestBuilder<VoicemailMailboxInfo> {        
        let path = "/api/v2/voicemail/mailbox"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMailboxInfo>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get the current user's mailbox information
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMeMailbox(completion: @escaping ((_ data: VoicemailMailboxInfo?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMeMailboxWithRequestBuilder()
        requestBuilder.execute { (response: Response<VoicemailMailboxInfo>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the current user's mailbox information
     - GET /api/v2/voicemail/me/mailbox
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "usageSizeBytes" : 0,
  "deletedCount" : 5,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "unreadCount" : 1,
  "totalCount" : 6
}, statusCode=200}]

     - returns: RequestBuilder<VoicemailMailboxInfo> 
     */
    open class func getVoicemailMeMailboxWithRequestBuilder() -> RequestBuilder<VoicemailMailboxInfo> {        
        let path = "/api/v2/voicemail/me/mailbox"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMailboxInfo>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     List voicemail messages
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMeMessages(pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: VoicemailMessageEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMeMessagesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<VoicemailMessageEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     List voicemail messages
     - GET /api/v2/voicemail/me/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 2,
  "pageNumber" : 5,
  "entities" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 1,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<VoicemailMessageEntityListing> 
     */
    open class func getVoicemailMeMessagesWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<VoicemailMessageEntityListing> {        
        let path = "/api/v2/voicemail/me/messages"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<VoicemailMessageEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get the current user's voicemail policy
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMePolicy(completion: @escaping ((_ data: VoicemailUserPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMePolicyWithRequestBuilder()
        requestBuilder.execute { (response: Response<VoicemailUserPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the current user's voicemail policy
     - GET /api/v2/voicemail/me/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "alertTimeoutSeconds" : 0,
  "pin" : "pin",
  "sendEmailNotifications" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true
}, statusCode=200}]

     - returns: RequestBuilder<VoicemailUserPolicy> 
     */
    open class func getVoicemailMePolicyWithRequestBuilder() -> RequestBuilder<VoicemailUserPolicy> {        
        let path = "/api/v2/voicemail/me/policy"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailUserPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a voicemail message
     
     - parameter messageId: (path) Message ID 
     - parameter expand: (query) If the caller is a known user, which fields, if any, to expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMessage(messageId: String, expand: [String]? = nil, completion: @escaping ((_ data: VoicemailMessage?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMessageWithRequestBuilder(messageId: messageId, expand: expand)
        requestBuilder.execute { (response: Response<VoicemailMessage>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a voicemail message
     - GET /api/v2/voicemail/messages/{messageId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "callerAddress" : "callerAddress",
  "note" : "note",
  "audioRecordingSizeBytes" : 6,
  "copiedTo" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  } ],
  "read" : true,
  "selfUri" : "https://openapi-generator.tech",
  "callerUser" : "{}",
  "deleteRetentionPolicy" : "{}",
  "callerName" : "callerName",
  "copiedFrom" : "{}",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "deleted" : true,
  "deletedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "audioRecordingDurationSeconds" : 0,
  "user" : "{}",
  "conversation" : "{}",
  "queue" : "{}",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter messageId: (path) Message ID 
     - parameter expand: (query) If the caller is a known user, which fields, if any, to expand (optional)

     - returns: RequestBuilder<VoicemailMessage> 
     */
    open class func getVoicemailMessageWithRequestBuilder(messageId: String, expand: [String]? = nil) -> RequestBuilder<VoicemailMessage> {        
        var path = "/api/v2/voicemail/messages/{messageId}"
        let messageIdPreEscape = "\(messageId)"
        let messageIdPostEscape = messageIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{messageId}", with: messageIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<VoicemailMessage>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum FormatId_getVoicemailMessageMedia: String { 
        case wav = "WAV"
        case webm = "WEBM"
        case wavUlaw = "WAV_ULAW"
        case oggVorbis = "OGG_VORBIS"
        case oggOpus = "OGG_OPUS"
        case mp3 = "MP3"
        case _none = "NONE"
    }

    
    /**
     Get media playback URI for this voicemail message
     
     - parameter messageId: (path) Message ID 
     - parameter formatId: (query) The desired media format. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMessageMedia(messageId: String, formatId: FormatId_getVoicemailMessageMedia? = nil, completion: @escaping ((_ data: VoicemailMediaInfo?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMessageMediaWithRequestBuilder(messageId: messageId, formatId: formatId)
        requestBuilder.execute { (response: Response<VoicemailMediaInfo>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get media playback URI for this voicemail message
     - GET /api/v2/voicemail/messages/{messageId}/media
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "mediaImageUri" : "https://openapi-generator.tech",
  "id" : "id",
  "waveformData" : [ 0.8008282, 0.8008282 ],
  "mediaFileUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter messageId: (path) Message ID 
     - parameter formatId: (query) The desired media format. (optional)

     - returns: RequestBuilder<VoicemailMediaInfo> 
     */
    open class func getVoicemailMessageMediaWithRequestBuilder(messageId: String, formatId: FormatId_getVoicemailMessageMedia? = nil) -> RequestBuilder<VoicemailMediaInfo> {        
        var path = "/api/v2/voicemail/messages/{messageId}/media"
        let messageIdPreEscape = "\(messageId)"
        let messageIdPostEscape = messageIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{messageId}", with: messageIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "formatId": formatId?.rawValue
        ])

        let requestBuilder: RequestBuilder<VoicemailMediaInfo>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     List voicemail messages
     
     - parameter ids: (query) An optional comma separated list of VoicemailMessage ids (optional)
     - parameter expand: (query) If the caller is a known user, which fields, if any, to expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailMessages(ids: String? = nil, expand: [String]? = nil, completion: @escaping ((_ data: VoicemailMessageEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailMessagesWithRequestBuilder(ids: ids, expand: expand)
        requestBuilder.execute { (response: Response<VoicemailMessageEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     List voicemail messages
     - GET /api/v2/voicemail/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 2,
  "pageNumber" : 5,
  "entities" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 1,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter ids: (query) An optional comma separated list of VoicemailMessage ids (optional)
     - parameter expand: (query) If the caller is a known user, which fields, if any, to expand (optional)

     - returns: RequestBuilder<VoicemailMessageEntityListing> 
     */
    open class func getVoicemailMessagesWithRequestBuilder(ids: String? = nil, expand: [String]? = nil) -> RequestBuilder<VoicemailMessageEntityListing> {        
        let path = "/api/v2/voicemail/messages"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "ids": ids, 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<VoicemailMessageEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get a policy
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailPolicy(completion: @escaping ((_ data: VoicemailOrganizationPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailPolicyWithRequestBuilder()
        requestBuilder.execute { (response: Response<VoicemailOrganizationPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a policy
     - GET /api/v2/voicemail/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "voicemailExtension" : "voicemailExtension",
  "alertTimeoutSeconds" : 0,
  "pinRequired" : true,
  "interactiveResponseRequired" : true,
  "disableEmailPii" : true,
  "maximumRecordingTimeSeconds" : 6,
  "sendEmailNotifications" : true,
  "includeEmailTranscriptions" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true,
  "pinConfiguration" : "{}"
}, statusCode=200}]

     - returns: RequestBuilder<VoicemailOrganizationPolicy> 
     */
    open class func getVoicemailPolicyWithRequestBuilder() -> RequestBuilder<VoicemailOrganizationPolicy> {        
        let path = "/api/v2/voicemail/policy"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailOrganizationPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     List voicemail messages
     
     - parameter queueId: (path) Queue ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailQueueMessages(queueId: String, pageSize: Int? = nil, pageNumber: Int? = nil, completion: @escaping ((_ data: VoicemailMessageEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailQueueMessagesWithRequestBuilder(queueId: queueId, pageSize: pageSize, pageNumber: pageNumber)
        requestBuilder.execute { (response: Response<VoicemailMessageEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     List voicemail messages
     - GET /api/v2/voicemail/queues/{queueId}/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 2,
  "pageNumber" : 5,
  "entities" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 1,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter queueId: (path) Queue ID 
     - parameter pageSize: (query) Page size (optional)
     - parameter pageNumber: (query) Page number (optional)

     - returns: RequestBuilder<VoicemailMessageEntityListing> 
     */
    open class func getVoicemailQueueMessagesWithRequestBuilder(queueId: String, pageSize: Int? = nil, pageNumber: Int? = nil) -> RequestBuilder<VoicemailMessageEntityListing> {        
        var path = "/api/v2/voicemail/queues/{queueId}/messages"
        let queueIdPreEscape = "\(queueId)"
        let queueIdPostEscape = queueIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{queueId}", with: queueIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<VoicemailMessageEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Search voicemails using the q64 value returned from a previous search
     
     - parameter q64: (query) q64 
     - parameter expand: (query) expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailSearch(q64: String, expand: [String]? = nil, completion: @escaping ((_ data: VoicemailsSearchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailSearchWithRequestBuilder(q64: q64, expand: expand)
        requestBuilder.execute { (response: Response<VoicemailsSearchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Search voicemails using the q64 value returned from a previous search
     - GET /api/v2/voicemail/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "pageCount" : 6,
  "types" : [ "types", "types" ],
  "pageNumber" : 5,
  "previousPage" : "previousPage",
  "nextPage" : "nextPage",
  "pageSize" : 1,
  "currentPage" : "currentPage",
  "results" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter q64: (query) q64 
     - parameter expand: (query) expand (optional)

     - returns: RequestBuilder<VoicemailsSearchResponse> 
     */
    open class func getVoicemailSearchWithRequestBuilder(q64: String, expand: [String]? = nil) -> RequestBuilder<VoicemailsSearchResponse> {        
        let path = "/api/v2/voicemail/search"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "q64": q64, 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<VoicemailsSearchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a user's voicemail policy
     
     - parameter userId: (path) User ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVoicemailUserpolicy(userId: String, completion: @escaping ((_ data: VoicemailUserPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = getVoicemailUserpolicyWithRequestBuilder(userId: userId)
        requestBuilder.execute { (response: Response<VoicemailUserPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a user's voicemail policy
     - GET /api/v2/voicemail/userpolicies/{userId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "alertTimeoutSeconds" : 0,
  "pin" : "pin",
  "sendEmailNotifications" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true
}, statusCode=200}]
     
     - parameter userId: (path) User ID 

     - returns: RequestBuilder<VoicemailUserPolicy> 
     */
    open class func getVoicemailUserpolicyWithRequestBuilder(userId: String) -> RequestBuilder<VoicemailUserPolicy> {        
        var path = "/api/v2/voicemail/userpolicies/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailUserPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Update a group's voicemail policy
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The group&#39;s voicemail policy 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchVoicemailGroupPolicy(groupId: String, body: VoicemailGroupPolicy, completion: @escaping ((_ data: VoicemailGroupPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = patchVoicemailGroupPolicyWithRequestBuilder(groupId: groupId, body: body)
        requestBuilder.execute { (response: Response<VoicemailGroupPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a group's voicemail policy
     - PATCH /api/v2/voicemail/groups/{groupId}/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "disableEmailPii" : true,
  "sendEmailNotifications" : true,
  "includeEmailTranscriptions" : true,
  "stopRingingAfterRotations" : 6,
  "overflowGroupId" : "overflowGroupId",
  "interactiveResponsePromptId" : "interactiveResponsePromptId",
  "enabled" : true,
  "rotateCallsSecs" : 0,
  "languagePreference" : "languagePreference",
  "interactiveResponseRequired" : true,
  "name" : "name",
  "groupAlertType" : "RANDOM",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter groupId: (path) Group ID 
     - parameter body: (body) The group&#39;s voicemail policy 

     - returns: RequestBuilder<VoicemailGroupPolicy> 
     */
    open class func patchVoicemailGroupPolicyWithRequestBuilder(groupId: String, body: VoicemailGroupPolicy) -> RequestBuilder<VoicemailGroupPolicy> {        
        var path = "/api/v2/voicemail/groups/{groupId}/policy"
        let groupIdPreEscape = "\(groupId)"
        let groupIdPostEscape = groupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{groupId}", with: groupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailGroupPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    /**
     Update the current user's voicemail policy
     
     - parameter body: (body) The user&#39;s voicemail policy 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchVoicemailMePolicy(body: VoicemailUserPolicy, completion: @escaping ((_ data: VoicemailUserPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = patchVoicemailMePolicyWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<VoicemailUserPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update the current user's voicemail policy
     - PATCH /api/v2/voicemail/me/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "alertTimeoutSeconds" : 0,
  "pin" : "pin",
  "sendEmailNotifications" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true
}, statusCode=200}]
     
     - parameter body: (body) The user&#39;s voicemail policy 

     - returns: RequestBuilder<VoicemailUserPolicy> 
     */
    open class func patchVoicemailMePolicyWithRequestBuilder(body: VoicemailUserPolicy) -> RequestBuilder<VoicemailUserPolicy> {        
        let path = "/api/v2/voicemail/me/policy"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailUserPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update a voicemail message
     
     - parameter messageId: (path) Message ID 
     - parameter body: (body) VoicemailMessage 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchVoicemailMessage(messageId: String, body: VoicemailMessage, completion: @escaping ((_ data: VoicemailMessage?,_ error: Error?) -> Void)) {
        let requestBuilder = patchVoicemailMessageWithRequestBuilder(messageId: messageId, body: body)
        requestBuilder.execute { (response: Response<VoicemailMessage>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a voicemail message
     - PATCH /api/v2/voicemail/messages/{messageId}
     - A user voicemail can only be modified by its associated user. A group voicemail can only be modified by a user that is a member of the group. A queue voicemail can only be modified by a participant of the conversation the voicemail is associated with.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "callerAddress" : "callerAddress",
  "note" : "note",
  "audioRecordingSizeBytes" : 6,
  "copiedTo" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  } ],
  "read" : true,
  "selfUri" : "https://openapi-generator.tech",
  "callerUser" : "{}",
  "deleteRetentionPolicy" : "{}",
  "callerName" : "callerName",
  "copiedFrom" : "{}",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "deleted" : true,
  "deletedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "audioRecordingDurationSeconds" : 0,
  "user" : "{}",
  "conversation" : "{}",
  "queue" : "{}",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter messageId: (path) Message ID 
     - parameter body: (body) VoicemailMessage 

     - returns: RequestBuilder<VoicemailMessage> 
     */
    open class func patchVoicemailMessageWithRequestBuilder(messageId: String, body: VoicemailMessage) -> RequestBuilder<VoicemailMessage> {        
        var path = "/api/v2/voicemail/messages/{messageId}"
        let messageIdPreEscape = "\(messageId)"
        let messageIdPostEscape = messageIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{messageId}", with: messageIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMessage>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update a user's voicemail policy
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The user&#39;s voicemail policy 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchVoicemailUserpolicy(userId: String, body: VoicemailUserPolicy, completion: @escaping ((_ data: VoicemailUserPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = patchVoicemailUserpolicyWithRequestBuilder(userId: userId, body: body)
        requestBuilder.execute { (response: Response<VoicemailUserPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a user's voicemail policy
     - PATCH /api/v2/voicemail/userpolicies/{userId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "alertTimeoutSeconds" : 0,
  "pin" : "pin",
  "sendEmailNotifications" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true
}, statusCode=200}]
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The user&#39;s voicemail policy 

     - returns: RequestBuilder<VoicemailUserPolicy> 
     */
    open class func patchVoicemailUserpolicyWithRequestBuilder(userId: String, body: VoicemailUserPolicy) -> RequestBuilder<VoicemailUserPolicy> {        
        var path = "/api/v2/voicemail/userpolicies/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailUserPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    /**
     Copy a voicemail message to a user or group
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postVoicemailMessages(body: CopyVoicemailMessage? = nil, completion: @escaping ((_ data: VoicemailMessage?,_ error: Error?) -> Void)) {
        let requestBuilder = postVoicemailMessagesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<VoicemailMessage>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Copy a voicemail message to a user or group
     - POST /api/v2/voicemail/messages
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "callerAddress" : "callerAddress",
  "note" : "note",
  "audioRecordingSizeBytes" : 6,
  "copiedTo" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  } ],
  "read" : true,
  "selfUri" : "https://openapi-generator.tech",
  "callerUser" : "{}",
  "deleteRetentionPolicy" : "{}",
  "callerName" : "callerName",
  "copiedFrom" : "{}",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "deleted" : true,
  "deletedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "audioRecordingDurationSeconds" : 0,
  "user" : "{}",
  "conversation" : "{}",
  "queue" : "{}",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<VoicemailMessage> 
     */
    open class func postVoicemailMessagesWithRequestBuilder(body: CopyVoicemailMessage? = nil) -> RequestBuilder<VoicemailMessage> {        
        let path = "/api/v2/voicemail/messages"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMessage>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Search voicemails
     
     - parameter body: (body) Search request options 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postVoicemailSearch(body: VoicemailSearchRequest, completion: @escaping ((_ data: VoicemailsSearchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postVoicemailSearchWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<VoicemailsSearchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Search voicemails
     - POST /api/v2/voicemail/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "pageCount" : 6,
  "types" : [ "types", "types" ],
  "pageNumber" : 5,
  "previousPage" : "previousPage",
  "nextPage" : "nextPage",
  "pageSize" : 1,
  "currentPage" : "currentPage",
  "results" : [ {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  }, {
    "callerAddress" : "callerAddress",
    "note" : "note",
    "audioRecordingSizeBytes" : 6,
    "copiedTo" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "user" : "{}",
      "group" : "{}"
    } ],
    "read" : true,
    "selfUri" : "https://openapi-generator.tech",
    "callerUser" : "{}",
    "deleteRetentionPolicy" : "{}",
    "callerName" : "callerName",
    "copiedFrom" : "{}",
    "createdDate" : "2000-01-23T04:56:07.000+00:00",
    "deleted" : true,
    "deletedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "audioRecordingDurationSeconds" : 0,
    "user" : "{}",
    "conversation" : "{}",
    "queue" : "{}",
    "group" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) Search request options 

     - returns: RequestBuilder<VoicemailsSearchResponse> 
     */
    open class func postVoicemailSearchWithRequestBuilder(body: VoicemailSearchRequest) -> RequestBuilder<VoicemailsSearchResponse> {        
        let path = "/api/v2/voicemail/search"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailsSearchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update a voicemail message
     
     - parameter messageId: (path) Message ID 
     - parameter body: (body) VoicemailMessage 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putVoicemailMessage(messageId: String, body: VoicemailMessage, completion: @escaping ((_ data: VoicemailMessage?,_ error: Error?) -> Void)) {
        let requestBuilder = putVoicemailMessageWithRequestBuilder(messageId: messageId, body: body)
        requestBuilder.execute { (response: Response<VoicemailMessage>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a voicemail message
     - PUT /api/v2/voicemail/messages/{messageId}
     - A user voicemail can only be modified by its associated user. A group voicemail can only be modified by a user that is a member of the group. A queue voicemail can only be modified by a participant of the conversation the voicemail is associated with.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "callerAddress" : "callerAddress",
  "note" : "note",
  "audioRecordingSizeBytes" : 6,
  "copiedTo" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "group" : "{}"
  } ],
  "read" : true,
  "selfUri" : "https://openapi-generator.tech",
  "callerUser" : "{}",
  "deleteRetentionPolicy" : "{}",
  "callerName" : "callerName",
  "copiedFrom" : "{}",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "deleted" : true,
  "deletedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "audioRecordingDurationSeconds" : 0,
  "user" : "{}",
  "conversation" : "{}",
  "queue" : "{}",
  "group" : "{}"
}, statusCode=200}]
     
     - parameter messageId: (path) Message ID 
     - parameter body: (body) VoicemailMessage 

     - returns: RequestBuilder<VoicemailMessage> 
     */
    open class func putVoicemailMessageWithRequestBuilder(messageId: String, body: VoicemailMessage) -> RequestBuilder<VoicemailMessage> {        
        var path = "/api/v2/voicemail/messages/{messageId}"
        let messageIdPreEscape = "\(messageId)"
        let messageIdPostEscape = messageIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{messageId}", with: messageIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailMessage>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    /**
     Update a policy
     
     - parameter body: (body) Policy 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putVoicemailPolicy(body: VoicemailOrganizationPolicy, completion: @escaping ((_ data: VoicemailOrganizationPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = putVoicemailPolicyWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<VoicemailOrganizationPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a policy
     - PUT /api/v2/voicemail/policy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "voicemailExtension" : "voicemailExtension",
  "alertTimeoutSeconds" : 0,
  "pinRequired" : true,
  "interactiveResponseRequired" : true,
  "disableEmailPii" : true,
  "maximumRecordingTimeSeconds" : 6,
  "sendEmailNotifications" : true,
  "includeEmailTranscriptions" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true,
  "pinConfiguration" : "{}"
}, statusCode=200}]
     
     - parameter body: (body) Policy 

     - returns: RequestBuilder<VoicemailOrganizationPolicy> 
     */
    open class func putVoicemailPolicyWithRequestBuilder(body: VoicemailOrganizationPolicy) -> RequestBuilder<VoicemailOrganizationPolicy> {        
        let path = "/api/v2/voicemail/policy"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailOrganizationPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    /**
     Update a user's voicemail policy
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The user&#39;s voicemail policy 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putVoicemailUserpolicy(userId: String, body: VoicemailUserPolicy, completion: @escaping ((_ data: VoicemailUserPolicy?,_ error: Error?) -> Void)) {
        let requestBuilder = putVoicemailUserpolicyWithRequestBuilder(userId: userId, body: body)
        requestBuilder.execute { (response: Response<VoicemailUserPolicy>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a user's voicemail policy
     - PUT /api/v2/voicemail/userpolicies/{userId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "alertTimeoutSeconds" : 0,
  "pin" : "pin",
  "sendEmailNotifications" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "enabled" : true
}, statusCode=200}]
     
     - parameter userId: (path) User ID 
     - parameter body: (body) The user&#39;s voicemail policy 

     - returns: RequestBuilder<VoicemailUserPolicy> 
     */
    open class func putVoicemailUserpolicyWithRequestBuilder(userId: String, body: VoicemailUserPolicy) -> RequestBuilder<VoicemailUserPolicy> {        
        var path = "/api/v2/voicemail/userpolicies/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VoicemailUserPolicy>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
