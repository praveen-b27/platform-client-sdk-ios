//
// WidgetsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class WidgetsAPI {
    
    /**
     Delete a Widget deployment
     
     - parameter deploymentId: (path) Widget Config Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWidgetsDeployment(deploymentId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWidgetsDeploymentWithRequestBuilder(deploymentId: deploymentId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a Widget deployment
     - DELETE /api/v2/widgets/deployments/{deploymentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter deploymentId: (path) Widget Config Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWidgetsDeploymentWithRequestBuilder(deploymentId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/widgets/deployments/{deploymentId}"
        let deploymentIdPreEscape = "\(deploymentId)"
        let deploymentIdPostEscape = deploymentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{deploymentId}", with: deploymentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Get a Widget deployment
     
     - parameter deploymentId: (path) Widget Config Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWidgetsDeployment(deploymentId: String, completion: @escaping ((_ data: WidgetDeployment?,_ error: Error?) -> Void)) {
        let requestBuilder = getWidgetsDeploymentWithRequestBuilder(deploymentId: deploymentId)
        requestBuilder.execute { (response: Response<WidgetDeployment>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a Widget deployment
     - GET /api/v2/widgets/deployments/{deploymentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "authenticationRequired" : true,
  "clientType" : "v1",
  "allowedDomains" : [ "allowedDomains", "allowedDomains" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "disabled" : true,
  "id" : "id",
  "clientConfig" : "{}",
  "flow" : "{}"
}, statusCode=200}]
     
     - parameter deploymentId: (path) Widget Config Id 

     - returns: RequestBuilder<WidgetDeployment> 
     */
    open class func getWidgetsDeploymentWithRequestBuilder(deploymentId: String) -> RequestBuilder<WidgetDeployment> {        
        var path = "/api/v2/widgets/deployments/{deploymentId}"
        let deploymentIdPreEscape = "\(deploymentId)"
        let deploymentIdPostEscape = deploymentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{deploymentId}", with: deploymentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WidgetDeployment>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     List Widget deployments
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWidgetsDeployments(completion: @escaping ((_ data: WidgetDeploymentEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWidgetsDeploymentsWithRequestBuilder()
        requestBuilder.execute { (response: Response<WidgetDeploymentEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     List Widget deployments
     - GET /api/v2/widgets/deployments
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "entities" : [ {
    "authenticationRequired" : true,
    "clientType" : "v1",
    "allowedDomains" : [ "allowedDomains", "allowedDomains" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "disabled" : true,
    "id" : "id",
    "clientConfig" : "{}",
    "flow" : "{}"
  }, {
    "authenticationRequired" : true,
    "clientType" : "v1",
    "allowedDomains" : [ "allowedDomains", "allowedDomains" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "description" : "description",
    "disabled" : true,
    "id" : "id",
    "clientConfig" : "{}",
    "flow" : "{}"
  } ],
  "selfUri" : "https://openapi-generator.tech"
}, statusCode=200}]

     - returns: RequestBuilder<WidgetDeploymentEntityListing> 
     */
    open class func getWidgetsDeploymentsWithRequestBuilder() -> RequestBuilder<WidgetDeploymentEntityListing> {        
        let path = "/api/v2/widgets/deployments"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WidgetDeploymentEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Create Widget deployment
     
     - parameter body: (body) Deployment 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWidgetsDeployments(body: WidgetDeployment, completion: @escaping ((_ data: WidgetDeployment?,_ error: Error?) -> Void)) {
        let requestBuilder = postWidgetsDeploymentsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<WidgetDeployment>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create Widget deployment
     - POST /api/v2/widgets/deployments
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "authenticationRequired" : true,
  "clientType" : "v1",
  "allowedDomains" : [ "allowedDomains", "allowedDomains" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "disabled" : true,
  "id" : "id",
  "clientConfig" : "{}",
  "flow" : "{}"
}, statusCode=200}]
     
     - parameter body: (body) Deployment 

     - returns: RequestBuilder<WidgetDeployment> 
     */
    open class func postWidgetsDeploymentsWithRequestBuilder(body: WidgetDeployment) -> RequestBuilder<WidgetDeployment> {        
        let path = "/api/v2/widgets/deployments"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WidgetDeployment>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update a Widget deployment
     
     - parameter deploymentId: (path) Widget Config Id 
     - parameter body: (body) Deployment 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putWidgetsDeployment(deploymentId: String, body: WidgetDeployment, completion: @escaping ((_ data: WidgetDeployment?,_ error: Error?) -> Void)) {
        let requestBuilder = putWidgetsDeploymentWithRequestBuilder(deploymentId: deploymentId, body: body)
        requestBuilder.execute { (response: Response<WidgetDeployment>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a Widget deployment
     - PUT /api/v2/widgets/deployments/{deploymentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "authenticationRequired" : true,
  "clientType" : "v1",
  "allowedDomains" : [ "allowedDomains", "allowedDomains" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "description" : "description",
  "disabled" : true,
  "id" : "id",
  "clientConfig" : "{}",
  "flow" : "{}"
}, statusCode=200}]
     
     - parameter deploymentId: (path) Widget Config Id 
     - parameter body: (body) Deployment 

     - returns: RequestBuilder<WidgetDeployment> 
     */
    open class func putWidgetsDeploymentWithRequestBuilder(deploymentId: String, body: WidgetDeployment) -> RequestBuilder<WidgetDeployment> {        
        var path = "/api/v2/widgets/deployments/{deploymentId}"
        let deploymentIdPreEscape = "\(deploymentId)"
        let deploymentIdPostEscape = deploymentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{deploymentId}", with: deploymentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WidgetDeployment>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
