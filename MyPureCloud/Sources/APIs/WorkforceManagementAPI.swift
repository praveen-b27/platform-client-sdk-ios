//
// WorkforceManagementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class WorkforceManagementAPI {
    
    /**
     Delete business unit
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunit(businessUnitId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: businessUnitId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete business unit
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}
     - A business unit cannot be deleted if it contains one or more management units
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Deletes an activity code
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitActivitycode(businessUnitId: String, activityCodeId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: businessUnitId, activityCodeId: activityCodeId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes an activity code
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: String, activityCodeId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let activityCodeIdPreEscape = "\(activityCodeId)"
        let activityCodeIdPostEscape = activityCodeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{activityCodeId}", with: activityCodeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Deletes the planning group
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId: String, planningGroupId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: businessUnitId, planningGroupId: planningGroupId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes the planning group
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: String, planningGroupId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let planningGroupIdPreEscape = "\(planningGroupId)"
        let planningGroupIdPostEscape = planningGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{planningGroupId}", with: planningGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Cancel a scheduling run
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId: String, runId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: businessUnitId, runId: runId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Cancel a scheduling run
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: String, runId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let runIdPreEscape = "\(runId)"
        let runIdPostEscape = runIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{runId}", with: runIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a service goal template
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of the service goal template to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId: String, serviceGoalTemplateId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: businessUnitId, serviceGoalTemplateId: serviceGoalTemplateId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a service goal template
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of the service goal template to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: String, serviceGoalTemplateId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let serviceGoalTemplateIdPreEscape = "\(serviceGoalTemplateId)"
        let serviceGoalTemplateIdPostEscape = serviceGoalTemplateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceGoalTemplateId}", with: serviceGoalTemplateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    
    /**
     Delete a schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId: String, weekId: Date, scheduleId: String, completion: @escaping ((_ data: BuAsyncScheduleResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitWeekScheduleWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId)
        requestBuilder.execute { (response: Response<BuAsyncScheduleResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a schedule
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 

     - returns: RequestBuilder<BuAsyncScheduleResponse> 
     */
    open class func deleteWorkforcemanagementBusinessunitWeekScheduleWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String) -> RequestBuilder<BuAsyncScheduleResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAsyncScheduleResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    
    /**
     Delete a short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId: String, weekDateId: Date, forecastId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementBusinessunitWeekShorttermforecastWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a short term forecast
     - DELETE /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}
     - Must not be tied to any schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementBusinessunitWeekShorttermforecastWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    /**
     Disable generated calendar link for the current user
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementCalendarUrlIcs(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementCalendarUrlIcsWithRequestBuilder()
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Disable generated calendar link for the current user
     - DELETE /api/v2/workforcemanagement/calendar/url/ics
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementCalendarUrlIcsWithRequestBuilder() -> RequestBuilder<Void> {        
        let path = "/api/v2/workforcemanagement/calendar/url/ics"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Delete management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementManagementunit(managementUnitId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete management unit
     - DELETE /api/v2/workforcemanagement/managementunits/{managementUnitId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Deletes a time off limit object
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit object to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId: String, timeOffLimitId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: managementUnitId, timeOffLimitId: timeOffLimitId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes a time off limit object
     - DELETE /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit object to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: String, timeOffLimitId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffLimitIdPreEscape = "\(timeOffLimitId)"
        let timeOffLimitIdPostEscape = timeOffLimitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffLimitId}", with: timeOffLimitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Deletes a time off plan
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId: String, timeOffPlanId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: managementUnitId, timeOffPlanId: timeOffPlanId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Deletes a time off plan
     - DELETE /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: String, timeOffPlanId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffPlanIdPreEscape = "\(timeOffPlanId)"
        let timeOffPlanIdPostEscape = timeOffPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffPlanId}", with: timeOffPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a work plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementManagementunitWorkplan(managementUnitId: String, workPlanId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: managementUnitId, workPlanId: workPlanId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a work plan
     - DELETE /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to delete 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: String, workPlanId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanIdPreEscape = "\(workPlanId)"
        let workPlanIdPostEscape = workPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanId}", with: workPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    
    /**
     Delete a work plan rotation
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to be deleted 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId: String, workPlanRotationId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: managementUnitId, workPlanRotationId: workPlanRotationId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a work plan rotation
     - DELETE /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to be deleted 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: String, workPlanRotationId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanRotationIdPreEscape = "\(workPlanRotationId)"
        let workPlanRotationIdPostEscape = workPlanRotationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanRotationId}", with: workPlanRotationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: url!, body: body)
    }

    
    /**
     Get a list of UserScheduleAdherence records for the requested users
     
     - parameter userId: (query) User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdherence(userId: [String], completion: @escaping ((_ data: [UserScheduleAdherence]?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdherenceWithRequestBuilder(userId: userId)
        requestBuilder.execute { (response: Response<[UserScheduleAdherence]>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of UserScheduleAdherence records for the requested users
     - GET /api/v2/workforcemanagement/adherence
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "adherenceExplanation" : "{}",
  "removedFromManagementUnit" : true,
  "organizationSecondaryPresenceId" : "organizationSecondaryPresenceId",
  "businessUnit" : "{}",
  "impact" : "Positive",
  "selfUri" : "https://openapi-generator.tech",
  "adherenceState" : "InAdherence",
  "team" : "{}",
  "routingStatus" : "OFF_QUEUE",
  "presenceUpdateTime" : "2000-01-23T04:56:07.000+00:00",
  "isOutOfOffice" : true,
  "activeQueuesModifiedTime" : "2000-01-23T04:56:07.000+00:00",
  "managementUnit" : "{}",
  "timeOfAdherenceChange" : "2000-01-23T04:56:07.000+00:00",
  "systemPresence" : "Available",
  "name" : "name",
  "actualActivityCategory" : "OnQueueWork",
  "scheduledActivityCategory" : "OnQueueWork",
  "scheduledActivityCode" : "{}",
  "activeQueues" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "id" : "id",
  "user" : "{}"
}, statusCode=200}]
     
     - parameter userId: (query) User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request 

     - returns: RequestBuilder<[UserScheduleAdherence]> 
     */
    open class func getWorkforcemanagementAdherenceWithRequestBuilder(userId: [String]) -> RequestBuilder<[UserScheduleAdherence]> {        
        let path = "/api/v2/workforcemanagement/adherence"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "userId": userId
        ])

        let requestBuilder: RequestBuilder<[UserScheduleAdherence]>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get an adherence explanation for the current user
     
     - parameter explanationId: (path) The ID of the explanation to update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdherenceExplanation(explanationId: String, completion: @escaping ((_ data: AdherenceExplanationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdherenceExplanationWithRequestBuilder(explanationId: explanationId)
        requestBuilder.execute { (response: Response<AdherenceExplanationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an adherence explanation for the current user
     - GET /api/v2/workforcemanagement/adherence/explanations/{explanationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : "{}",
  "businessUnit" : "{}",
  "notes" : "notes",
  "managementUnit" : "{}",
  "lengthMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "Late",
  "reviewedBy" : "{}",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "startDate" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter explanationId: (path) The ID of the explanation to update 

     - returns: RequestBuilder<AdherenceExplanationResponse> 
     */
    open class func getWorkforcemanagementAdherenceExplanationWithRequestBuilder(explanationId: String) -> RequestBuilder<AdherenceExplanationResponse> {        
        var path = "/api/v2/workforcemanagement/adherence/explanations/{explanationId}"
        let explanationIdPreEscape = "\(explanationId)"
        let explanationIdPostEscape = explanationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{explanationId}", with: explanationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Query the status of an adherence explanation operation. Only the user who started the operation can query the status
     
     - parameter jobId: (path) The ID of the job 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdherenceExplanationsJob(jobId: String, completion: @escaping ((_ data: AdherenceExplanationJob?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdherenceExplanationsJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<AdherenceExplanationJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query the status of an adherence explanation operation. Only the user who started the operation can query the status
     - GET /api/v2/workforcemanagement/adherence/explanations/jobs/{jobId}
     - Job details are only retained if the initial request returned a 202 ACCEPTED response
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "adherenceExplanation" : "{}",
  "agentQueryResponseTemplate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "downloadUrl" : "downloadUrl",
  "id" : "id",
  "type" : "AddExplanation",
  "error" : "{}",
  "buQueryResponseTemplate" : "{}",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter jobId: (path) The ID of the job 

     - returns: RequestBuilder<AdherenceExplanationJob> 
     */
    open class func getWorkforcemanagementAdherenceExplanationsJobWithRequestBuilder(jobId: String) -> RequestBuilder<AdherenceExplanationJob> {        
        var path = "/api/v2/workforcemanagement/adherence/explanations/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Request to fetch the status of the historical adherence bulk job. Only the user who started the operation can query the status
     
     - parameter jobId: (path) ID of the job to get 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdherenceHistoricalBulkJob(jobId: String, completion: @escaping ((_ data: WfmHistoricalAdherenceBulkResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdherenceHistoricalBulkJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceBulkResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request to fetch the status of the historical adherence bulk job. Only the user who started the operation can query the status
     - GET /api/v2/workforcemanagement/adherence/historical/bulk/jobs/{jobId}
     - Job details are only retained if the initial request returned a 202 ACCEPTED response
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "job" : "{}"
}, statusCode=200}]
     
     - parameter jobId: (path) ID of the job to get 

     - returns: RequestBuilder<WfmHistoricalAdherenceBulkResponse> 
     */
    open class func getWorkforcemanagementAdherenceHistoricalBulkJobWithRequestBuilder(jobId: String) -> RequestBuilder<WfmHistoricalAdherenceBulkResponse> {        
        var path = "/api/v2/workforcemanagement/adherence/historical/bulk/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceBulkResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Query the status of a historical adherence request operation. Only the user who started the operation can query the status
     
     - parameter jobId: (path) jobId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdherenceHistoricalJob(jobId: String, completion: @escaping ((_ data: WfmHistoricalAdherenceResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdherenceHistoricalJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query the status of a historical adherence request operation. Only the user who started the operation can query the status
     - GET /api/v2/workforcemanagement/adherence/historical/jobs/{jobId}
     - Job details are only retained if the initial request returned a 202 ACCEPTED response
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "downloadUrl" : "downloadUrl",
  "queryState" : "Processing",
  "id" : "id"
}, statusCode=200}]
     
     - parameter jobId: (path) jobId 

     - returns: RequestBuilder<WfmHistoricalAdherenceResponse> 
     */
    open class func getWorkforcemanagementAdherenceHistoricalJobWithRequestBuilder(jobId: String) -> RequestBuilder<WfmHistoricalAdherenceResponse> {        
        var path = "/api/v2/workforcemanagement/adherence/historical/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get status of the modeling job
     
     - parameter jobId: (path) The id of the modeling job 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAdhocmodelingjob(jobId: String, completion: @escaping ((_ data: ModelingStatusResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAdhocmodelingjobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<ModelingStatusResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get status of the modeling job
     - GET /api/v2/workforcemanagement/adhocmodelingjobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "id" : "id",
  "modelingResultUri" : "modelingResultUri",
  "status" : "Pending",
  "errorDetails" : [ {
    "description" : "description",
    "internalErrorCode" : "ModelInputMissing"
  }, {
    "description" : "description",
    "internalErrorCode" : "ModelInputMissing"
  } ]
}, statusCode=200}]
     
     - parameter jobId: (path) The id of the modeling job 

     - returns: RequestBuilder<ModelingStatusResponse> 
     */
    open class func getWorkforcemanagementAdhocmodelingjobWithRequestBuilder(jobId: String) -> RequestBuilder<ModelingStatusResponse> {        
        var path = "/api/v2/workforcemanagement/adhocmodelingjobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ModelingStatusResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get an adherence explanation
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter explanationId: (path) The ID of the explanation to update 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAgentAdherenceExplanation(agentId: String, explanationId: String, completion: @escaping ((_ data: AdherenceExplanationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAgentAdherenceExplanationWithRequestBuilder(agentId: agentId, explanationId: explanationId)
        requestBuilder.execute { (response: Response<AdherenceExplanationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an adherence explanation
     - GET /api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : "{}",
  "businessUnit" : "{}",
  "notes" : "notes",
  "managementUnit" : "{}",
  "lengthMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "type" : "Late",
  "reviewedBy" : "{}",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "startDate" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Pending"
}, statusCode=200}]
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter explanationId: (path) The ID of the explanation to update 

     - returns: RequestBuilder<AdherenceExplanationResponse> 
     */
    open class func getWorkforcemanagementAgentAdherenceExplanationWithRequestBuilder(agentId: String, explanationId: String) -> RequestBuilder<AdherenceExplanationResponse> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let explanationIdPreEscape = "\(explanationId)"
        let explanationIdPostEscape = explanationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{explanationId}", with: explanationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the management unit to which the agent belongs
     
     - parameter agentId: (path) The ID of the agent to look up 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAgentManagementunit(agentId: String, completion: @escaping ((_ data: AgentManagementUnitReference?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAgentManagementunitWithRequestBuilder(agentId: agentId)
        requestBuilder.execute { (response: Response<AgentManagementUnitReference>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the management unit to which the agent belongs
     - GET /api/v2/workforcemanagement/agents/{agentId}/managementunit
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "businessUnit" : "{}",
  "managementUnit" : "{}",
  "user" : "{}"
}, statusCode=200}]
     
     - parameter agentId: (path) The ID of the agent to look up 

     - returns: RequestBuilder<AgentManagementUnitReference> 
     */
    open class func getWorkforcemanagementAgentManagementunitWithRequestBuilder(agentId: String) -> RequestBuilder<AgentManagementUnitReference> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/managementunit"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AgentManagementUnitReference>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get the management unit to which the currently logged in agent belongs
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementAgentsMeManagementunit(completion: @escaping ((_ data: AgentManagementUnitReference?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementAgentsMeManagementunitWithRequestBuilder()
        requestBuilder.execute { (response: Response<AgentManagementUnitReference>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the management unit to which the currently logged in agent belongs
     - GET /api/v2/workforcemanagement/agents/me/managementunit
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "businessUnit" : "{}",
  "managementUnit" : "{}",
  "user" : "{}"
}, statusCode=200}]

     - returns: RequestBuilder<AgentManagementUnitReference> 
     */
    open class func getWorkforcemanagementAgentsMeManagementunitWithRequestBuilder() -> RequestBuilder<AgentManagementUnitReference> {        
        let path = "/api/v2/workforcemanagement/agents/me/managementunit"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AgentManagementUnitReference>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get business unit
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter expand: (query) Include to access additional data on the business unit (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunit(businessUnitId: String, expand: [String]? = nil, completion: @escaping ((_ data: BusinessUnitResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: businessUnitId, expand: expand)
        requestBuilder.execute { (response: Response<BusinessUnitResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get business unit
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}
     - Expanding \"settings\" will retrieve all settings.  All other expands will retrieve only the requested settings field(s).
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "settings" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter expand: (query) Include to access additional data on the business unit (optional)

     - returns: RequestBuilder<BusinessUnitResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: String, expand: [String]? = nil) -> RequestBuilder<BusinessUnitResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<BusinessUnitResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get an activity code
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitActivitycode(businessUnitId: String, activityCodeId: String, completion: @escaping ((_ data: BusinessUnitActivityCode?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: businessUnitId, activityCodeId: activityCodeId)
        requestBuilder.execute { (response: Response<BusinessUnitActivityCode>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get an activity code
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "defaultCode" : true,
  "metadata" : "{}",
  "plannedShrinkage" : true,
  "selfUri" : "https://openapi-generator.tech",
  "active" : true,
  "countsAsPaidTime" : true,
  "agentTimeOffSelectable" : true,
  "interruptible" : true,
  "lengthInMinutes" : 0,
  "secondaryPresences" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "countsAsWorkTime" : true,
  "name" : "name",
  "id" : "id",
  "category" : "OnQueueWork",
  "countsTowardShrinkage" : true
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to fetch 

     - returns: RequestBuilder<BusinessUnitActivityCode> 
     */
    open class func getWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: String, activityCodeId: String) -> RequestBuilder<BusinessUnitActivityCode> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let activityCodeIdPreEscape = "\(activityCodeId)"
        let activityCodeIdPostEscape = activityCodeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{activityCodeId}", with: activityCodeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BusinessUnitActivityCode>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get activity codes
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitActivitycodes(businessUnitId: String, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: BusinessUnitActivityCodeListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitActivitycodesWithRequestBuilder(businessUnitId: businessUnitId, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<BusinessUnitActivityCodeListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get activity codes
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "defaultCode" : true,
    "metadata" : "{}",
    "plannedShrinkage" : true,
    "selfUri" : "https://openapi-generator.tech",
    "active" : true,
    "countsAsPaidTime" : true,
    "agentTimeOffSelectable" : true,
    "interruptible" : true,
    "lengthInMinutes" : 0,
    "secondaryPresences" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "countsAsWorkTime" : true,
    "name" : "name",
    "id" : "id",
    "category" : "OnQueueWork",
    "countsTowardShrinkage" : true
  }, {
    "defaultCode" : true,
    "metadata" : "{}",
    "plannedShrinkage" : true,
    "selfUri" : "https://openapi-generator.tech",
    "active" : true,
    "countsAsPaidTime" : true,
    "agentTimeOffSelectable" : true,
    "interruptible" : true,
    "lengthInMinutes" : 0,
    "secondaryPresences" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "countsAsWorkTime" : true,
    "name" : "name",
    "id" : "id",
    "category" : "OnQueueWork",
    "countsTowardShrinkage" : true
  } ],
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<BusinessUnitActivityCodeListing> 
     */
    open class func getWorkforcemanagementBusinessunitActivitycodesWithRequestBuilder(businessUnitId: String, forceDownloadService: Bool? = nil) -> RequestBuilder<BusinessUnitActivityCodeListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BusinessUnitActivityCodeListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get intraday planning groups for the given date
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter date: (query) yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId: String, date: Date, completion: @escaping ((_ data: WfmIntradayPlanningGroupListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitIntradayPlanninggroupsWithRequestBuilder(businessUnitId: businessUnitId, date: date)
        requestBuilder.execute { (response: Response<WfmIntradayPlanningGroupListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get intraday planning groups for the given date
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday/planninggroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "noDataReason" : "NoPublishedSchedule",
  "entities" : [ {
    "serviceGoalTemplate" : "{}",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  }, {
    "serviceGoalTemplate" : "{}",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter date: (query) yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 

     - returns: RequestBuilder<WfmIntradayPlanningGroupListing> 
     */
    open class func getWorkforcemanagementBusinessunitIntradayPlanninggroupsWithRequestBuilder(businessUnitId: String, date: Date) -> RequestBuilder<WfmIntradayPlanningGroupListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday/planninggroups"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "date": date.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<WfmIntradayPlanningGroupListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    public enum Feature_getWorkforcemanagementBusinessunitManagementunits: String { 
        case agentSchedule = "AgentSchedule"
        case agentTimeOffRequest = "AgentTimeOffRequest"
        case alternativeShift = "AlternativeShift"
        case coaching = "Coaching"
        case learning = "Learning"
        case activityCodes = "ActivityCodes"
        case activityPlans = "ActivityPlans"
        case agents = "Agents"
        case buActivityCodes = "BuActivityCodes"
        case businessUnits = "BusinessUnits"
        case continuousForecast = "ContinuousForecast"
        case historicalAdherence = "HistoricalAdherence"
        case historicalShrinkage = "HistoricalShrinkage"
        case intradayMonitoring = "IntradayMonitoring"
        case buIntradayMonitoring = "BuIntradayMonitoring"
        case managementUnits = "ManagementUnits"
        case realTimeAdherence = "RealTimeAdherence"
        case schedules = "Schedules"
        case buSchedules = "BuSchedules"
        case serviceGoalTemplates = "ServiceGoalTemplates"
        case planningGroups = "PlanningGroups"
        case shiftTrading = "ShiftTrading"
        case shortTermForecasts = "ShortTermForecasts"
        case buShortTermForecasts = "BuShortTermForecasts"
        case staffingGroups = "StaffingGroups"
        case timeOffPlans = "TimeOffPlans"
        case timeOffRequests = "TimeOffRequests"
        case timeOffLimits = "TimeOffLimits"
        case workPlanBids = "WorkPlanBids"
        case workPlanRotations = "WorkPlanRotations"
        case workPlans = "WorkPlans"
    }

    
    
    /**
     Get all authorized management units in the business unit
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter feature: (query) If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of management units belonging to the specified division will be returned (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitManagementunits(businessUnitId: String, feature: Feature_getWorkforcemanagementBusinessunitManagementunits? = nil, divisionId: String? = nil, completion: @escaping ((_ data: ManagementUnitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitManagementunitsWithRequestBuilder(businessUnitId: businessUnitId, feature: feature, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ManagementUnitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get all authorized management units in the business unit
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/managementunits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 5,
  "pageNumber" : 1,
  "entities" : [ {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  }, {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 6,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter feature: (query) If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of management units belonging to the specified division will be returned (optional)

     - returns: RequestBuilder<ManagementUnitListing> 
     */
    open class func getWorkforcemanagementBusinessunitManagementunitsWithRequestBuilder(businessUnitId: String, feature: Feature_getWorkforcemanagementBusinessunitManagementunits? = nil, divisionId: String? = nil) -> RequestBuilder<ManagementUnitListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/managementunits"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "feature": feature?.rawValue, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ManagementUnitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a planning group
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitPlanninggroup(businessUnitId: String, planningGroupId: String, completion: @escaping ((_ data: PlanningGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: businessUnitId, planningGroupId: planningGroupId)
        requestBuilder.execute { (response: Response<PlanningGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a planning group
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "serviceGoalTemplate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "routePaths" : [ {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  }, {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to fetch 

     - returns: RequestBuilder<PlanningGroup> 
     */
    open class func getWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: String, planningGroupId: String) -> RequestBuilder<PlanningGroup> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let planningGroupIdPreEscape = "\(planningGroupId)"
        let planningGroupIdPostEscape = planningGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{planningGroupId}", with: planningGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PlanningGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets list of planning groups
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitPlanninggroups(businessUnitId: String, completion: @escaping ((_ data: PlanningGroupList?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitPlanninggroupsWithRequestBuilder(businessUnitId: businessUnitId)
        requestBuilder.execute { (response: Response<PlanningGroupList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets list of planning groups
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "entities" : [ {
    "metadata" : "{}",
    "serviceGoalTemplate" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  }, {
    "metadata" : "{}",
    "serviceGoalTemplate" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 

     - returns: RequestBuilder<PlanningGroupList> 
     */
    open class func getWorkforcemanagementBusinessunitPlanninggroupsWithRequestBuilder(businessUnitId: String) -> RequestBuilder<PlanningGroupList> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PlanningGroupList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a scheduling run
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRun(businessUnitId: String, runId: String, completion: @escaping ((_ data: BuScheduleRun?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: businessUnitId, runId: runId)
        requestBuilder.execute { (response: Response<BuScheduleRun>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a scheduling run
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "messageSeverityCounts" : [ {
    "severity" : "Ignore",
    "count" : 5
  }, {
    "severity" : "Ignore",
    "count" : 5
  } ],
  "messageCount" : 1,
  "targetWeek" : "2000-01-23",
  "selfUri" : "https://openapi-generator.tech",
  "schedulingStartTime" : "2000-01-23T04:56:07.000+00:00",
  "schedulerRunId" : "schedulerRunId",
  "percentComplete" : 6.027456183070403,
  "weekCount" : 0,
  "schedule" : "{}",
  "schedulingCanceledBy" : "{}",
  "schedulingCompletedTime" : "2000-01-23T04:56:07.000+00:00",
  "intradayRescheduling" : true,
  "scheduleDescription" : "scheduleDescription",
  "reschedulingOptions" : "{}",
  "id" : "id",
  "state" : "None",
  "reschedulingResultExpiration" : "2000-01-23T04:56:07.000+00:00",
  "schedulingStartedBy" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 

     - returns: RequestBuilder<BuScheduleRun> 
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: String, runId: String) -> RequestBuilder<BuScheduleRun> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let runIdPreEscape = "\(runId)"
        let runIdPostEscape = runIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{runId}", with: runIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuScheduleRun>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the result of a rescheduling operation
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter managementUnitIds: (query) The IDs of the management units for which to fetch the reschedule results 
     - parameter expand: (query) The fields to expand. Omitting will return an empty response 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId: String, runId: String, managementUnitIds: [String], expand: [String], completion: @escaping ((_ data: BuRescheduleResult?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitSchedulingRunResultWithRequestBuilder(businessUnitId: businessUnitId, runId: runId, managementUnitIds: managementUnitIds, expand: expand)
        requestBuilder.execute { (response: Response<BuRescheduleResult>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the result of a rescheduling operation
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}/result
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headcountForecast" : "{}",
  "generationResultsDownloadUrl" : "generationResultsDownloadUrl",
  "agentSchedules" : [ {
    "downloadResult" : "{}",
    "managementUnit" : "{}",
    "downloadUrl" : "downloadUrl"
  }, {
    "downloadResult" : "{}",
    "managementUnit" : "{}",
    "downloadUrl" : "downloadUrl"
  } ],
  "generationResults" : "{}",
  "headcountForecastDownloadUrl" : "headcountForecastDownloadUrl"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter managementUnitIds: (query) The IDs of the management units for which to fetch the reschedule results 
     - parameter expand: (query) The fields to expand. Omitting will return an empty response 

     - returns: RequestBuilder<BuRescheduleResult> 
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRunResultWithRequestBuilder(businessUnitId: String, runId: String, managementUnitIds: [String], expand: [String]) -> RequestBuilder<BuRescheduleResult> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}/result"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let runIdPreEscape = "\(runId)"
        let runIdPostEscape = runIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{runId}", with: runIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "managementUnitIds": managementUnitIds, 
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<BuRescheduleResult>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the list of scheduling runs
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId: String, completion: @escaping ((_ data: BuScheduleRunListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitSchedulingRunsWithRequestBuilder(businessUnitId: businessUnitId)
        requestBuilder.execute { (response: Response<BuScheduleRunListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of scheduling runs
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "messageSeverityCounts" : [ {
      "severity" : "Ignore",
      "count" : 5
    }, {
      "severity" : "Ignore",
      "count" : 5
    } ],
    "messageCount" : 1,
    "targetWeek" : "2000-01-23",
    "selfUri" : "https://openapi-generator.tech",
    "schedulingStartTime" : "2000-01-23T04:56:07.000+00:00",
    "schedulerRunId" : "schedulerRunId",
    "percentComplete" : 6.027456183070403,
    "weekCount" : 0,
    "schedule" : "{}",
    "schedulingCanceledBy" : "{}",
    "schedulingCompletedTime" : "2000-01-23T04:56:07.000+00:00",
    "intradayRescheduling" : true,
    "scheduleDescription" : "scheduleDescription",
    "reschedulingOptions" : "{}",
    "id" : "id",
    "state" : "None",
    "reschedulingResultExpiration" : "2000-01-23T04:56:07.000+00:00",
    "schedulingStartedBy" : "{}"
  }, {
    "messageSeverityCounts" : [ {
      "severity" : "Ignore",
      "count" : 5
    }, {
      "severity" : "Ignore",
      "count" : 5
    } ],
    "messageCount" : 1,
    "targetWeek" : "2000-01-23",
    "selfUri" : "https://openapi-generator.tech",
    "schedulingStartTime" : "2000-01-23T04:56:07.000+00:00",
    "schedulerRunId" : "schedulerRunId",
    "percentComplete" : 6.027456183070403,
    "weekCount" : 0,
    "schedule" : "{}",
    "schedulingCanceledBy" : "{}",
    "schedulingCompletedTime" : "2000-01-23T04:56:07.000+00:00",
    "intradayRescheduling" : true,
    "scheduleDescription" : "scheduleDescription",
    "reschedulingOptions" : "{}",
    "id" : "id",
    "state" : "None",
    "reschedulingResultExpiration" : "2000-01-23T04:56:07.000+00:00",
    "schedulingStartedBy" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 

     - returns: RequestBuilder<BuScheduleRunListing> 
     */
    open class func getWorkforcemanagementBusinessunitSchedulingRunsWithRequestBuilder(businessUnitId: String) -> RequestBuilder<BuScheduleRunListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuScheduleRunListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a service goal template
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of a service goal template to fetch 
     - parameter expand: (query) Include to access additional data on the service goal template (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId: String, serviceGoalTemplateId: String, expand: [String]? = nil, completion: @escaping ((_ data: ServiceGoalTemplate?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: businessUnitId, serviceGoalTemplateId: serviceGoalTemplateId, expand: expand)
        requestBuilder.execute { (response: Response<ServiceGoalTemplate>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a service goal template
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "abandonRate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "averageSpeedOfAnswer" : "{}",
  "id" : "id",
  "serviceLevel" : "{}",
  "impactOverride" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of a service goal template to fetch 
     - parameter expand: (query) Include to access additional data on the service goal template (optional)

     - returns: RequestBuilder<ServiceGoalTemplate> 
     */
    open class func getWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: String, serviceGoalTemplateId: String, expand: [String]? = nil) -> RequestBuilder<ServiceGoalTemplate> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let serviceGoalTemplateIdPreEscape = "\(serviceGoalTemplateId)"
        let serviceGoalTemplateIdPostEscape = serviceGoalTemplateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceGoalTemplateId}", with: serviceGoalTemplateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<ServiceGoalTemplate>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Gets list of service goal templates
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter expand: (query) Include to access additional data on the service goal template (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId: String, expand: [String]? = nil, completion: @escaping ((_ data: ServiceGoalTemplateList?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitServicegoaltemplatesWithRequestBuilder(businessUnitId: businessUnitId, expand: expand)
        requestBuilder.execute { (response: Response<ServiceGoalTemplateList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets list of service goal templates
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "entities" : [ {
    "metadata" : "{}",
    "abandonRate" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "averageSpeedOfAnswer" : "{}",
    "id" : "id",
    "serviceLevel" : "{}",
    "impactOverride" : "{}"
  }, {
    "metadata" : "{}",
    "abandonRate" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "averageSpeedOfAnswer" : "{}",
    "id" : "id",
    "serviceLevel" : "{}",
    "impactOverride" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter expand: (query) Include to access additional data on the service goal template (optional)

     - returns: RequestBuilder<ServiceGoalTemplateList> 
     */
    open class func getWorkforcemanagementBusinessunitServicegoaltemplatesWithRequestBuilder(businessUnitId: String, expand: [String]? = nil) -> RequestBuilder<ServiceGoalTemplateList> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<ServiceGoalTemplateList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    public enum Expand_getWorkforcemanagementBusinessunitWeekSchedule: String { 
        case managementunitsAgents = "managementUnits.agents"
    }

    
    /**
     Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter expand: (query) expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedule(businessUnitId: String, weekId: Date, scheduleId: String, expand: Expand_getWorkforcemanagementBusinessunitWeekSchedule? = nil, completion: @escaping ((_ data: BuScheduleMetadata?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekScheduleWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, expand: expand)
        requestBuilder.execute { (response: Response<BuScheduleMetadata>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "managementUnits" : [ {
    "managementUnit" : "{}",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "agentCount" : 6,
    "startDate" : "2000-01-23T04:56:07.000+00:00",
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ]
  }, {
    "managementUnit" : "{}",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "agentCount" : 6,
    "startDate" : "2000-01-23T04:56:07.000+00:00",
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ]
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "generationResults" : "{}",
  "id" : "id",
  "published" : true,
  "weekDate" : "2000-01-23",
  "shortTermForecast" : "{}",
  "weekCount" : 0
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter expand: (query) expand (optional)

     - returns: RequestBuilder<BuScheduleMetadata> 
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, expand: Expand_getWorkforcemanagementBusinessunitWeekSchedule? = nil) -> RequestBuilder<BuScheduleMetadata> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<BuScheduleMetadata>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get the generation results for a generated schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId: String, weekId: Date, scheduleId: String, completion: @escaping ((_ data: ScheduleGenerationResult?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekScheduleGenerationresultsWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId)
        requestBuilder.execute { (response: Response<ScheduleGenerationResult>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the generation results for a generated schedule
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/generationresults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "messageCount" : 0,
  "messageSeverities" : [ {
    "severity" : "Ignore",
    "type" : "AgentNotFound"
  }, {
    "severity" : "Ignore",
    "type" : "AgentNotFound"
  } ],
  "messages" : [ {
    "arguments" : [ {
      "type" : "AgentId",
      "value" : "value"
    }, {
      "type" : "AgentId",
      "value" : "value"
    } ],
    "type" : "AgentNotFound"
  }, {
    "arguments" : [ {
      "type" : "AgentId",
      "value" : "value"
    }, {
      "type" : "AgentId",
      "value" : "value"
    } ],
    "type" : "AgentNotFound"
  } ],
  "failed" : true,
  "runId" : "runId"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 

     - returns: RequestBuilder<ScheduleGenerationResult> 
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleGenerationresultsWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String) -> RequestBuilder<ScheduleGenerationResult> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/generationresults"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ScheduleGenerationResult>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the headcount forecast by planning group for the schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter forceDownload: (query) Whether to force the result to come via download url.  For testing purposes only (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId: String, weekId: Date, scheduleId: String, forceDownload: Bool? = nil, completion: @escaping ((_ data: BuHeadcountForecastResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecastWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, forceDownload: forceDownload)
        requestBuilder.execute { (response: Response<BuHeadcountForecastResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the headcount forecast by planning group for the schedule
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/headcountforecast
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter forceDownload: (query) Whether to force the result to come via download url.  For testing purposes only (optional)

     - returns: RequestBuilder<BuHeadcountForecastResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecastWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, forceDownload: Bool? = nil) -> RequestBuilder<BuHeadcountForecastResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/headcountforecast"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownload": forceDownload
        ])

        let requestBuilder: RequestBuilder<BuHeadcountForecastResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Loads agent's schedule history.
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter agentId: (path) THe ID of the agent 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId: String, weekId: Date, scheduleId: String, agentId: String, completion: @escaping ((_ data: BuAgentScheduleHistoryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekScheduleHistoryAgentWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, agentId: agentId)
        requestBuilder.execute { (response: Response<BuAgentScheduleHistoryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Loads agent's schedule history.
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/history/agents/{agentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "basePublishedSchedule" : "{}",
  "priorPublishedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "2000-01-23"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "2000-01-23"
  } ],
  "droppedChanges" : [ {
    "metadata" : "{}",
    "deletes" : "{}",
    "shiftIds" : [ "shiftIds", "shiftIds" ],
    "fullDayTimeOffMarkerDates" : [ "2000-01-23", "2000-01-23" ]
  }, {
    "metadata" : "{}",
    "deletes" : "{}",
    "shiftIds" : [ "shiftIds", "shiftIds" ],
    "fullDayTimeOffMarkerDates" : [ "2000-01-23", "2000-01-23" ]
  } ],
  "changes" : [ {
    "fullDayTimeOffMarkers" : [ {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    }, {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    } ],
    "metadata" : "{}",
    "deletes" : "{}",
    "shifts" : [ {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    }, {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    } ]
  }, {
    "fullDayTimeOffMarkers" : [ {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    }, {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    } ],
    "metadata" : "{}",
    "deletes" : "{}",
    "shifts" : [ {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    }, {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    } ]
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter agentId: (path) THe ID of the agent 

     - returns: RequestBuilder<BuAgentScheduleHistoryResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekScheduleHistoryAgentWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, agentId: String) -> RequestBuilder<BuAgentScheduleHistoryResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/history/agents/{agentId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAgentScheduleHistoryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get the performance prediction for the associated schedule
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions(businessUnitId: String, weekId: String, scheduleId: String, completion: @escaping ((_ data: PerformancePredictionResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId)
        requestBuilder.execute { (response: Response<PerformancePredictionResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the performance prediction for the associated schedule
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "downloadUrl" : "downloadUrl",
  "id" : "id",
  "state" : "Processing",
  "weekDate" : "2000-01-23",
  "scheduleId" : "scheduleId"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 

     - returns: RequestBuilder<PerformancePredictionResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsWithRequestBuilder(businessUnitId: String, weekId: String, scheduleId: String) -> RequestBuilder<PerformancePredictionResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PerformancePredictionResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get recalculated performance prediction result
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the recalculation belongs to 
     - parameter recalculationId: (path) The ID of the recalculation request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation(businessUnitId: String, weekId: String, scheduleId: String, recalculationId: String, completion: @escaping ((_ data: PerformancePredictionRecalculationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, recalculationId: recalculationId)
        requestBuilder.execute { (response: Response<PerformancePredictionRecalculationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get recalculated performance prediction result
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/{recalculationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrl" : "downloadUrl",
  "operationId" : "operationId",
  "state" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the recalculation belongs to 
     - parameter recalculationId: (path) The ID of the recalculation request 

     - returns: RequestBuilder<PerformancePredictionRecalculationResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationWithRequestBuilder(businessUnitId: String, weekId: String, scheduleId: String, recalculationId: String) -> RequestBuilder<PerformancePredictionRecalculationResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/{recalculationId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let recalculationIdPreEscape = "\(recalculationId)"
        let recalculationIdPostEscape = recalculationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{recalculationId}", with: recalculationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PerformancePredictionRecalculationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    public enum Expand_getWorkforcemanagementBusinessunitWeekSchedules: String { 
        case forecastDescription = "forecast.description"
    }

    
    /**
     Get the list of week schedules for the specified week
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format, or &#39;recent&#39; (without quotes) to get recent schedules 
     - parameter includeOnlyPublished: (query) includeOnlyPublished (optional)
     - parameter expand: (query) expand (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedules(businessUnitId: String, weekId: String, includeOnlyPublished: Bool? = nil, expand: Expand_getWorkforcemanagementBusinessunitWeekSchedules? = nil, completion: @escaping ((_ data: BuScheduleListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekSchedulesWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, includeOnlyPublished: includeOnlyPublished, expand: expand)
        requestBuilder.execute { (response: Response<BuScheduleListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of week schedules for the specified week
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules
     - Use \"recent\" (without quotes) for the `weekId` path parameter to fetch all forecasts for +/- 26 weeks from the current date. Response will include any schedule which spans the specified week
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "generationResults" : "{}",
    "id" : "id",
    "published" : true,
    "weekDate" : "2000-01-23",
    "shortTermForecast" : "{}",
    "weekCount" : 0
  }, {
    "metadata" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "generationResults" : "{}",
    "id" : "id",
    "published" : true,
    "weekDate" : "2000-01-23",
    "shortTermForecast" : "{}",
    "weekCount" : 0
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format, or &#39;recent&#39; (without quotes) to get recent schedules 
     - parameter includeOnlyPublished: (query) includeOnlyPublished (optional)
     - parameter expand: (query) expand (optional)

     - returns: RequestBuilder<BuScheduleListing> 
     */
    open class func getWorkforcemanagementBusinessunitWeekSchedulesWithRequestBuilder(businessUnitId: String, weekId: String, includeOnlyPublished: Bool? = nil, expand: Expand_getWorkforcemanagementBusinessunitWeekSchedules? = nil) -> RequestBuilder<BuScheduleListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeOnlyPublished": includeOnlyPublished, 
            "expand": expand?.rawValue
        ])

        let requestBuilder: RequestBuilder<BuScheduleListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get a short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter expand: (query) Include to access additional data on the forecast (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId: String, weekDateId: Date, forecastId: String, expand: [String]? = nil, completion: @escaping ((_ data: BuShortTermForecast?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId, expand: expand)
        requestBuilder.execute { (response: Response<BuShortTermForecast>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a short term forecast
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "legacy" : true,
  "referenceStartDate" : "2000-01-23T04:56:07.000+00:00",
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "timeZone" : "timeZone",
  "sourceDays" : [ {
    "date" : "date",
    "dataKey" : "dataKey",
    "fileName" : "fileName",
    "dayOfWeek" : "Sunday",
    "weight" : 6
  }, {
    "date" : "date",
    "dataKey" : "dataKey",
    "fileName" : "fileName",
    "dayOfWeek" : "Sunday",
    "weight" : 6
  } ],
  "weekCount" : 0,
  "creationMethod" : "Import",
  "planningGroupsVersion" : 9,
  "planningGroups" : "{}",
  "generationResults" : "{}",
  "id" : "id",
  "weekDate" : "2000-01-23",
  "canUseForScheduling" : true,
  "modifications" : [ {
    "startIntervalIndex" : 1,
    "legacyMetric" : "AverageAfterCallWorkTimeSeconds",
    "secondaryGranularity" : "secondaryGranularity",
    "values" : [ {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    }, {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    } ],
    "type" : "MinimumPerInterval",
    "planningGroupIds" : [ "planningGroupIds", "planningGroupIds" ],
    "enabled" : true,
    "displayGranularity" : "displayGranularity",
    "endIntervalIndex" : 5,
    "metric" : "Offered",
    "granularity" : "granularity",
    "value" : 5.637376656633329,
    "secondaryValues" : [ {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    }, {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    } ]
  }, {
    "startIntervalIndex" : 1,
    "legacyMetric" : "AverageAfterCallWorkTimeSeconds",
    "secondaryGranularity" : "secondaryGranularity",
    "values" : [ {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    }, {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    } ],
    "type" : "MinimumPerInterval",
    "planningGroupIds" : [ "planningGroupIds", "planningGroupIds" ],
    "enabled" : true,
    "displayGranularity" : "displayGranularity",
    "endIntervalIndex" : 5,
    "metric" : "Offered",
    "granularity" : "granularity",
    "value" : 5.637376656633329,
    "secondaryValues" : [ {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    }, {
      "intervalIndex" : 2,
      "value" : 7.061401241503109
    } ]
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter expand: (query) Include to access additional data on the forecast (optional)

     - returns: RequestBuilder<BuShortTermForecast> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String, expand: [String]? = nil) -> RequestBuilder<BuShortTermForecast> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<BuShortTermForecast>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Get the result of a short term forecast calculation
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter weekNumber: (query) The week number to fetch (for multi-week forecasts) (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId: String, weekDateId: Date, forecastId: String, weekNumber: Int? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: BuForecastResultResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastDataWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId, weekNumber: weekNumber, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<BuForecastResultResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the result of a short term forecast calculation
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/data
     - Includes modifications unless you pass the doNotApplyModifications query parameter
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter weekNumber: (query) The week number to fetch (for multi-week forecasts) (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)

     - returns: RequestBuilder<BuForecastResultResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastDataWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String, weekNumber: Int? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<BuForecastResultResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/data"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "weekNumber": weekNumber?.encodeToJSON(), 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BuForecastResultResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Gets the forecast generation results
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId: String, weekDateId: Date, forecastId: String, completion: @escaping ((_ data: BuForecastGenerationResult?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresultsWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId)
        requestBuilder.execute { (response: Response<BuForecastGenerationResult>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets the forecast generation results
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/generationresults
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "planningGroupResults" : [ {
    "planningGroupId" : "planningGroupId",
    "metricResults" : [ {
      "metric" : "Offered",
      "forecastingMethod" : "AutoRegressiveIntegratedMovingAverage",
      "forecastType" : "LongTerm"
    }, {
      "metric" : "Offered",
      "forecastingMethod" : "AutoRegressiveIntegratedMovingAverage",
      "forecastType" : "LongTerm"
    } ]
  }, {
    "planningGroupId" : "planningGroupId",
    "metricResults" : [ {
      "metric" : "Offered",
      "forecastingMethod" : "AutoRegressiveIntegratedMovingAverage",
      "forecastType" : "LongTerm"
    }, {
      "metric" : "Offered",
      "forecastingMethod" : "AutoRegressiveIntegratedMovingAverage",
      "forecastType" : "LongTerm"
    } ]
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 

     - returns: RequestBuilder<BuForecastGenerationResult> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresultsWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String) -> RequestBuilder<BuForecastGenerationResult> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/generationresults"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuForecastGenerationResult>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the result of a long term forecast calculation
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId: String, weekDateId: Date, forecastId: String, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: LongTermForecastResultResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<LongTermForecastResultResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the result of a long term forecast calculation
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/longtermforecastdata
     - Includes modifications unless you pass the doNotApplyModifications query parameter
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)

     - returns: RequestBuilder<LongTermForecastResultResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String, forceDownloadService: Bool? = nil) -> RequestBuilder<LongTermForecastResultResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/longtermforecastdata"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<LongTermForecastResultResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Gets the forecast planning group snapshot
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId: String, weekDateId: Date, forecastId: String, completion: @escaping ((_ data: ForecastPlanningGroupsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroupsWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId)
        requestBuilder.execute { (response: Response<ForecastPlanningGroupsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets the forecast planning group snapshot
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/planninggroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "serviceGoalTemplate" : "{}",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  }, {
    "serviceGoalTemplate" : "{}",
    "name" : "name",
    "id" : "id",
    "routePaths" : [ {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    }, {
      "skills" : [ {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      }, {
        "selfUri" : "https://openapi-generator.tech",
        "id" : "id"
      } ],
      "mediaType" : "Voice",
      "language" : "{}",
      "queue" : "{}"
    } ]
  } ],
  "businessUnitServiceGoalImpact" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 

     - returns: RequestBuilder<ForecastPlanningGroupsResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroupsWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String) -> RequestBuilder<ForecastPlanningGroupsResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/planninggroups"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ForecastPlanningGroupsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Get the staffing requirement by planning group for a forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter weekNumbers: (query) The week numbers to fetch (for multi-week forecasts) staffing requirements. Returns all week data if the list is not specified (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement(businessUnitId: String, weekDateId: Date, forecastId: String, weekNumbers: [String]? = nil, completion: @escaping ((_ data: BuForecastStaffingRequirementsResultResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirementWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId, weekNumbers: weekNumbers)
        requestBuilder.execute { (response: Response<BuForecastStaffingRequirementsResultResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the staffing requirement by planning group for a forecast
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/staffingrequirement
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "referenceStartDate" : "2000-01-23T04:56:07.000+00:00",
  "forecast" : "{}",
  "state" : "Processing",
  "weekCount" : 0,
  "results" : [ {
    "downloadUrlExpirationDate" : "2000-01-23T04:56:07.000+00:00",
    "downloadUrl" : "downloadUrl",
    "weekNumber" : 1,
    "planningGroupStaffingRequirements" : [ {
      "staffingRequirementsPerInterval" : [ 5.962133916683182, 5.962133916683182 ],
      "planningGroupId" : "planningGroupId"
    }, {
      "staffingRequirementsPerInterval" : [ 5.962133916683182, 5.962133916683182 ],
      "planningGroupId" : "planningGroupId"
    } ]
  }, {
    "downloadUrlExpirationDate" : "2000-01-23T04:56:07.000+00:00",
    "downloadUrl" : "downloadUrl",
    "weekNumber" : 1,
    "planningGroupStaffingRequirements" : [ {
      "staffingRequirementsPerInterval" : [ 5.962133916683182, 5.962133916683182 ],
      "planningGroupId" : "planningGroupId"
    }, {
      "staffingRequirementsPerInterval" : [ 5.962133916683182, 5.962133916683182 ],
      "planningGroupId" : "planningGroupId"
    } ]
  } ],
  "businessUnitId" : "businessUnitId",
  "intervalLengthMinutes" : 6
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast 
     - parameter weekNumbers: (query) The week numbers to fetch (for multi-week forecasts) staffing requirements. Returns all week data if the list is not specified (optional)

     - returns: RequestBuilder<BuForecastStaffingRequirementsResultResponse> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirementWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String, weekNumbers: [String]? = nil) -> RequestBuilder<BuForecastStaffingRequirementsResultResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/staffingrequirement"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "weekNumbers": weekNumbers
        ])

        let requestBuilder: RequestBuilder<BuForecastStaffingRequirementsResultResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get short term forecasts
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format or &#39;recent&#39; (without quotes) to fetch recent forecasts 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId: String, weekDateId: String, completion: @escaping ((_ data: BuShortTermForecastListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitWeekShorttermforecastsWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId)
        requestBuilder.execute { (response: Response<BuShortTermForecastListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get short term forecasts
     - GET /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts
     - Use \"recent\" (without quotes) for the `weekDateId` path parameter to fetch all forecasts for +/- 26 weeks from the current date. Response will include any forecast which spans the specified week
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "legacy" : true,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "id" : "id",
    "weekDate" : "2000-01-23",
    "weekCount" : 0,
    "canUseForScheduling" : true,
    "creationMethod" : "Import"
  }, {
    "metadata" : "{}",
    "legacy" : true,
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "id" : "id",
    "weekDate" : "2000-01-23",
    "weekCount" : 0,
    "canUseForScheduling" : true,
    "creationMethod" : "Import"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format or &#39;recent&#39; (without quotes) to fetch recent forecasts 

     - returns: RequestBuilder<BuShortTermForecastListing> 
     */
    open class func getWorkforcemanagementBusinessunitWeekShorttermforecastsWithRequestBuilder(businessUnitId: String, weekDateId: String) -> RequestBuilder<BuShortTermForecastListing> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuShortTermForecastListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    public enum Feature_getWorkforcemanagementBusinessunits: String { 
        case agentSchedule = "AgentSchedule"
        case agentTimeOffRequest = "AgentTimeOffRequest"
        case alternativeShift = "AlternativeShift"
        case coaching = "Coaching"
        case learning = "Learning"
        case activityCodes = "ActivityCodes"
        case activityPlans = "ActivityPlans"
        case agents = "Agents"
        case buActivityCodes = "BuActivityCodes"
        case businessUnits = "BusinessUnits"
        case continuousForecast = "ContinuousForecast"
        case historicalAdherence = "HistoricalAdherence"
        case historicalShrinkage = "HistoricalShrinkage"
        case intradayMonitoring = "IntradayMonitoring"
        case buIntradayMonitoring = "BuIntradayMonitoring"
        case managementUnits = "ManagementUnits"
        case realTimeAdherence = "RealTimeAdherence"
        case schedules = "Schedules"
        case buSchedules = "BuSchedules"
        case serviceGoalTemplates = "ServiceGoalTemplates"
        case planningGroups = "PlanningGroups"
        case shiftTrading = "ShiftTrading"
        case shortTermForecasts = "ShortTermForecasts"
        case buShortTermForecasts = "BuShortTermForecasts"
        case staffingGroups = "StaffingGroups"
        case timeOffPlans = "TimeOffPlans"
        case timeOffRequests = "TimeOffRequests"
        case timeOffLimits = "TimeOffLimits"
        case workPlanBids = "WorkPlanBids"
        case workPlanRotations = "WorkPlanRotations"
        case workPlans = "WorkPlans"
    }

    
    
    /**
     Get business units
     
     - parameter feature: (query) If specified, the list of business units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of business units belonging to the specified division will be returned (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunits(feature: Feature_getWorkforcemanagementBusinessunits? = nil, divisionId: String? = nil, completion: @escaping ((_ data: BusinessUnitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitsWithRequestBuilder(feature: feature, divisionId: divisionId)
        requestBuilder.execute { (response: Response<BusinessUnitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get business units
     - GET /api/v2/workforcemanagement/businessunits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "division" : "{}",
    "authorized" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "authorized" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter feature: (query) If specified, the list of business units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of business units belonging to the specified division will be returned (optional)

     - returns: RequestBuilder<BusinessUnitListing> 
     */
    open class func getWorkforcemanagementBusinessunitsWithRequestBuilder(feature: Feature_getWorkforcemanagementBusinessunits? = nil, divisionId: String? = nil) -> RequestBuilder<BusinessUnitListing> {        
        let path = "/api/v2/workforcemanagement/businessunits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "feature": feature?.rawValue, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<BusinessUnitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get business units across divisions
     
     - parameter divisionId: (query) The divisionIds to filter by. If omitted, will return business units in all divisions (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementBusinessunitsDivisionviews(divisionId: [String]? = nil, completion: @escaping ((_ data: BusinessUnitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementBusinessunitsDivisionviewsWithRequestBuilder(divisionId: divisionId)
        requestBuilder.execute { (response: Response<BusinessUnitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get business units across divisions
     - GET /api/v2/workforcemanagement/businessunits/divisionviews
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "division" : "{}",
    "authorized" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  }, {
    "division" : "{}",
    "authorized" : true,
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter divisionId: (query) The divisionIds to filter by. If omitted, will return business units in all divisions (optional)

     - returns: RequestBuilder<BusinessUnitListing> 
     */
    open class func getWorkforcemanagementBusinessunitsDivisionviewsWithRequestBuilder(divisionId: [String]? = nil) -> RequestBuilder<BusinessUnitListing> {        
        let path = "/api/v2/workforcemanagement/businessunits/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<BusinessUnitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get ics formatted calendar based on shareable link
     
     - parameter calendarId: (query) The id of the ics-formatted calendar 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementCalendarDataIcs(calendarId: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementCalendarDataIcsWithRequestBuilder(calendarId: calendarId)
        requestBuilder.execute { (response: Response<String>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get ics formatted calendar based on shareable link
     - GET /api/v2/workforcemanagement/calendar/data/ics
     
     - parameter calendarId: (query) The id of the ics-formatted calendar 

     - returns: RequestBuilder<String> 
     */
    open class func getWorkforcemanagementCalendarDataIcsWithRequestBuilder(calendarId: String) -> RequestBuilder<String> {        
        let path = "/api/v2/workforcemanagement/calendar/data/ics"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "calendarId": calendarId
        ])

        let requestBuilder: RequestBuilder<String>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get existing calendar link for the current user
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementCalendarUrlIcs(completion: @escaping ((_ data: CalendarUrlResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementCalendarUrlIcsWithRequestBuilder()
        requestBuilder.execute { (response: Response<CalendarUrlResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get existing calendar link for the current user
     - GET /api/v2/workforcemanagement/calendar/url/ics
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "calendarUrl" : "calendarUrl"
}, statusCode=200}]

     - returns: RequestBuilder<CalendarUrlResponse> 
     */
    open class func getWorkforcemanagementCalendarUrlIcsWithRequestBuilder() -> RequestBuilder<CalendarUrlResponse> {        
        let path = "/api/v2/workforcemanagement/calendar/url/ics"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CalendarUrlResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Retrieves delete job status for historical data imports of the organization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementHistoricaldataDeletejob(completion: @escaping ((_ data: HistoricalImportDeleteJobResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementHistoricaldataDeletejobWithRequestBuilder()
        requestBuilder.execute { (response: Response<HistoricalImportDeleteJobResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves delete job status for historical data imports of the organization
     - GET /api/v2/workforcemanagement/historicaldata/deletejob
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "status" : "InProgress"
}, statusCode=200}]

     - returns: RequestBuilder<HistoricalImportDeleteJobResponse> 
     */
    open class func getWorkforcemanagementHistoricaldataDeletejobWithRequestBuilder() -> RequestBuilder<HistoricalImportDeleteJobResponse> {        
        let path = "/api/v2/workforcemanagement/historicaldata/deletejob"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HistoricalImportDeleteJobResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Retrieves status of the historical data imports of the organization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementHistoricaldataImportstatus(completion: @escaping ((_ data: HistoricalImportStatusListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementHistoricaldataImportstatusWithRequestBuilder()
        requestBuilder.execute { (response: Response<HistoricalImportStatusListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves status of the historical data imports of the organization
     - GET /api/v2/workforcemanagement/historicaldata/importstatus
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "requestId" : "requestId",
    "dateImportStarted" : "2000-01-23T04:56:07.000+00:00",
    "active" : true,
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "dateImportEnded" : "2000-01-23T04:56:07.000+00:00",
    "error" : "error",
    "type" : "Csv",
    "status" : "Initiated"
  }, {
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "requestId" : "requestId",
    "dateImportStarted" : "2000-01-23T04:56:07.000+00:00",
    "active" : true,
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "dateImportEnded" : "2000-01-23T04:56:07.000+00:00",
    "error" : "error",
    "type" : "Csv",
    "status" : "Initiated"
  } ]
}, statusCode=200}]

     - returns: RequestBuilder<HistoricalImportStatusListing> 
     */
    open class func getWorkforcemanagementHistoricaldataImportstatusWithRequestBuilder() -> RequestBuilder<HistoricalImportStatusListing> {        
        let path = "/api/v2/workforcemanagement/historicaldata/importstatus"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HistoricalImportStatusListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get integrations
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementIntegrationsHris(completion: @escaping ((_ data: WfmIntegrationListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementIntegrationsHrisWithRequestBuilder()
        requestBuilder.execute { (response: Response<WfmIntegrationListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get integrations
     - GET /api/v2/workforcemanagement/integrations/hris
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "active" : true,
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "active" : true,
    "id" : "id"
  } ]
}, statusCode=200}]

     - returns: RequestBuilder<WfmIntegrationListing> 
     */
    open class func getWorkforcemanagementIntegrationsHrisWithRequestBuilder() -> RequestBuilder<WfmIntegrationListing> {        
        let path = "/api/v2/workforcemanagement/integrations/hris"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmIntegrationListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Query the results of time off types job
     
     - parameter jobId: (path) The ID of the job. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementIntegrationsHrisTimeofftypesJob(jobId: String, completion: @escaping ((_ data: HrisTimeOffTypesJobResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementIntegrationsHrisTimeofftypesJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<HrisTimeOffTypesJobResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query the results of time off types job
     - GET /api/v2/workforcemanagement/integrations/hris/timeofftypes/jobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "secondaryId" : "secondaryId",
    "name" : "name",
    "id" : "id"
  }, {
    "secondaryId" : "secondaryId",
    "name" : "name",
    "id" : "id"
  } ],
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter jobId: (path) The ID of the job. 

     - returns: RequestBuilder<HrisTimeOffTypesJobResponse> 
     */
    open class func getWorkforcemanagementIntegrationsHrisTimeofftypesJobWithRequestBuilder(jobId: String) -> RequestBuilder<HrisTimeOffTypesJobResponse> {        
        var path = "/api/v2/workforcemanagement/integrations/hris/timeofftypes/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HrisTimeOffTypesJobResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunit(managementUnitId: String, expand: [String]? = nil, completion: @escaping ((_ data: ManagementUnit?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: managementUnitId, expand: expand)
        requestBuilder.execute { (response: Response<ManagementUnit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get management unit
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}
     - settings.shortTermForecasting is deprecated and now lives on the business unit
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "startDayOfWeek" : "Sunday",
  "division" : "{}",
  "settings" : "{}",
  "metadata" : "{}",
  "businessUnit" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeZone" : "timeZone",
  "modifiedBy" : "{}",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "version" : 0
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query)  (optional)

     - returns: RequestBuilder<ManagementUnit> 
     */
    open class func getWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: String, expand: [String]? = nil) -> RequestBuilder<ManagementUnit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<ManagementUnit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Deprecated: Instead use /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes. Get the list of activity codes
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitActivitycodes(managementUnitId: String, completion: @escaping ((_ data: ActivityCodeContainer?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitActivitycodesWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<ActivityCodeContainer>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Deprecated: Instead use /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes. Get the list of activity codes
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/activitycodes
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "activityCodes" : {
    "key" : {
      "lengthInMinutes" : 0,
      "isDefault" : true,
      "metadata" : "{}",
      "countsAsWorkTime" : true,
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "countsAsPaidTime" : true,
      "agentTimeOffSelectable" : true,
      "isActive" : true,
      "category" : "OnQueueWork"
    }
  }
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 

     - returns: RequestBuilder<ActivityCodeContainer> 
     */
    open class func getWorkforcemanagementManagementunitActivitycodesWithRequestBuilder(managementUnitId: String) -> RequestBuilder<ActivityCodeContainer> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/activitycodes"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ActivityCodeContainer>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a list of user schedule adherence records for the requested management unit
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitAdherence(managementUnitId: String, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: UserScheduleAdherenceListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitAdherenceWithRequestBuilder(managementUnitId: managementUnitId, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<UserScheduleAdherenceListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of user schedule adherence records for the requested management unit
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/adherence
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "adherenceExplanation" : "{}",
    "removedFromManagementUnit" : true,
    "organizationSecondaryPresenceId" : "organizationSecondaryPresenceId",
    "businessUnit" : "{}",
    "impact" : "Positive",
    "selfUri" : "https://openapi-generator.tech",
    "adherenceState" : "InAdherence",
    "team" : "{}",
    "routingStatus" : "OFF_QUEUE",
    "presenceUpdateTime" : "2000-01-23T04:56:07.000+00:00",
    "isOutOfOffice" : true,
    "activeQueuesModifiedTime" : "2000-01-23T04:56:07.000+00:00",
    "managementUnit" : "{}",
    "timeOfAdherenceChange" : "2000-01-23T04:56:07.000+00:00",
    "systemPresence" : "Available",
    "name" : "name",
    "actualActivityCategory" : "OnQueueWork",
    "scheduledActivityCategory" : "OnQueueWork",
    "scheduledActivityCode" : "{}",
    "activeQueues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "id" : "id",
    "user" : "{}"
  }, {
    "adherenceExplanation" : "{}",
    "removedFromManagementUnit" : true,
    "organizationSecondaryPresenceId" : "organizationSecondaryPresenceId",
    "businessUnit" : "{}",
    "impact" : "Positive",
    "selfUri" : "https://openapi-generator.tech",
    "adherenceState" : "InAdherence",
    "team" : "{}",
    "routingStatus" : "OFF_QUEUE",
    "presenceUpdateTime" : "2000-01-23T04:56:07.000+00:00",
    "isOutOfOffice" : true,
    "activeQueuesModifiedTime" : "2000-01-23T04:56:07.000+00:00",
    "managementUnit" : "{}",
    "timeOfAdherenceChange" : "2000-01-23T04:56:07.000+00:00",
    "systemPresence" : "Available",
    "name" : "name",
    "actualActivityCategory" : "OnQueueWork",
    "scheduledActivityCategory" : "OnQueueWork",
    "scheduledActivityCode" : "{}",
    "activeQueues" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "id" : "id",
    "user" : "{}"
  } ],
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)

     - returns: RequestBuilder<UserScheduleAdherenceListing> 
     */
    open class func getWorkforcemanagementManagementunitAdherenceWithRequestBuilder(managementUnitId: String, forceDownloadService: Bool? = nil) -> RequestBuilder<UserScheduleAdherenceListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/adherence"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<UserScheduleAdherenceListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get data for agent in the management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter agentId: (path) The agent id 
     - parameter excludeCapabilities: (query) Excludes all capabilities of the agent such as queues, languages, and skills (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitAgent(managementUnitId: String, agentId: String, excludeCapabilities: Bool? = nil, completion: @escaping ((_ data: WfmAgent?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitAgentWithRequestBuilder(managementUnitId: managementUnitId, agentId: agentId, excludeCapabilities: excludeCapabilities)
        requestBuilder.execute { (response: Response<WfmAgent>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get data for agent in the management unit
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "skills" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "metadata" : "{}",
  "languages" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "schedulable" : true,
  "queues" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id",
  "workPlan" : "{}",
  "user" : "{}",
  "workPlanRotation" : "{}",
  "acceptDirectShiftTrades" : true
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter agentId: (path) The agent id 
     - parameter excludeCapabilities: (query) Excludes all capabilities of the agent such as queues, languages, and skills (optional)

     - returns: RequestBuilder<WfmAgent> 
     */
    open class func getWorkforcemanagementManagementunitAgentWithRequestBuilder(managementUnitId: String, agentId: String, excludeCapabilities: Bool? = nil) -> RequestBuilder<WfmAgent> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "excludeCapabilities": excludeCapabilities
        ])

        let requestBuilder: RequestBuilder<WfmAgent>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Gets all the shift trades for a given agent
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter agentId: (path) The agent id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitAgentShifttrades(managementUnitId: String, agentId: String, completion: @escaping ((_ data: ShiftTradeListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitAgentShifttradesWithRequestBuilder(managementUnitId: managementUnitId, agentId: agentId)
        requestBuilder.execute { (response: Response<ShiftTradeListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all the shift trades for a given agent
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}/shifttrades
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "receivingShiftId" : "receivingShiftId",
    "receivingUser" : "{}",
    "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "oneSided" : true,
    "reviewedBy" : "{}",
    "initiatingUser" : "{}",
    "schedule" : "{}",
    "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
    "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "Unmatched",
    "weekDate" : "2000-01-23",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "initiatingShiftId" : "initiatingShiftId"
  }, {
    "metadata" : "{}",
    "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "receivingShiftId" : "receivingShiftId",
    "receivingUser" : "{}",
    "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "oneSided" : true,
    "reviewedBy" : "{}",
    "initiatingUser" : "{}",
    "schedule" : "{}",
    "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
    "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "Unmatched",
    "weekDate" : "2000-01-23",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "initiatingShiftId" : "initiatingShiftId"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter agentId: (path) The agent id 

     - returns: RequestBuilder<ShiftTradeListResponse> 
     */
    open class func getWorkforcemanagementManagementunitAgentShifttradesWithRequestBuilder(managementUnitId: String, agentId: String) -> RequestBuilder<ShiftTradeListResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}/shifttrades"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShiftTradeListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets a summary of all shift trades in the matched state
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitShifttradesMatched(managementUnitId: String, completion: @escaping ((_ data: ShiftTradeMatchesSummaryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitShifttradesMatchedWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<ShiftTradeMatchesSummaryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a summary of all shift trades in the matched state
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/matched
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "count" : 0,
    "weekDate" : "2000-01-23"
  }, {
    "count" : 0,
    "weekDate" : "2000-01-23"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 

     - returns: RequestBuilder<ShiftTradeMatchesSummaryResponse> 
     */
    open class func getWorkforcemanagementManagementunitShifttradesMatchedWithRequestBuilder(managementUnitId: String) -> RequestBuilder<ShiftTradeMatchesSummaryResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/matched"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShiftTradeMatchesSummaryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets list of users available for whom you can send direct shift trade requests
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitShifttradesUsers(managementUnitId: String, completion: @escaping ((_ data: WfmUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitShifttradesUsersWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<WfmUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets list of users available for whom you can send direct shift trade requests
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 

     - returns: RequestBuilder<WfmUserEntityListing> 
     */
    open class func getWorkforcemanagementManagementunitShifttradesUsersWithRequestBuilder(managementUnitId: String) -> RequestBuilder<WfmUserEntityListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/users"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Gets a time off limit object
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitTimeofflimit(managementUnitId: String, timeOffLimitId: String, completion: @escaping ((_ data: TimeOffLimit?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: managementUnitId, timeOffLimitId: timeOffLimitId)
        requestBuilder.execute { (response: Response<TimeOffLimit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a time off limit object
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}
     - Returns properties of time off limit object, but not daily values.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "granularity" : "Daily",
  "defaultLimitMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit to fetch 

     - returns: RequestBuilder<TimeOffLimit> 
     */
    open class func getWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: String, timeOffLimitId: String) -> RequestBuilder<TimeOffLimit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffLimitIdPreEscape = "\(timeOffLimitId)"
        let timeOffLimitIdPostEscape = timeOffLimitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffLimitId}", with: timeOffLimitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffLimit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets a list of time off limit objects under management unit.
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitTimeofflimits(managementUnitId: String, completion: @escaping ((_ data: TimeOffLimitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitTimeofflimitsWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<TimeOffLimitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a list of time off limit objects under management unit.
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits
     - Currently only one time off limit object is allowed under management unit, so the list contains either 0 or 1 element.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "granularity" : "Daily",
    "defaultLimitMinutes" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "metadata" : "{}",
    "granularity" : "Daily",
    "defaultLimitMinutes" : 0,
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 

     - returns: RequestBuilder<TimeOffLimitListing> 
     */
    open class func getWorkforcemanagementManagementunitTimeofflimitsWithRequestBuilder(managementUnitId: String) -> RequestBuilder<TimeOffLimitListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffLimitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Gets a time off plan
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitTimeoffplan(managementUnitId: String, timeOffPlanId: String, completion: @escaping ((_ data: TimeOffPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: managementUnitId, timeOffPlanId: timeOffPlanId)
        requestBuilder.execute { (response: Response<TimeOffPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a time off plan
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "activityCodeIds" : [ "activityCodeIds", "activityCodeIds" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeOffLimits" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "active" : true,
  "id" : "id",
  "hrisTimeOffType" : "{}",
  "autoApprovalRule" : "Never",
  "daysBeforeStartToExpireFromWaitlist" : 0
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to fetch 

     - returns: RequestBuilder<TimeOffPlan> 
     */
    open class func getWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: String, timeOffPlanId: String) -> RequestBuilder<TimeOffPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffPlanIdPreEscape = "\(timeOffPlanId)"
        let timeOffPlanIdPostEscape = timeOffPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffPlanId}", with: timeOffPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Gets a list of time off plans
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitTimeoffplans(managementUnitId: String, completion: @escaping ((_ data: TimeOffPlanListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitTimeoffplansWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<TimeOffPlanListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets a list of time off plans
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "activityCodeIds" : [ "activityCodeIds", "activityCodeIds" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeOffLimits" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "active" : true,
    "id" : "id",
    "hrisTimeOffType" : "{}",
    "autoApprovalRule" : "Never",
    "daysBeforeStartToExpireFromWaitlist" : 0
  }, {
    "metadata" : "{}",
    "activityCodeIds" : [ "activityCodeIds", "activityCodeIds" ],
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeOffLimits" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "active" : true,
    "id" : "id",
    "hrisTimeOffType" : "{}",
    "autoApprovalRule" : "Never",
    "daysBeforeStartToExpireFromWaitlist" : 0
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 

     - returns: RequestBuilder<TimeOffPlanListing> 
     */
    open class func getWorkforcemanagementManagementunitTimeoffplansWithRequestBuilder(managementUnitId: String) -> RequestBuilder<TimeOffPlanListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffPlanListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a time off request
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The userId to whom the Time Off Request applies. 
     - parameter timeOffRequestId: (path) Time Off Request Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId: String, userId: String, timeOffRequestId: String, completion: @escaping ((_ data: TimeOffRequestResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitUserTimeoffrequestWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, timeOffRequestId: timeOffRequestId)
        requestBuilder.execute { (response: Response<TimeOffRequestResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a time off request
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "syncVersion" : 5,
  "metadata" : "{}",
  "notes" : "notes",
  "substatus" : "AdvanceTimeElapsed",
  "selfUri" : "https://openapi-generator.tech",
  "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
  "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
  "payableMinutes" : [ 1, 1 ],
  "submittedDate" : "2000-01-23T04:56:07.000+00:00",
  "reviewedBy" : "{}",
  "activityCodeId" : "activityCodeId",
  "durationMinutes" : [ 6, 6 ],
  "isFullDayRequest" : true,
  "markedAsRead" : true,
  "dailyDurationMinutes" : 0,
  "paid" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "{}",
  "id" : "id",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "user" : "{}",
  "status" : "PENDING"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The userId to whom the Time Off Request applies. 
     - parameter timeOffRequestId: (path) Time Off Request Id 

     - returns: RequestBuilder<TimeOffRequestResponse> 
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequestWithRequestBuilder(managementUnitId: String, userId: String, timeOffRequestId: String) -> RequestBuilder<TimeOffRequestResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Retrieves time off limit, allocated and waitlisted values according to specific time off request
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter userId: (path) The userId to whom the time off request applies. 
     - parameter timeOffRequestId: (path) The ID of the time off request, which dates and activityCodeId determine limit values to retrieve 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId: String, userId: String, timeOffRequestId: String, completion: @escaping ((_ data: QueryTimeOffLimitValuesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimitsWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, timeOffRequestId: timeOffRequestId)
        requestBuilder.execute { (response: Response<QueryTimeOffLimitValuesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves time off limit, allocated and waitlisted values according to specific time off request
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeofflimits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "values" : [ {
    "allocatedMinutesPerInterval" : [ 6, 6 ],
    "timeOffLimit" : "{}",
    "waitlistedMinutesPerInterval" : [ 1, 1 ],
    "metadata" : "{}",
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 5, 5 ],
    "startDate" : "2000-01-23",
    "limitMinutesPerInterval" : [ 0, 0 ]
  }, {
    "allocatedMinutesPerInterval" : [ 6, 6 ],
    "timeOffLimit" : "{}",
    "waitlistedMinutesPerInterval" : [ 1, 1 ],
    "metadata" : "{}",
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 5, 5 ],
    "startDate" : "2000-01-23",
    "limitMinutesPerInterval" : [ 0, 0 ]
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter userId: (path) The userId to whom the time off request applies. 
     - parameter timeOffRequestId: (path) The ID of the time off request, which dates and activityCodeId determine limit values to retrieve 

     - returns: RequestBuilder<QueryTimeOffLimitValuesResponse> 
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimitsWithRequestBuilder(managementUnitId: String, userId: String, timeOffRequestId: String) -> RequestBuilder<QueryTimeOffLimitValuesResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeofflimits"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<QueryTimeOffLimitValuesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a list of time off requests for a given user
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The userId to whom the Time Off Request applies. 
     - parameter recentlyReviewed: (query) Limit results to requests that have been reviewed within the preceding 30 days (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId: String, userId: String, recentlyReviewed: Bool? = nil, completion: @escaping ((_ data: TimeOffRequestList?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitUserTimeoffrequestsWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, recentlyReviewed: recentlyReviewed)
        requestBuilder.execute { (response: Response<TimeOffRequestList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of time off requests for a given user
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "timeOffRequests" : [ {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  }, {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The userId to whom the Time Off Request applies. 
     - parameter recentlyReviewed: (query) Limit results to requests that have been reviewed within the preceding 30 days (optional)

     - returns: RequestBuilder<TimeOffRequestList> 
     */
    open class func getWorkforcemanagementManagementunitUserTimeoffrequestsWithRequestBuilder(managementUnitId: String, userId: String, recentlyReviewed: Bool? = nil) -> RequestBuilder<TimeOffRequestList> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "recentlyReviewed": recentlyReviewed
        ])

        let requestBuilder: RequestBuilder<TimeOffRequestList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get users in the management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitUsers(managementUnitId: String, completion: @escaping ((_ data: WfmUserEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitUsersWithRequestBuilder(managementUnitId: managementUnitId)
        requestBuilder.execute { (response: Response<WfmUserEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get users in the management unit
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/users
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  }, {
    "addresses" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "acdAutoAnswer" : true,
    "routingStatus" : "{}",
    "title" : "title",
    "division" : "{}",
    "authorization" : "{}",
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "skillUri" : "https://openapi-generator.tech",
      "id" : "id",
      "state" : "active",
      "proficiency" : 7.061401241503109
    } ],
    "station" : "{}",
    "dateLastLogin" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "active",
    "preferredName" : "preferredName",
    "department" : "department",
    "presence" : "{}",
    "lastTokenIssued" : {
      "dateIssued" : "2000-01-23T04:56:07.000+00:00"
    },
    "email" : "email",
    "images" : [ {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    }, {
      "imageUri" : "imageUri",
      "resolution" : "resolution"
    } ],
    "employerInfo" : {
      "employeeType" : "employeeType",
      "dateHire" : "dateHire",
      "employeeId" : "employeeId",
      "officialName" : "officialName"
    },
    "languages" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "name" : "name",
      "id" : "id",
      "state" : "active",
      "languageUri" : "https://openapi-generator.tech",
      "proficiency" : 9.301444243932576
    } ],
    "selfUri" : "https://openapi-generator.tech",
    "conversationSummary" : "{}",
    "groups" : [ {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    }, {
      "images" : [ {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      }, {
        "imageUri" : "imageUri",
        "resolution" : "resolution"
      } ],
      "addresses" : [ {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      }, {
        "extension" : "extension",
        "address" : "address",
        "display" : "display",
        "mediaType" : "PHONE",
        "type" : "GROUPRING"
      } ],
      "visibility" : "public",
      "memberCount" : 5,
      "selfUri" : "https://openapi-generator.tech",
      "description" : "description",
      "dateModified" : "2000-01-23T04:56:07.000+00:00",
      "owners" : [ null, null ],
      "rolesEnabled" : true,
      "type" : "official",
      "version" : 2,
      "rulesVisible" : true,
      "name" : "name",
      "id" : "id",
      "state" : "active"
    } ],
    "primaryContactInfo" : [ {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    }, {
      "extension" : "extension",
      "address" : "address",
      "countryCode" : "countryCode",
      "display" : "display",
      "integration" : "microsoftteams",
      "mediaType" : "PHONE",
      "type" : "PRIMARY"
    } ],
    "biography" : {
      "education" : [ {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      }, {
        "notes" : "notes",
        "school" : "school",
        "dateStart" : "2000-01-23",
        "dateEnd" : "2000-01-23",
        "fieldOfStudy" : "fieldOfStudy"
      } ],
      "hobbies" : [ "hobbies", "hobbies" ],
      "biography" : "biography",
      "interests" : [ "interests", "interests" ],
      "spouse" : "spouse"
    },
    "team" : "{}",
    "certifications" : [ "certifications", "certifications" ],
    "version" : 6,
    "outOfOffice" : "{}",
    "languagePreference" : "languagePreference",
    "profileSkills" : [ "profileSkills", "profileSkills" ],
    "chat" : {
      "jabberId" : "jabberId"
    },
    "name" : "name",
    "integrationPresence" : "{}",
    "locations" : [ {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    }, {
      "notes" : "notes",
      "coordinates" : {
        "key" : 1.4658129805029452
      },
      "locationDefinition" : {
        "images" : "images",
        "address" : {
          "zipcode" : "zipcode",
          "country" : "country",
          "city" : "city",
          "street1" : "street1",
          "countryName" : "countryName",
          "state" : "state",
          "street2" : "street2"
        },
        "notes" : "notes",
        "floorplanImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "addressVerificationDetails" : "{}",
        "selfUri" : "https://openapi-generator.tech",
        "profileImage" : [ {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        }, {
          "imageUri" : "imageUri",
          "resolution" : "resolution"
        } ],
        "emergencyNumber" : "{}",
        "version" : 5,
        "path" : [ "path", "path" ],
        "addressStored" : true,
        "name" : "name",
        "id" : "id",
        "contactUser" : "{}",
        "state" : "active",
        "addressVerified" : true
      },
      "id" : "id",
      "floorplanId" : "floorplanId"
    } ],
    "username" : "username",
    "geolocation" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 

     - returns: RequestBuilder<WfmUserEntityListing> 
     */
    open class func getWorkforcemanagementManagementunitUsersWithRequestBuilder(managementUnitId: String) -> RequestBuilder<WfmUserEntityListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmUserEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    public enum Expand_getWorkforcemanagementManagementunitWeekSchedule: String { 
        case generationresults = "generationResults"
        case headcountforecast = "headcountForecast"
    }

    
    
    /**
     Deprecated.  Use the equivalent business unit resource instead. Get a week schedule
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. 
     - parameter scheduleId: (path) The ID of the schedule to fetch 
     - parameter expand: (query) Which fields, if any, to expand (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWeekSchedule(managementUnitId: String, weekId: String, scheduleId: String, expand: Expand_getWorkforcemanagementManagementunitWeekSchedule? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: WeekScheduleResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWeekScheduleWithRequestBuilder(managementUnitId: managementUnitId, weekId: weekId, scheduleId: scheduleId, expand: expand, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<WeekScheduleResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Deprecated.  Use the equivalent business unit resource instead. Get a week schedule
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules/{scheduleId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. 
     - parameter scheduleId: (path) The ID of the schedule to fetch 
     - parameter expand: (query) Which fields, if any, to expand (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)

     - returns: RequestBuilder<WeekScheduleResponse> 
     */
    open class func getWorkforcemanagementManagementunitWeekScheduleWithRequestBuilder(managementUnitId: String, weekId: String, scheduleId: String, expand: Expand_getWorkforcemanagementManagementunitWeekSchedule? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<WeekScheduleResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules/{scheduleId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand?.rawValue, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<WeekScheduleResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. 
     - parameter includeOnlyPublished: (query) Return only published schedules (optional)
     - parameter earliestWeekDate: (query) The start date of the earliest week to query in yyyy-MM-dd format (optional)
     - parameter latestWeekDate: (query) The start date of the latest week to query in yyyy-MM-dd format (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWeekSchedules(managementUnitId: String, weekId: String, includeOnlyPublished: Bool? = nil, earliestWeekDate: String? = nil, latestWeekDate: String? = nil, completion: @escaping ((_ data: WeekScheduleListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWeekSchedulesWithRequestBuilder(managementUnitId: managementUnitId, weekId: weekId, includeOnlyPublished: includeOnlyPublished, earliestWeekDate: earliestWeekDate, latestWeekDate: latestWeekDate)
        requestBuilder.execute { (response: Response<WeekScheduleListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "generationResults" : "{}",
    "id" : "id",
    "published" : true,
    "weekDate" : "weekDate",
    "shortTermForecast" : "{}"
  }, {
    "metadata" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "description" : "description",
    "generationResults" : "{}",
    "id" : "id",
    "published" : true,
    "weekDate" : "weekDate",
    "shortTermForecast" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. 
     - parameter includeOnlyPublished: (query) Return only published schedules (optional)
     - parameter earliestWeekDate: (query) The start date of the earliest week to query in yyyy-MM-dd format (optional)
     - parameter latestWeekDate: (query) The start date of the latest week to query in yyyy-MM-dd format (optional)

     - returns: RequestBuilder<WeekScheduleListResponse> 
     */
    open class func getWorkforcemanagementManagementunitWeekSchedulesWithRequestBuilder(managementUnitId: String, weekId: String, includeOnlyPublished: Bool? = nil, earliestWeekDate: String? = nil, latestWeekDate: String? = nil) -> RequestBuilder<WeekScheduleListResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeOnlyPublished": includeOnlyPublished, 
            "earliestWeekDate": earliestWeekDate, 
            "latestWeekDate": latestWeekDate
        ])

        let requestBuilder: RequestBuilder<WeekScheduleListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    
    /**
     Gets all the shift trades for a given week
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter evaluateMatches: (query) Whether to evaluate the matches for violations (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWeekShifttrades(managementUnitId: String, weekDateId: Date, evaluateMatches: Bool? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: WeekShiftTradeListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWeekShifttradesWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, evaluateMatches: evaluateMatches, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<WeekShiftTradeListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all the shift trades for a given week
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "trade" : "{}",
    "matchReview" : "{}"
  }, {
    "trade" : "{}",
    "matchReview" : "{}"
  } ],
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter evaluateMatches: (query) Whether to evaluate the matches for violations (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<WeekShiftTradeListResponse> 
     */
    open class func getWorkforcemanagementManagementunitWeekShifttradesWithRequestBuilder(managementUnitId: String, weekDateId: Date, evaluateMatches: Bool? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<WeekShiftTradeListResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "evaluateMatches": evaluateMatches, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<WeekShiftTradeListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Get a work plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to fetch 
     - parameter includeOnly: (query) limit response to the specified fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWorkplan(managementUnitId: String, workPlanId: String, includeOnly: [String]? = nil, completion: @escaping ((_ data: WorkPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: managementUnitId, workPlanId: workPlanId, includeOnly: includeOnly)
        requestBuilder.execute { (response: Response<WorkPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a work plan
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "maximumDaysOffPerPlanningPeriod" : 1,
  "minimumPaidMinutesPerPlanningPeriod" : 1,
  "optionalDays" : "{}",
  "metadata" : "{}",
  "flexibleWeeklyPaidTime" : true,
  "shiftStartVariances" : "{}",
  "constrainWeeklyPaidTime" : true,
  "enabled" : true,
  "valid" : true,
  "minimumShiftStartDistanceMinutes" : 4,
  "constrainMaximumConsecutiveWorkingDays" : true,
  "maximumConsecutiveWorkingDays" : 2,
  "constrainMinimumTimeBetweenShifts" : true,
  "shifts" : [ {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  }, {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  } ],
  "weeklyMinimumPaidMinutes" : 6,
  "id" : "id",
  "paidTimeGranularityMinutes" : 5,
  "maximumConsecutiveWorkingWeekends" : 9,
  "weeklyExactPaidMinutes" : 0,
  "shiftStartVarianceType" : "ShiftStart",
  "maximumDays" : 2,
  "minimumWorkingDaysPerWeek" : 3,
  "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
  "selfUri" : "https://openapi-generator.tech",
  "minimumTimeBetweenShiftsMinutes" : 5,
  "constrainPaidTimeGranularity" : true,
  "maximumPaidMinutesPerPlanningPeriod" : 1,
  "agents" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  } ],
  "weeklyMaximumPaidMinutes" : 1,
  "name" : "name",
  "minimumDaysOffPerPlanningPeriod" : 7,
  "constrainMaximumConsecutiveWorkingWeekends" : true,
  "agentCount" : 6
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to fetch 
     - parameter includeOnly: (query) limit response to the specified fields (optional)

     - returns: RequestBuilder<WorkPlan> 
     */
    open class func getWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: String, workPlanId: String, includeOnly: [String]? = nil) -> RequestBuilder<WorkPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanIdPreEscape = "\(workPlanId)"
        let workPlanIdPostEscape = workPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanId}", with: workPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeOnly": includeOnly
        ])

        let requestBuilder: RequestBuilder<WorkPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get a work plan rotation
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWorkplanrotation(managementUnitId: String, workPlanRotationId: String, completion: @escaping ((_ data: WorkPlanRotationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: managementUnitId, workPlanRotationId: workPlanRotationId)
        requestBuilder.execute { (response: Response<WorkPlanRotationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a work plan rotation
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "dateRange" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "pattern" : "{}",
  "id" : "id",
  "agentCount" : 0,
  "enabled" : true,
  "agents" : [ {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  }, {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to fetch 

     - returns: RequestBuilder<WorkPlanRotationResponse> 
     */
    open class func getWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: String, workPlanRotationId: String) -> RequestBuilder<WorkPlanRotationResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanRotationIdPreEscape = "\(workPlanRotationId)"
        let workPlanRotationIdPostEscape = workPlanRotationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanRotationId}", with: workPlanRotationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkPlanRotationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get work plan rotations
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWorkplanrotations(managementUnitId: String, expand: [String]? = nil, completion: @escaping ((_ data: WorkPlanRotationListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWorkplanrotationsWithRequestBuilder(managementUnitId: managementUnitId, expand: expand)
        requestBuilder.execute { (response: Response<WorkPlanRotationListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get work plan rotations
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "dateRange" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "pattern" : "{}",
    "id" : "id",
    "agentCount" : 0,
    "enabled" : true,
    "agents" : [ {
      "dateRange" : "{}",
      "position" : 6,
      "user" : "{}"
    }, {
      "dateRange" : "{}",
      "position" : 6,
      "user" : "{}"
    } ]
  }, {
    "metadata" : "{}",
    "dateRange" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "pattern" : "{}",
    "id" : "id",
    "agentCount" : 0,
    "enabled" : true,
    "agents" : [ {
      "dateRange" : "{}",
      "position" : 6,
      "user" : "{}"
    }, {
      "dateRange" : "{}",
      "position" : 6,
      "user" : "{}"
    } ]
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query)  (optional)

     - returns: RequestBuilder<WorkPlanRotationListResponse> 
     */
    open class func getWorkforcemanagementManagementunitWorkplanrotationsWithRequestBuilder(managementUnitId: String, expand: [String]? = nil) -> RequestBuilder<WorkPlanRotationListResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<WorkPlanRotationListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    /**
     Get work plans
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query) Include to access additional data on the work plans (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitWorkplans(managementUnitId: String, expand: [String]? = nil, completion: @escaping ((_ data: WorkPlanListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitWorkplansWithRequestBuilder(managementUnitId: managementUnitId, expand: expand)
        requestBuilder.execute { (response: Response<WorkPlanListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get work plans
     - GET /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans
     - \"expand=details\" is deprecated
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "maximumDaysOffPerPlanningPeriod" : 1,
    "minimumPaidMinutesPerPlanningPeriod" : 1,
    "optionalDays" : "{}",
    "metadata" : "{}",
    "flexibleWeeklyPaidTime" : true,
    "shiftStartVariances" : "{}",
    "constrainWeeklyPaidTime" : true,
    "enabled" : true,
    "valid" : true,
    "minimumShiftStartDistanceMinutes" : 4,
    "constrainMaximumConsecutiveWorkingDays" : true,
    "maximumConsecutiveWorkingDays" : 2,
    "constrainMinimumTimeBetweenShifts" : true,
    "shifts" : [ {
      "validationId" : "validationId",
      "maximumContiguousWorkTimeMinutes" : 6,
      "constrainDayOff" : true,
      "flexiblePaidTime" : true,
      "delete" : true,
      "constrainStopTime" : true,
      "latestStopTimeMinutesFromMidnight" : 4,
      "id" : "id",
      "constrainEarliestStopTime" : true,
      "exactStartTimeMinutesFromMidnight" : 6,
      "dayOffRule" : "NextDayOff",
      "startIncrementMinutes" : 9,
      "constrainContiguousWorkTime" : true,
      "constrainLatestStopTime" : true,
      "latestStartTimeMinutesFromMidnight" : 1,
      "earliestStopTimeMinutesFromMidnight" : 5,
      "activities" : [ {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      }, {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      } ],
      "maximumPaidTimeMinutes" : 8,
      "name" : "name",
      "days" : "{}",
      "minimumContiguousWorkTimeMinutes" : 9,
      "exactPaidTimeMinutes" : 9,
      "earliestStartTimeMinutesFromMidnight" : 7,
      "flexibleStartTime" : true,
      "minimumPaidTimeMinutes" : 6
    }, {
      "validationId" : "validationId",
      "maximumContiguousWorkTimeMinutes" : 6,
      "constrainDayOff" : true,
      "flexiblePaidTime" : true,
      "delete" : true,
      "constrainStopTime" : true,
      "latestStopTimeMinutesFromMidnight" : 4,
      "id" : "id",
      "constrainEarliestStopTime" : true,
      "exactStartTimeMinutesFromMidnight" : 6,
      "dayOffRule" : "NextDayOff",
      "startIncrementMinutes" : 9,
      "constrainContiguousWorkTime" : true,
      "constrainLatestStopTime" : true,
      "latestStartTimeMinutesFromMidnight" : 1,
      "earliestStopTimeMinutesFromMidnight" : 5,
      "activities" : [ {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      }, {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      } ],
      "maximumPaidTimeMinutes" : 8,
      "name" : "name",
      "days" : "{}",
      "minimumContiguousWorkTimeMinutes" : 9,
      "exactPaidTimeMinutes" : 9,
      "earliestStartTimeMinutesFromMidnight" : 7,
      "flexibleStartTime" : true,
      "minimumPaidTimeMinutes" : 6
    } ],
    "weeklyMinimumPaidMinutes" : 6,
    "id" : "id",
    "paidTimeGranularityMinutes" : 5,
    "maximumConsecutiveWorkingWeekends" : 9,
    "weeklyExactPaidMinutes" : 0,
    "shiftStartVarianceType" : "ShiftStart",
    "maximumDays" : 2,
    "minimumWorkingDaysPerWeek" : 3,
    "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
    "selfUri" : "https://openapi-generator.tech",
    "minimumTimeBetweenShiftsMinutes" : 5,
    "constrainPaidTimeGranularity" : true,
    "maximumPaidMinutesPerPlanningPeriod" : 1,
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id",
      "delete" : true
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id",
      "delete" : true
    } ],
    "weeklyMaximumPaidMinutes" : 1,
    "name" : "name",
    "minimumDaysOffPerPlanningPeriod" : 7,
    "constrainMaximumConsecutiveWorkingWeekends" : true,
    "agentCount" : 6
  }, {
    "maximumDaysOffPerPlanningPeriod" : 1,
    "minimumPaidMinutesPerPlanningPeriod" : 1,
    "optionalDays" : "{}",
    "metadata" : "{}",
    "flexibleWeeklyPaidTime" : true,
    "shiftStartVariances" : "{}",
    "constrainWeeklyPaidTime" : true,
    "enabled" : true,
    "valid" : true,
    "minimumShiftStartDistanceMinutes" : 4,
    "constrainMaximumConsecutiveWorkingDays" : true,
    "maximumConsecutiveWorkingDays" : 2,
    "constrainMinimumTimeBetweenShifts" : true,
    "shifts" : [ {
      "validationId" : "validationId",
      "maximumContiguousWorkTimeMinutes" : 6,
      "constrainDayOff" : true,
      "flexiblePaidTime" : true,
      "delete" : true,
      "constrainStopTime" : true,
      "latestStopTimeMinutesFromMidnight" : 4,
      "id" : "id",
      "constrainEarliestStopTime" : true,
      "exactStartTimeMinutesFromMidnight" : 6,
      "dayOffRule" : "NextDayOff",
      "startIncrementMinutes" : 9,
      "constrainContiguousWorkTime" : true,
      "constrainLatestStopTime" : true,
      "latestStartTimeMinutesFromMidnight" : 1,
      "earliestStopTimeMinutesFromMidnight" : 5,
      "activities" : [ {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      }, {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      } ],
      "maximumPaidTimeMinutes" : 8,
      "name" : "name",
      "days" : "{}",
      "minimumContiguousWorkTimeMinutes" : 9,
      "exactPaidTimeMinutes" : 9,
      "earliestStartTimeMinutesFromMidnight" : 7,
      "flexibleStartTime" : true,
      "minimumPaidTimeMinutes" : 6
    }, {
      "validationId" : "validationId",
      "maximumContiguousWorkTimeMinutes" : 6,
      "constrainDayOff" : true,
      "flexiblePaidTime" : true,
      "delete" : true,
      "constrainStopTime" : true,
      "latestStopTimeMinutesFromMidnight" : 4,
      "id" : "id",
      "constrainEarliestStopTime" : true,
      "exactStartTimeMinutesFromMidnight" : 6,
      "dayOffRule" : "NextDayOff",
      "startIncrementMinutes" : 9,
      "constrainContiguousWorkTime" : true,
      "constrainLatestStopTime" : true,
      "latestStartTimeMinutesFromMidnight" : 1,
      "earliestStopTimeMinutesFromMidnight" : 5,
      "activities" : [ {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      }, {
        "startTimeIncrementMinutes" : 6,
        "validationId" : "validationId",
        "lengthMinutes" : 3,
        "earliestStartTimeMinutes" : 6,
        "description" : "description",
        "latestStartTimeMinutes" : 1,
        "countsAsPaidTime" : true,
        "delete" : true,
        "activityCodeId" : "activityCodeId",
        "minimumLengthFromShiftStartMinutes" : 6,
        "startTimeIsRelativeToShiftStart" : true,
        "minimumLengthFromShiftEndMinutes" : 5,
        "exactStartTimeMinutes" : 2,
        "countsAsContiguousWorkTime" : true,
        "id" : "id",
        "flexibleStartTime" : true
      } ],
      "maximumPaidTimeMinutes" : 8,
      "name" : "name",
      "days" : "{}",
      "minimumContiguousWorkTimeMinutes" : 9,
      "exactPaidTimeMinutes" : 9,
      "earliestStartTimeMinutesFromMidnight" : 7,
      "flexibleStartTime" : true,
      "minimumPaidTimeMinutes" : 6
    } ],
    "weeklyMinimumPaidMinutes" : 6,
    "id" : "id",
    "paidTimeGranularityMinutes" : 5,
    "maximumConsecutiveWorkingWeekends" : 9,
    "weeklyExactPaidMinutes" : 0,
    "shiftStartVarianceType" : "ShiftStart",
    "maximumDays" : 2,
    "minimumWorkingDaysPerWeek" : 3,
    "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
    "selfUri" : "https://openapi-generator.tech",
    "minimumTimeBetweenShiftsMinutes" : 5,
    "constrainPaidTimeGranularity" : true,
    "maximumPaidMinutesPerPlanningPeriod" : 1,
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id",
      "delete" : true
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id",
      "delete" : true
    } ],
    "weeklyMaximumPaidMinutes" : 1,
    "name" : "name",
    "minimumDaysOffPerPlanningPeriod" : 7,
    "constrainMaximumConsecutiveWorkingWeekends" : true,
    "agentCount" : 6
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter expand: (query) Include to access additional data on the work plans (optional)

     - returns: RequestBuilder<WorkPlanListResponse> 
     */
    open class func getWorkforcemanagementManagementunitWorkplansWithRequestBuilder(managementUnitId: String, expand: [String]? = nil) -> RequestBuilder<WorkPlanListResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<WorkPlanListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum Expand_getWorkforcemanagementManagementunits: String { 
        case details = "details"
    }

    
    
    public enum Feature_getWorkforcemanagementManagementunits: String { 
        case agentSchedule = "AgentSchedule"
        case agentTimeOffRequest = "AgentTimeOffRequest"
        case alternativeShift = "AlternativeShift"
        case coaching = "Coaching"
        case learning = "Learning"
        case activityCodes = "ActivityCodes"
        case activityPlans = "ActivityPlans"
        case agents = "Agents"
        case buActivityCodes = "BuActivityCodes"
        case businessUnits = "BusinessUnits"
        case continuousForecast = "ContinuousForecast"
        case historicalAdherence = "HistoricalAdherence"
        case historicalShrinkage = "HistoricalShrinkage"
        case intradayMonitoring = "IntradayMonitoring"
        case buIntradayMonitoring = "BuIntradayMonitoring"
        case managementUnits = "ManagementUnits"
        case realTimeAdherence = "RealTimeAdherence"
        case schedules = "Schedules"
        case buSchedules = "BuSchedules"
        case serviceGoalTemplates = "ServiceGoalTemplates"
        case planningGroups = "PlanningGroups"
        case shiftTrading = "ShiftTrading"
        case shortTermForecasts = "ShortTermForecasts"
        case buShortTermForecasts = "BuShortTermForecasts"
        case staffingGroups = "StaffingGroups"
        case timeOffPlans = "TimeOffPlans"
        case timeOffRequests = "TimeOffRequests"
        case timeOffLimits = "TimeOffLimits"
        case workPlanBids = "WorkPlanBids"
        case workPlanRotations = "WorkPlanRotations"
        case workPlans = "WorkPlans"
    }

    
    
    /**
     Get management units
     
     - parameter pageSize: (query) Deprecated, paging is not supported (optional)
     - parameter pageNumber: (query) Deprecated, paging is not supported (optional)
     - parameter expand: (query) Deprecated, expand settings on the single MU route (optional)
     - parameter feature: (query) If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of management units belonging to the specified division will be returned (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunits(pageSize: Int? = nil, pageNumber: Int? = nil, expand: Expand_getWorkforcemanagementManagementunits? = nil, feature: Feature_getWorkforcemanagementManagementunits? = nil, divisionId: String? = nil, completion: @escaping ((_ data: ManagementUnitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, expand: expand, feature: feature, divisionId: divisionId)
        requestBuilder.execute { (response: Response<ManagementUnitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get management units
     - GET /api/v2/workforcemanagement/managementunits
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 5,
  "pageNumber" : 1,
  "entities" : [ {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  }, {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 6,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter pageSize: (query) Deprecated, paging is not supported (optional)
     - parameter pageNumber: (query) Deprecated, paging is not supported (optional)
     - parameter expand: (query) Deprecated, expand settings on the single MU route (optional)
     - parameter feature: (query) If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)
     - parameter divisionId: (query) If specified, the list of management units belonging to the specified division will be returned (optional)

     - returns: RequestBuilder<ManagementUnitListing> 
     */
    open class func getWorkforcemanagementManagementunitsWithRequestBuilder(pageSize: Int? = nil, pageNumber: Int? = nil, expand: Expand_getWorkforcemanagementManagementunits? = nil, feature: Feature_getWorkforcemanagementManagementunits? = nil, divisionId: String? = nil) -> RequestBuilder<ManagementUnitListing> {        
        let path = "/api/v2/workforcemanagement/managementunits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "pageSize": pageSize?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "expand": expand?.rawValue, 
            "feature": feature?.rawValue, 
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ManagementUnitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get management units across divisions
     
     - parameter divisionId: (query) The divisionIds to filter by. If omitted, will return all divisions (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementManagementunitsDivisionviews(divisionId: [String]? = nil, completion: @escaping ((_ data: ManagementUnitListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementManagementunitsDivisionviewsWithRequestBuilder(divisionId: divisionId)
        requestBuilder.execute { (response: Response<ManagementUnitListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get management units across divisions
     - GET /api/v2/workforcemanagement/managementunits/divisionviews
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "pageCount" : 5,
  "pageNumber" : 1,
  "entities" : [ {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  }, {
    "startDayOfWeek" : "Sunday",
    "division" : "{}",
    "settings" : "{}",
    "metadata" : "{}",
    "businessUnit" : "{}",
    "selfUri" : "https://openapi-generator.tech",
    "name" : "name",
    "timeZone" : "timeZone",
    "modifiedBy" : "{}",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "version" : 0
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "pageSize" : 6,
  "nextUri" : "https://openapi-generator.tech",
  "previousUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter divisionId: (query) The divisionIds to filter by. If omitted, will return all divisions (optional)

     - returns: RequestBuilder<ManagementUnitListing> 
     */
    open class func getWorkforcemanagementManagementunitsDivisionviewsWithRequestBuilder(divisionId: [String]? = nil) -> RequestBuilder<ManagementUnitListing> {        
        let path = "/api/v2/workforcemanagement/managementunits/divisionviews"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "divisionId": divisionId
        ])

        let requestBuilder: RequestBuilder<ManagementUnitListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Get a list of notifications for the current user
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementNotifications(completion: @escaping ((_ data: NotificationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementNotificationsWithRequestBuilder()
        requestBuilder.execute { (response: Response<NotificationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of notifications for the current user
     - GET /api/v2/workforcemanagement/notifications
     - Notifications are only initially sent if you have the relevant Notify and Edit permissions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "adherenceExplanation" : "{}",
    "markedAsRead" : true,
    "mutableGroupId" : "mutableGroupId",
    "otherNotificationIdsInGroup" : [ "otherNotificationIdsInGroup", "otherNotificationIdsInGroup" ],
    "timeOffRequest" : "{}",
    "id" : "id",
    "shiftTrade" : "{}",
    "type" : "AdherenceExplanation",
    "timestamp" : "2000-01-23T04:56:07.000+00:00",
    "agentNotification" : true
  }, {
    "adherenceExplanation" : "{}",
    "markedAsRead" : true,
    "mutableGroupId" : "mutableGroupId",
    "otherNotificationIdsInGroup" : [ "otherNotificationIdsInGroup", "otherNotificationIdsInGroup" ],
    "timeOffRequest" : "{}",
    "id" : "id",
    "shiftTrade" : "{}",
    "type" : "AdherenceExplanation",
    "timestamp" : "2000-01-23T04:56:07.000+00:00",
    "agentNotification" : true
  } ]
}, statusCode=200}]

     - returns: RequestBuilder<NotificationsResponse> 
     */
    open class func getWorkforcemanagementNotificationsWithRequestBuilder() -> RequestBuilder<NotificationsResponse> {        
        let path = "/api/v2/workforcemanagement/notifications"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<NotificationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get status of the scheduling job
     
     - parameter jobId: (path) The id of the scheduling job 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementSchedulingjob(jobId: String, completion: @escaping ((_ data: SchedulingStatusResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementSchedulingjobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<SchedulingStatusResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get status of the scheduling job
     - GET /api/v2/workforcemanagement/schedulingjobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "schedulingResultUri" : "schedulingResultUri",
  "id" : "id",
  "percentComplete" : 0,
  "status" : "Pending",
  "errorDetails" : [ {
    "description" : "description",
    "internalErrorCode" : "BadJson"
  }, {
    "description" : "description",
    "internalErrorCode" : "BadJson"
  } ]
}, statusCode=200}]
     
     - parameter jobId: (path) The id of the scheduling job 

     - returns: RequestBuilder<SchedulingStatusResponse> 
     */
    open class func getWorkforcemanagementSchedulingjobWithRequestBuilder(jobId: String) -> RequestBuilder<SchedulingStatusResponse> {        
        var path = "/api/v2/workforcemanagement/schedulingjobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SchedulingStatusResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    /**
     Gets all of my shift trades
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementShifttrades(completion: @escaping ((_ data: ShiftTradeListResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementShifttradesWithRequestBuilder()
        requestBuilder.execute { (response: Response<ShiftTradeListResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Gets all of my shift trades
     - GET /api/v2/workforcemanagement/shifttrades
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "metadata" : "{}",
    "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "receivingShiftId" : "receivingShiftId",
    "receivingUser" : "{}",
    "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "oneSided" : true,
    "reviewedBy" : "{}",
    "initiatingUser" : "{}",
    "schedule" : "{}",
    "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
    "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "Unmatched",
    "weekDate" : "2000-01-23",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "initiatingShiftId" : "initiatingShiftId"
  }, {
    "metadata" : "{}",
    "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "receivingShiftId" : "receivingShiftId",
    "receivingUser" : "{}",
    "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "oneSided" : true,
    "reviewedBy" : "{}",
    "initiatingUser" : "{}",
    "schedule" : "{}",
    "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
    "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
    "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
    "expiration" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "state" : "Unmatched",
    "weekDate" : "2000-01-23",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "initiatingShiftId" : "initiatingShiftId"
  } ]
}, statusCode=200}]

     - returns: RequestBuilder<ShiftTradeListResponse> 
     */
    open class func getWorkforcemanagementShifttradesWithRequestBuilder() -> RequestBuilder<ShiftTradeListResponse> {        
        let path = "/api/v2/workforcemanagement/shifttrades"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShiftTradeListResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Request to fetch the status of the historical shrinkage query
     
     - parameter jobId: (path) jobId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementShrinkageJob(jobId: String, completion: @escaping ((_ data: WfmHistoricalShrinkageResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementShrinkageJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<WfmHistoricalShrinkageResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request to fetch the status of the historical shrinkage query
     - GET /api/v2/workforcemanagement/shrinkage/jobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "operationId" : "operationId",
  "state" : "Processing"
}, statusCode=200}]
     
     - parameter jobId: (path) jobId 

     - returns: RequestBuilder<WfmHistoricalShrinkageResponse> 
     */
    open class func getWorkforcemanagementShrinkageJobWithRequestBuilder(jobId: String) -> RequestBuilder<WfmHistoricalShrinkageResponse> {        
        var path = "/api/v2/workforcemanagement/shrinkage/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalShrinkageResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Query the results of time off types job
     
     - parameter jobId: (path) The ID of the job. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementTimeoffbalanceJob(jobId: String, completion: @escaping ((_ data: TimeOffBalanceJobResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementTimeoffbalanceJobWithRequestBuilder(jobId: jobId)
        requestBuilder.execute { (response: Response<TimeOffBalanceJobResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query the results of time off types job
     - GET /api/v2/workforcemanagement/timeoffbalance/jobs/{jobId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  }, {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  } ],
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter jobId: (path) The ID of the job. 

     - returns: RequestBuilder<TimeOffBalanceJobResponse> 
     */
    open class func getWorkforcemanagementTimeoffbalanceJobWithRequestBuilder(jobId: String) -> RequestBuilder<TimeOffBalanceJobResponse> {        
        var path = "/api/v2/workforcemanagement/timeoffbalance/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffBalanceJobResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a time off request for the current user
     
     - parameter timeOffRequestId: (path) The ID of the time off request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementTimeoffrequest(timeOffRequestId: String, completion: @escaping ((_ data: TimeOffRequestResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementTimeoffrequestWithRequestBuilder(timeOffRequestId: timeOffRequestId)
        requestBuilder.execute { (response: Response<TimeOffRequestResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a time off request for the current user
     - GET /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "syncVersion" : 5,
  "metadata" : "{}",
  "notes" : "notes",
  "substatus" : "AdvanceTimeElapsed",
  "selfUri" : "https://openapi-generator.tech",
  "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
  "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
  "payableMinutes" : [ 1, 1 ],
  "submittedDate" : "2000-01-23T04:56:07.000+00:00",
  "reviewedBy" : "{}",
  "activityCodeId" : "activityCodeId",
  "durationMinutes" : [ 6, 6 ],
  "isFullDayRequest" : true,
  "markedAsRead" : true,
  "dailyDurationMinutes" : 0,
  "paid" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "{}",
  "id" : "id",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "user" : "{}",
  "status" : "PENDING"
}, statusCode=200}]
     
     - parameter timeOffRequestId: (path) The ID of the time off request 

     - returns: RequestBuilder<TimeOffRequestResponse> 
     */
    open class func getWorkforcemanagementTimeoffrequestWithRequestBuilder(timeOffRequestId: String) -> RequestBuilder<TimeOffRequestResponse> {        
        var path = "/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}"
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get the daily waitlist positions of a time off request for the current user
     
     - parameter timeOffRequestId: (path) The ID of the time off request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId: String, completion: @escaping ((_ data: WaitlistPositionListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementTimeoffrequestWaitlistpositionsWithRequestBuilder(timeOffRequestId: timeOffRequestId)
        requestBuilder.execute { (response: Response<WaitlistPositionListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get the daily waitlist positions of a time off request for the current user
     - GET /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}/waitlistpositions
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "date" : "2000-01-23",
    "timeOffLimit" : "{}",
    "timeOffRequest" : "{}",
    "waitlistPosition" : 0
  }, {
    "date" : "2000-01-23",
    "timeOffLimit" : "{}",
    "timeOffRequest" : "{}",
    "waitlistPosition" : 0
  } ]
}, statusCode=200}]
     
     - parameter timeOffRequestId: (path) The ID of the time off request 

     - returns: RequestBuilder<WaitlistPositionListing> 
     */
    open class func getWorkforcemanagementTimeoffrequestWaitlistpositionsWithRequestBuilder(timeOffRequestId: String) -> RequestBuilder<WaitlistPositionListing> {        
        var path = "/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}/waitlistpositions"
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WaitlistPositionListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Get a list of time off requests for the current user
     
     - parameter recentlyReviewed: (query) Limit results to requests that have been reviewed within the preceding 30 days (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWorkforcemanagementTimeoffrequests(recentlyReviewed: Bool? = nil, completion: @escaping ((_ data: TimeOffRequestList?,_ error: Error?) -> Void)) {
        let requestBuilder = getWorkforcemanagementTimeoffrequestsWithRequestBuilder(recentlyReviewed: recentlyReviewed)
        requestBuilder.execute { (response: Response<TimeOffRequestList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of time off requests for the current user
     - GET /api/v2/workforcemanagement/timeoffrequests
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "timeOffRequests" : [ {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  }, {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  } ]
}, statusCode=200}]
     
     - parameter recentlyReviewed: (query) Limit results to requests that have been reviewed within the preceding 30 days (optional)

     - returns: RequestBuilder<TimeOffRequestList> 
     */
    open class func getWorkforcemanagementTimeoffrequestsWithRequestBuilder(recentlyReviewed: Bool? = nil) -> RequestBuilder<TimeOffRequestList> {        
        let path = "/api/v2/workforcemanagement/timeoffrequests"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "recentlyReviewed": recentlyReviewed
        ])

        let requestBuilder: RequestBuilder<TimeOffRequestList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    /**
     Update an adherence explanation
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter explanationId: (path) The ID of the explanation to update 
     - parameter body: (body) The request body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementAgentAdherenceExplanation(agentId: String, explanationId: String, body: UpdateAdherenceExplanationStatusRequest, completion: @escaping ((_ data: AdherenceExplanationAsyncResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementAgentAdherenceExplanationWithRequestBuilder(agentId: agentId, explanationId: explanationId, body: body)
        requestBuilder.execute { (response: Response<AdherenceExplanationAsyncResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an adherence explanation
     - PATCH /api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "job" : "{}"
}, statusCode=200}]
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter explanationId: (path) The ID of the explanation to update 
     - parameter body: (body) The request body 

     - returns: RequestBuilder<AdherenceExplanationAsyncResponse> 
     */
    open class func patchWorkforcemanagementAgentAdherenceExplanationWithRequestBuilder(agentId: String, explanationId: String, body: UpdateAdherenceExplanationStatusRequest) -> RequestBuilder<AdherenceExplanationAsyncResponse> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let explanationIdPreEscape = "\(explanationId)"
        let explanationIdPostEscape = explanationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{explanationId}", with: explanationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationAsyncResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update business unit
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementBusinessunit(businessUnitId: String, body: UpdateBusinessUnitRequest? = nil, completion: @escaping ((_ data: BusinessUnitResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: businessUnitId, body: body)
        requestBuilder.execute { (response: Response<BusinessUnitResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update business unit
     - PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "settings" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BusinessUnitResponse> 
     */
    open class func patchWorkforcemanagementBusinessunitWithRequestBuilder(businessUnitId: String, body: UpdateBusinessUnitRequest? = nil) -> RequestBuilder<BusinessUnitResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BusinessUnitResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Update an activity code
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementBusinessunitActivitycode(businessUnitId: String, activityCodeId: String, body: UpdateActivityCodeRequest? = nil, completion: @escaping ((_ data: BusinessUnitActivityCode?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: businessUnitId, activityCodeId: activityCodeId, body: body)
        requestBuilder.execute { (response: Response<BusinessUnitActivityCode>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update an activity code
     - PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "defaultCode" : true,
  "metadata" : "{}",
  "plannedShrinkage" : true,
  "selfUri" : "https://openapi-generator.tech",
  "active" : true,
  "countsAsPaidTime" : true,
  "agentTimeOffSelectable" : true,
  "interruptible" : true,
  "lengthInMinutes" : 0,
  "secondaryPresences" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "countsAsWorkTime" : true,
  "name" : "name",
  "id" : "id",
  "category" : "OnQueueWork",
  "countsTowardShrinkage" : true
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter activityCodeId: (path) The ID of the activity code to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BusinessUnitActivityCode> 
     */
    open class func patchWorkforcemanagementBusinessunitActivitycodeWithRequestBuilder(businessUnitId: String, activityCodeId: String, body: UpdateActivityCodeRequest? = nil) -> RequestBuilder<BusinessUnitActivityCode> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let activityCodeIdPreEscape = "\(activityCodeId)"
        let activityCodeIdPostEscape = activityCodeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{activityCodeId}", with: activityCodeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BusinessUnitActivityCode>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Updates the planning group
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId: String, planningGroupId: String, body: UpdatePlanningGroupRequest? = nil, completion: @escaping ((_ data: PlanningGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: businessUnitId, planningGroupId: planningGroupId, body: body)
        requestBuilder.execute { (response: Response<PlanningGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates the planning group
     - PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "serviceGoalTemplate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "routePaths" : [ {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  }, {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter planningGroupId: (path) The ID of a planning group to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<PlanningGroup> 
     */
    open class func patchWorkforcemanagementBusinessunitPlanninggroupWithRequestBuilder(businessUnitId: String, planningGroupId: String, body: UpdatePlanningGroupRequest? = nil) -> RequestBuilder<PlanningGroup> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let planningGroupIdPreEscape = "\(planningGroupId)"
        let planningGroupIdPostEscape = planningGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{planningGroupId}", with: planningGroupIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PlanningGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Mark a schedule run as applied
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId: String, runId: String, body: PatchBuScheduleRunRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: businessUnitId, runId: runId, body: body)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Mark a schedule run as applied
     - PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter runId: (path) The ID of the schedule run 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func patchWorkforcemanagementBusinessunitSchedulingRunWithRequestBuilder(businessUnitId: String, runId: String, body: PatchBuScheduleRunRequest? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let runIdPreEscape = "\(runId)"
        let runIdPostEscape = runIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{runId}", with: runIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Updates a service goal template
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of a service goal template to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId: String, serviceGoalTemplateId: String, body: UpdateServiceGoalTemplate? = nil, completion: @escaping ((_ data: ServiceGoalTemplate?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: businessUnitId, serviceGoalTemplateId: serviceGoalTemplateId, body: body)
        requestBuilder.execute { (response: Response<ServiceGoalTemplate>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a service goal template
     - PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "abandonRate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "averageSpeedOfAnswer" : "{}",
  "id" : "id",
  "serviceLevel" : "{}",
  "impactOverride" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter serviceGoalTemplateId: (path) The ID of a service goal template to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<ServiceGoalTemplate> 
     */
    open class func patchWorkforcemanagementBusinessunitServicegoaltemplateWithRequestBuilder(businessUnitId: String, serviceGoalTemplateId: String, body: UpdateServiceGoalTemplate? = nil) -> RequestBuilder<ServiceGoalTemplate> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let serviceGoalTemplateIdPreEscape = "\(serviceGoalTemplateId)"
        let serviceGoalTemplateIdPostEscape = serviceGoalTemplateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceGoalTemplateId}", with: serviceGoalTemplateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ServiceGoalTemplate>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update the requested management unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunit(managementUnitId: String, body: UpdateManagementUnitRequest? = nil, completion: @escaping ((_ data: ManagementUnit?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<ManagementUnit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update the requested management unit
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "startDayOfWeek" : "Sunday",
  "division" : "{}",
  "settings" : "{}",
  "metadata" : "{}",
  "businessUnit" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeZone" : "timeZone",
  "modifiedBy" : "{}",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "version" : 0
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<ManagementUnit> 
     */
    open class func patchWorkforcemanagementManagementunitWithRequestBuilder(managementUnitId: String, body: UpdateManagementUnitRequest? = nil) -> RequestBuilder<ManagementUnit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ManagementUnit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update agent configurations
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitAgents(managementUnitId: String, body: UpdateMuAgentsRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitAgentsWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Update agent configurations
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/agents
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func patchWorkforcemanagementManagementunitAgentsWithRequestBuilder(managementUnitId: String, body: UpdateMuAgentsRequest? = nil) -> RequestBuilder<Void> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Updates a time off limit object.
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The id of time off limit object to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitTimeofflimit(managementUnitId: String, timeOffLimitId: String, body: UpdateTimeOffLimitRequest? = nil, completion: @escaping ((_ data: TimeOffLimit?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: managementUnitId, timeOffLimitId: timeOffLimitId, body: body)
        requestBuilder.execute { (response: Response<TimeOffLimit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a time off limit object.
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}
     - Updates time off limit object properties, but not daily values.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "granularity" : "Daily",
  "defaultLimitMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The id of time off limit object to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffLimit> 
     */
    open class func patchWorkforcemanagementManagementunitTimeofflimitWithRequestBuilder(managementUnitId: String, timeOffLimitId: String, body: UpdateTimeOffLimitRequest? = nil) -> RequestBuilder<TimeOffLimit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffLimitIdPreEscape = "\(timeOffLimitId)"
        let timeOffLimitIdPostEscape = timeOffLimitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffLimitId}", with: timeOffLimitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffLimit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Updates a time off plan
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitTimeoffplan(managementUnitId: String, timeOffPlanId: String, body: UpdateTimeOffPlanRequest? = nil, completion: @escaping ((_ data: TimeOffPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: managementUnitId, timeOffPlanId: timeOffPlanId, body: body)
        requestBuilder.execute { (response: Response<TimeOffPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a time off plan
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "activityCodeIds" : [ "activityCodeIds", "activityCodeIds" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeOffLimits" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "active" : true,
  "id" : "id",
  "hrisTimeOffType" : "{}",
  "autoApprovalRule" : "Never",
  "daysBeforeStartToExpireFromWaitlist" : 0
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter timeOffPlanId: (path) The ID of the time off plan to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffPlan> 
     */
    open class func patchWorkforcemanagementManagementunitTimeoffplanWithRequestBuilder(managementUnitId: String, timeOffPlanId: String, body: UpdateTimeOffPlanRequest? = nil) -> RequestBuilder<TimeOffPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffPlanIdPreEscape = "\(timeOffPlanId)"
        let timeOffPlanIdPostEscape = timeOffPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffPlanId}", with: timeOffPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    
    /**
     Set integration status for a time off request.
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffRequestId: (path) The ID of the time off request. 
     - parameter userId: (path) The ID of user to whom the time off request belongs. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus(managementUnitId: String, timeOffRequestId: String, userId: String, body: SetTimeOffIntegrationStatusRequest? = nil, completion: @escaping ((_ data: UserTimeOffIntegrationStatusResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatusWithRequestBuilder(managementUnitId: managementUnitId, timeOffRequestId: timeOffRequestId, userId: userId, body: body)
        requestBuilder.execute { (response: Response<UserTimeOffIntegrationStatusResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Set integration status for a time off request.
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/{timeOffRequestId}/users/{userId}/integrationstatus
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "timeOffRequest" : "{}",
  "integrationStatus" : "Processing",
  "user" : "{}"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffRequestId: (path) The ID of the time off request. 
     - parameter userId: (path) The ID of user to whom the time off request belongs. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<UserTimeOffIntegrationStatusResponse> 
     */
    open class func patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatusWithRequestBuilder(managementUnitId: String, timeOffRequestId: String, userId: String, body: SetTimeOffIntegrationStatusRequest? = nil) -> RequestBuilder<UserTimeOffIntegrationStatusResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/{timeOffRequestId}/users/{userId}/integrationstatus"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserTimeOffIntegrationStatusResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    
    /**
     Update a time off request
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The id of the user the requested time off request belongs to 
     - parameter timeOffRequestId: (path) The id of the time off request to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId: String, userId: String, timeOffRequestId: String, body: AdminTimeOffRequestPatch? = nil, completion: @escaping ((_ data: TimeOffRequestResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitUserTimeoffrequestWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, timeOffRequestId: timeOffRequestId, body: body)
        requestBuilder.execute { (response: Response<TimeOffRequestResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a time off request
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "syncVersion" : 5,
  "metadata" : "{}",
  "notes" : "notes",
  "substatus" : "AdvanceTimeElapsed",
  "selfUri" : "https://openapi-generator.tech",
  "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
  "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
  "payableMinutes" : [ 1, 1 ],
  "submittedDate" : "2000-01-23T04:56:07.000+00:00",
  "reviewedBy" : "{}",
  "activityCodeId" : "activityCodeId",
  "durationMinutes" : [ 6, 6 ],
  "isFullDayRequest" : true,
  "markedAsRead" : true,
  "dailyDurationMinutes" : 0,
  "paid" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "{}",
  "id" : "id",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "user" : "{}",
  "status" : "PENDING"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter userId: (path) The id of the user the requested time off request belongs to 
     - parameter timeOffRequestId: (path) The id of the time off request to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffRequestResponse> 
     */
    open class func patchWorkforcemanagementManagementunitUserTimeoffrequestWithRequestBuilder(managementUnitId: String, userId: String, timeOffRequestId: String, body: AdminTimeOffRequestPatch? = nil) -> RequestBuilder<TimeOffRequestResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    
    /**
     Updates a shift trade. This route can only be called by the initiating agent
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter tradeId: (path) The ID of the shift trade to update 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId: String, weekDateId: Date, tradeId: String, body: PatchShiftTradeRequest, completion: @escaping ((_ data: ShiftTradeResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitWeekShifttradeWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, tradeId: tradeId, body: body)
        requestBuilder.execute { (response: Response<ShiftTradeResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates a shift trade. This route can only be called by the initiating agent
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
  "receivingShiftId" : "receivingShiftId",
  "receivingUser" : "{}",
  "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
  "oneSided" : true,
  "reviewedBy" : "{}",
  "initiatingUser" : "{}",
  "schedule" : "{}",
  "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
  "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
  "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
  "expiration" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "Unmatched",
  "weekDate" : "2000-01-23",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "initiatingShiftId" : "initiatingShiftId"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter tradeId: (path) The ID of the shift trade to update 
     - parameter body: (body) body 

     - returns: RequestBuilder<ShiftTradeResponse> 
     */
    open class func patchWorkforcemanagementManagementunitWeekShifttradeWithRequestBuilder(managementUnitId: String, weekDateId: Date, tradeId: String, body: PatchShiftTradeRequest) -> RequestBuilder<ShiftTradeResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let tradeIdPreEscape = "\(tradeId)"
        let tradeIdPostEscape = tradeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tradeId}", with: tradeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShiftTradeResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    public enum ValidationMode_patchWorkforcemanagementManagementunitWorkplan: String { 
        case ignore = "Ignore"
    }

    
    
    /**
     Update a work plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to update 
     - parameter validationMode: (query) Allows to update work plan even if validation result is invalid (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitWorkplan(managementUnitId: String, workPlanId: String, validationMode: ValidationMode_patchWorkforcemanagementManagementunitWorkplan? = nil, body: WorkPlan? = nil, completion: @escaping ((_ data: WorkPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: managementUnitId, workPlanId: workPlanId, validationMode: validationMode, body: body)
        requestBuilder.execute { (response: Response<WorkPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a work plan
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "maximumDaysOffPerPlanningPeriod" : 1,
  "minimumPaidMinutesPerPlanningPeriod" : 1,
  "optionalDays" : "{}",
  "metadata" : "{}",
  "flexibleWeeklyPaidTime" : true,
  "shiftStartVariances" : "{}",
  "constrainWeeklyPaidTime" : true,
  "enabled" : true,
  "valid" : true,
  "minimumShiftStartDistanceMinutes" : 4,
  "constrainMaximumConsecutiveWorkingDays" : true,
  "maximumConsecutiveWorkingDays" : 2,
  "constrainMinimumTimeBetweenShifts" : true,
  "shifts" : [ {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  }, {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  } ],
  "weeklyMinimumPaidMinutes" : 6,
  "id" : "id",
  "paidTimeGranularityMinutes" : 5,
  "maximumConsecutiveWorkingWeekends" : 9,
  "weeklyExactPaidMinutes" : 0,
  "shiftStartVarianceType" : "ShiftStart",
  "maximumDays" : 2,
  "minimumWorkingDaysPerWeek" : 3,
  "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
  "selfUri" : "https://openapi-generator.tech",
  "minimumTimeBetweenShiftsMinutes" : 5,
  "constrainPaidTimeGranularity" : true,
  "maximumPaidMinutesPerPlanningPeriod" : 1,
  "agents" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  } ],
  "weeklyMaximumPaidMinutes" : 1,
  "name" : "name",
  "minimumDaysOffPerPlanningPeriod" : 7,
  "constrainMaximumConsecutiveWorkingWeekends" : true,
  "agentCount" : 6
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to update 
     - parameter validationMode: (query) Allows to update work plan even if validation result is invalid (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlan> 
     */
    open class func patchWorkforcemanagementManagementunitWorkplanWithRequestBuilder(managementUnitId: String, workPlanId: String, validationMode: ValidationMode_patchWorkforcemanagementManagementunitWorkplan? = nil, body: WorkPlan? = nil) -> RequestBuilder<WorkPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanIdPreEscape = "\(workPlanId)"
        let workPlanIdPostEscape = workPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanId}", with: workPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "validationMode": validationMode?.rawValue
        ])

        let requestBuilder: RequestBuilder<WorkPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    
    /**
     Update a work plan rotation
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to update 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId: String, workPlanRotationId: String, body: UpdateWorkPlanRotationRequest? = nil, completion: @escaping ((_ data: WorkPlanRotationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: managementUnitId, workPlanRotationId: workPlanRotationId, body: body)
        requestBuilder.execute { (response: Response<WorkPlanRotationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a work plan rotation
     - PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "dateRange" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "pattern" : "{}",
  "id" : "id",
  "agentCount" : 0,
  "enabled" : true,
  "agents" : [ {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  }, {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to update 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlanRotationResponse> 
     */
    open class func patchWorkforcemanagementManagementunitWorkplanrotationWithRequestBuilder(managementUnitId: String, workPlanRotationId: String, body: UpdateWorkPlanRotationRequest? = nil) -> RequestBuilder<WorkPlanRotationResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanRotationIdPreEscape = "\(workPlanRotationId)"
        let workPlanRotationIdPostEscape = workPlanRotationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanRotationId}", with: workPlanRotationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkPlanRotationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    
    /**
     Update a time off request for the current user
     
     - parameter timeOffRequestId: (path) The ID of the time off request 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchWorkforcemanagementTimeoffrequest(timeOffRequestId: String, body: AgentTimeOffRequestPatch? = nil, completion: @escaping ((_ data: TimeOffRequestResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = patchWorkforcemanagementTimeoffrequestWithRequestBuilder(timeOffRequestId: timeOffRequestId, body: body)
        requestBuilder.execute { (response: Response<TimeOffRequestResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a time off request for the current user
     - PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "syncVersion" : 5,
  "metadata" : "{}",
  "notes" : "notes",
  "substatus" : "AdvanceTimeElapsed",
  "selfUri" : "https://openapi-generator.tech",
  "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
  "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
  "payableMinutes" : [ 1, 1 ],
  "submittedDate" : "2000-01-23T04:56:07.000+00:00",
  "reviewedBy" : "{}",
  "activityCodeId" : "activityCodeId",
  "durationMinutes" : [ 6, 6 ],
  "isFullDayRequest" : true,
  "markedAsRead" : true,
  "dailyDurationMinutes" : 0,
  "paid" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "{}",
  "id" : "id",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "user" : "{}",
  "status" : "PENDING"
}, statusCode=200}]
     
     - parameter timeOffRequestId: (path) The ID of the time off request 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffRequestResponse> 
     */
    open class func patchWorkforcemanagementTimeoffrequestWithRequestBuilder(timeOffRequestId: String, body: AgentTimeOffRequestPatch? = nil) -> RequestBuilder<TimeOffRequestResponse> {        
        var path = "/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}"
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", url: url!, body: body)
    }

    
    /**
     Submit an adherence explanation for the current user
     
     - parameter body: (body) The request body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAdherenceExplanations(body: AddAdherenceExplanationAgentRequest, completion: @escaping ((_ data: AdherenceExplanationAsyncResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAdherenceExplanationsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<AdherenceExplanationAsyncResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Submit an adherence explanation for the current user
     - POST /api/v2/workforcemanagement/adherence/explanations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "job" : "{}"
}, statusCode=202}]
     
     - parameter body: (body) The request body 

     - returns: RequestBuilder<AdherenceExplanationAsyncResponse> 
     */
    open class func postWorkforcemanagementAdherenceExplanationsWithRequestBuilder(body: AddAdherenceExplanationAgentRequest) -> RequestBuilder<AdherenceExplanationAsyncResponse> {        
        let path = "/api/v2/workforcemanagement/adherence/explanations"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationAsyncResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Query adherence explanations for the current user
     
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAdherenceExplanationsQuery(body: AgentQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: QueryAdherenceExplanationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAdherenceExplanationsQueryWithRequestBuilder(body: body, forceAsync: forceAsync, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<QueryAdherenceExplanationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query adherence explanations for the current user
     - POST /api/v2/workforcemanagement/adherence/explanations/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "job" : "{}"
}, statusCode=202}]
     
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<QueryAdherenceExplanationsResponse> 
     */
    open class func postWorkforcemanagementAdherenceExplanationsQueryWithRequestBuilder(body: AgentQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<QueryAdherenceExplanationsResponse> {        
        let path = "/api/v2/workforcemanagement/adherence/explanations/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<QueryAdherenceExplanationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Deprecated. Use bulk routes instead (/adherence/historical/bulk)
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAdherenceHistorical(body: WfmHistoricalAdherenceQueryForUsers? = nil, completion: @escaping ((_ data: WfmHistoricalAdherenceResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAdherenceHistoricalWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Deprecated. Use bulk routes instead (/adherence/historical/bulk)
     - POST /api/v2/workforcemanagement/adherence/historical
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "downloadUrl" : "downloadUrl",
  "queryState" : "Processing",
  "id" : "id"
}, statusCode=202}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalAdherenceResponse> 
     */
    open class func postWorkforcemanagementAdherenceHistoricalWithRequestBuilder(body: WfmHistoricalAdherenceQueryForUsers? = nil) -> RequestBuilder<WfmHistoricalAdherenceResponse> {        
        let path = "/api/v2/workforcemanagement/adherence/historical"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Request a historical adherence report in bulk
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAdherenceHistoricalBulk(body: WfmHistoricalAdherenceBulkQuery? = nil, completion: @escaping ((_ data: WfmHistoricalAdherenceBulkResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAdherenceHistoricalBulkWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceBulkResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a historical adherence report in bulk
     - POST /api/v2/workforcemanagement/adherence/historical/bulk
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "job" : "{}"
}, statusCode=202}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalAdherenceBulkResponse> 
     */
    open class func postWorkforcemanagementAdherenceHistoricalBulkWithRequestBuilder(body: WfmHistoricalAdherenceBulkQuery? = nil) -> RequestBuilder<WfmHistoricalAdherenceBulkResponse> {        
        let path = "/api/v2/workforcemanagement/adherence/historical/bulk"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceBulkResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Add an adherence explanation for the requested user
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter body: (body) The request body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgentAdherenceExplanations(agentId: String, body: AddAdherenceExplanationAdminRequest, completion: @escaping ((_ data: AdherenceExplanationAsyncResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentAdherenceExplanationsWithRequestBuilder(agentId: agentId, body: body)
        requestBuilder.execute { (response: Response<AdherenceExplanationAsyncResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add an adherence explanation for the requested user
     - POST /api/v2/workforcemanagement/agents/{agentId}/adherence/explanations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "job" : "{}"
}, statusCode=202}]
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter body: (body) The request body 

     - returns: RequestBuilder<AdherenceExplanationAsyncResponse> 
     */
    open class func postWorkforcemanagementAgentAdherenceExplanationsWithRequestBuilder(agentId: String, body: AddAdherenceExplanationAdminRequest) -> RequestBuilder<AdherenceExplanationAsyncResponse> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AdherenceExplanationAsyncResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Query adherence explanations for the given agent across a specified range
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgentAdherenceExplanationsQuery(agentId: String, body: AgentQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: AgentQueryAdherenceExplanationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentAdherenceExplanationsQueryWithRequestBuilder(agentId: agentId, body: body, forceAsync: forceAsync, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<AgentQueryAdherenceExplanationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query adherence explanations for the given agent across a specified range
     - POST /api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "job" : "{}"
}, statusCode=200}]
     
     - parameter agentId: (path) The ID of the agent to query 
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<AgentQueryAdherenceExplanationsResponse> 
     */
    open class func postWorkforcemanagementAgentAdherenceExplanationsQueryWithRequestBuilder(agentId: String, body: AgentQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<AgentQueryAdherenceExplanationsResponse> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/query"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<AgentQueryAdherenceExplanationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Move agents in and out of management unit
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgents(body: MoveAgentsRequest? = nil, completion: @escaping ((_ data: MoveAgentsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<MoveAgentsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Move agents in and out of management unit
     - POST /api/v2/workforcemanagement/agents
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "requestingUser" : "{}",
  "destinationManagementUnit" : "{}",
  "results" : [ {
    "result" : "AlreadyMoved",
    "user" : "{}"
  }, {
    "result" : "AlreadyMoved",
    "user" : "{}"
  } ]
}, statusCode=202}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<MoveAgentsResponse> 
     */
    open class func postWorkforcemanagementAgentsWithRequestBuilder(body: MoveAgentsRequest? = nil) -> RequestBuilder<MoveAgentsResponse> {        
        let path = "/api/v2/workforcemanagement/agents"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<MoveAgentsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Query integrations for agents
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgentsIntegrationsHrisQuery(body: QueryAgentsIntegrationsRequest? = nil, completion: @escaping ((_ data: AgentsIntegrationsListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentsIntegrationsHrisQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<AgentsIntegrationsListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query integrations for agents
     - POST /api/v2/workforcemanagement/agents/integrations/hris/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "agent" : "{}",
    "userSelected" : true,
    "selectedIntegration" : "{}",
    "associatedIntegrations" : [ {
      "agentExternalId" : "agentExternalId",
      "integration" : "{}",
      "locked" : true
    }, {
      "agentExternalId" : "agentExternalId",
      "integration" : "{}",
      "locked" : true
    } ]
  }, {
    "agent" : "{}",
    "userSelected" : true,
    "selectedIntegration" : "{}",
    "associatedIntegrations" : [ {
      "agentExternalId" : "agentExternalId",
      "integration" : "{}",
      "locked" : true
    }, {
      "agentExternalId" : "agentExternalId",
      "integration" : "{}",
      "locked" : true
    } ]
  } ]
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<AgentsIntegrationsListing> 
     */
    open class func postWorkforcemanagementAgentsIntegrationsHrisQueryWithRequestBuilder(body: QueryAgentsIntegrationsRequest? = nil) -> RequestBuilder<AgentsIntegrationsListing> {        
        let path = "/api/v2/workforcemanagement/agents/integrations/hris/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AgentsIntegrationsListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Get agent possible work shifts for requested time frame
     
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgentsMePossibleworkshifts(body: AgentPossibleWorkShiftsRequest, completion: @escaping ((_ data: AgentPossibleWorkShiftsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentsMePossibleworkshiftsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<AgentPossibleWorkShiftsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get agent possible work shifts for requested time frame
     - POST /api/v2/workforcemanagement/agents/me/possibleworkshifts
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "weekStartDate" : "2000-01-23",
  "pattern" : [ 0, 0 ],
  "timeZone" : "timeZone",
  "schedulerIntervalLengthMinutes" : 7,
  "weeklyPossibleWorkShifts" : [ {
    "dailyPossibleShifts" : [ {
      "intervalScheduleProbabilities" : [ 2, 2 ],
      "dayOfWeek" : "Sunday",
      "maximumPaidTimeMinutes" : 5,
      "required" : true,
      "earliestShiftStartMinutesFromMidnight" : 1,
      "minimumPaidTimeMinutes" : 5
    }, {
      "intervalScheduleProbabilities" : [ 2, 2 ],
      "dayOfWeek" : "Sunday",
      "maximumPaidTimeMinutes" : 5,
      "required" : true,
      "earliestShiftStartMinutesFromMidnight" : 1,
      "minimumPaidTimeMinutes" : 5
    } ],
    "id" : 6
  }, {
    "dailyPossibleShifts" : [ {
      "intervalScheduleProbabilities" : [ 2, 2 ],
      "dayOfWeek" : "Sunday",
      "maximumPaidTimeMinutes" : 5,
      "required" : true,
      "earliestShiftStartMinutesFromMidnight" : 1,
      "minimumPaidTimeMinutes" : 5
    }, {
      "intervalScheduleProbabilities" : [ 2, 2 ],
      "dayOfWeek" : "Sunday",
      "maximumPaidTimeMinutes" : 5,
      "required" : true,
      "earliestShiftStartMinutesFromMidnight" : 1,
      "minimumPaidTimeMinutes" : 5
    } ],
    "id" : 6
  } ]
}, statusCode=200}]
     
     - parameter body: (body) body 

     - returns: RequestBuilder<AgentPossibleWorkShiftsResponse> 
     */
    open class func postWorkforcemanagementAgentsMePossibleworkshiftsWithRequestBuilder(body: AgentPossibleWorkShiftsRequest) -> RequestBuilder<AgentPossibleWorkShiftsResponse> {        
        let path = "/api/v2/workforcemanagement/agents/me/possibleworkshifts"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AgentPossibleWorkShiftsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Get published schedule for the current user
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementAgentschedulesMine(body: BuGetCurrentAgentScheduleRequest? = nil, completion: @escaping ((_ data: BuCurrentAgentScheduleSearchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementAgentschedulesMineWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<BuCurrentAgentScheduleSearchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get published schedule for the current user
     - POST /api/v2/workforcemanagement/agentschedules/mine
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "endDate" : "2000-01-23T04:56:07.000+00:00",
  "agentSchedules" : [ {
    "fullDayTimeOffMarkers" : [ {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    }, {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    } ],
    "shifts" : [ {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    }, {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    } ],
    "user" : "{}"
  }, {
    "fullDayTimeOffMarkers" : [ {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    }, {
      "activityCodeId" : "activityCodeId",
      "timeOffRequestId" : "timeOffRequestId",
      "timeOffRequestSyncVersion" : 7,
      "lengthMinutes" : 5,
      "businessUnitDate" : "2000-01-23",
      "paid" : true,
      "description" : "description",
      "payableMinutes" : 2
    } ],
    "shifts" : [ {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    }, {
      "schedule" : "{}",
      "lengthMinutes" : 0,
      "activities" : [ {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      }, {
        "activityCodeId" : "activityCodeId",
        "externalActivityType" : "ActivityPlan",
        "timeOffRequestId" : "timeOffRequestId",
        "timeOffRequestSyncVersion" : 5,
        "lengthMinutes" : 6,
        "externalActivityId" : "externalActivityId",
        "paid" : true,
        "description" : "description",
        "payableMinutes" : 1,
        "startDate" : "2000-01-23T04:56:07.000+00:00"
      } ],
      "id" : "id",
      "startDate" : "2000-01-23T04:56:07.000+00:00",
      "manuallyEdited" : true
    } ],
    "user" : "{}"
  } ],
  "publishedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "2000-01-23",
    "weekCount" : 9
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "2000-01-23",
    "weekCount" : 9
  } ],
  "updates" : [ {
    "type" : "Added",
    "shiftStartDates" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ]
  }, {
    "type" : "Added",
    "shiftStartDates" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ]
  } ],
  "businessUnitTimeZone" : "businessUnitTimeZone",
  "startDate" : "2000-01-23T04:56:07.000+00:00"
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BuCurrentAgentScheduleSearchResponse> 
     */
    open class func postWorkforcemanagementAgentschedulesMineWithRequestBuilder(body: BuGetCurrentAgentScheduleRequest? = nil) -> RequestBuilder<BuCurrentAgentScheduleSearchResponse> {        
        let path = "/api/v2/workforcemanagement/agentschedules/mine"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuCurrentAgentScheduleSearchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new activity code
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitActivitycodes(businessUnitId: String, body: CreateActivityCodeRequest? = nil, completion: @escaping ((_ data: BusinessUnitActivityCode?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitActivitycodesWithRequestBuilder(businessUnitId: businessUnitId, body: body)
        requestBuilder.execute { (response: Response<BusinessUnitActivityCode>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new activity code
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "defaultCode" : true,
  "metadata" : "{}",
  "plannedShrinkage" : true,
  "selfUri" : "https://openapi-generator.tech",
  "active" : true,
  "countsAsPaidTime" : true,
  "agentTimeOffSelectable" : true,
  "interruptible" : true,
  "lengthInMinutes" : 0,
  "secondaryPresences" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "countsAsWorkTime" : true,
  "name" : "name",
  "id" : "id",
  "category" : "OnQueueWork",
  "countsTowardShrinkage" : true
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit, or &#39;mine&#39; for the business unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BusinessUnitActivityCode> 
     */
    open class func postWorkforcemanagementBusinessunitActivitycodesWithRequestBuilder(businessUnitId: String, body: CreateActivityCodeRequest? = nil) -> RequestBuilder<BusinessUnitActivityCode> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BusinessUnitActivityCode>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Query adherence explanations across an entire business unit for the requested period
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitAdherenceExplanationsQuery(businessUnitId: String, body: BuQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: BuQueryAdherenceExplanationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitAdherenceExplanationsQueryWithRequestBuilder(businessUnitId: businessUnitId, body: body, forceAsync: forceAsync, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<BuQueryAdherenceExplanationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query adherence explanations across an entire business unit for the requested period
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/adherence/explanations/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "job" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter body: (body) The request body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<BuQueryAdherenceExplanationsResponse> 
     */
    open class func postWorkforcemanagementBusinessunitAdherenceExplanationsQueryWithRequestBuilder(businessUnitId: String, body: BuQueryAdherenceExplanationsRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<BuQueryAdherenceExplanationsResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/adherence/explanations/query"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BuQueryAdherenceExplanationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Search published schedules
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId: String, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, body: BuSearchAgentSchedulesRequest? = nil, completion: @escaping ((_ data: BuAsyncAgentSchedulesSearchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitAgentschedulesSearchWithRequestBuilder(businessUnitId: businessUnitId, forceAsync: forceAsync, forceDownloadService: forceDownloadService, body: body)
        requestBuilder.execute { (response: Response<BuAsyncAgentSchedulesSearchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Search published schedules
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/agentschedules/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "operationId" : "operationId",
  "progress" : 0,
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BuAsyncAgentSchedulesSearchResponse> 
     */
    open class func postWorkforcemanagementBusinessunitAgentschedulesSearchWithRequestBuilder(businessUnitId: String, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, body: BuSearchAgentSchedulesRequest? = nil) -> RequestBuilder<BuAsyncAgentSchedulesSearchResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/agentschedules/search"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BuAsyncAgentSchedulesSearchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Get intraday data for the given date for the requested planningGroupIds
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitIntraday(businessUnitId: String, forceAsync: Bool? = nil, body: IntradayPlanningGroupRequest? = nil, completion: @escaping ((_ data: AsyncIntradayResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitIntradayWithRequestBuilder(businessUnitId: businessUnitId, forceAsync: forceAsync, body: body)
        requestBuilder.execute { (response: Response<AsyncIntradayResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get intraday data for the given date for the requested planningGroupIds
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<AsyncIntradayResponse> 
     */
    open class func postWorkforcemanagementBusinessunitIntradayWithRequestBuilder(businessUnitId: String, forceAsync: Bool? = nil, body: IntradayPlanningGroupRequest? = nil) -> RequestBuilder<AsyncIntradayResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync
        ])

        let requestBuilder: RequestBuilder<AsyncIntradayResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Adds a new planning group
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitPlanninggroups(businessUnitId: String, body: CreatePlanningGroupRequest? = nil, completion: @escaping ((_ data: PlanningGroup?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitPlanninggroupsWithRequestBuilder(businessUnitId: businessUnitId, body: body)
        requestBuilder.execute { (response: Response<PlanningGroup>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Adds a new planning group
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "serviceGoalTemplate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "routePaths" : [ {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  }, {
    "skills" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ],
    "mediaType" : "Voice",
    "language" : "{}",
    "queue" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<PlanningGroup> 
     */
    open class func postWorkforcemanagementBusinessunitPlanninggroupsWithRequestBuilder(businessUnitId: String, body: CreatePlanningGroupRequest? = nil) -> RequestBuilder<PlanningGroup> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PlanningGroup>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Adds a new service goal template
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId: String, body: CreateServiceGoalTemplate? = nil, completion: @escaping ((_ data: ServiceGoalTemplate?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitServicegoaltemplatesWithRequestBuilder(businessUnitId: businessUnitId, body: body)
        requestBuilder.execute { (response: Response<ServiceGoalTemplate>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Adds a new service goal template
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "abandonRate" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "averageSpeedOfAnswer" : "{}",
  "id" : "id",
  "serviceLevel" : "{}",
  "impactOverride" : "{}"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<ServiceGoalTemplate> 
     */
    open class func postWorkforcemanagementBusinessunitServicegoaltemplatesWithRequestBuilder(businessUnitId: String, body: CreateServiceGoalTemplate? = nil) -> RequestBuilder<ServiceGoalTemplate> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ServiceGoalTemplate>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    
    
    /**
     Loads agent schedule data from the schedule. Used in combination with the metadata route
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId: String, weekId: Date, scheduleId: String, body: BuQueryAgentSchedulesRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: BuAsyncAgentSchedulesQueryResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQueryWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body, forceAsync: forceAsync, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<BuAsyncAgentSchedulesQueryResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Loads agent schedule data from the schedule. Used in combination with the metadata route
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/agentschedules/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "operationId" : "operationId",
  "progress" : 0,
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<BuAsyncAgentSchedulesQueryResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQueryWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, body: BuQueryAgentSchedulesRequest, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil) -> RequestBuilder<BuAsyncAgentSchedulesQueryResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/agentschedules/query"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BuAsyncAgentSchedulesQueryResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Copy a schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule to copy 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId: String, weekId: Date, scheduleId: String, body: BuCopyScheduleRequest, completion: @escaping ((_ data: BuAsyncScheduleResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekScheduleCopyWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<BuAsyncScheduleResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Copy a schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/copy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule to copy 
     - parameter body: (body) body 

     - returns: RequestBuilder<BuAsyncScheduleResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleCopyWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, body: BuCopyScheduleRequest) -> RequestBuilder<BuAsyncScheduleResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/copy"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAsyncScheduleResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Request a daily recalculation of the performance prediction for the associated schedule
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations(businessUnitId: String, weekId: String, scheduleId: String, body: WfmProcessUploadRequest? = nil, completion: @escaping ((_ data: PerformancePredictionRecalculationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<PerformancePredictionRecalculationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a daily recalculation of the performance prediction for the associated schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrl" : "downloadUrl",
  "operationId" : "operationId",
  "state" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<PerformancePredictionRecalculationResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsWithRequestBuilder(businessUnitId: String, weekId: String, scheduleId: String, body: WfmProcessUploadRequest? = nil) -> RequestBuilder<PerformancePredictionRecalculationResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PerformancePredictionRecalculationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Upload daily activity changes to be able to request a performance prediction recalculation
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl(businessUnitId: String, weekId: String, scheduleId: String, body: UploadUrlRequestBody? = nil, completion: @escaping ((_ data: PerformancePredictionRecalculationUploadResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurlWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<PerformancePredictionRecalculationUploadResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Upload daily activity changes to be able to request a performance prediction recalculation
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/uploadurl
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headers" : {
    "key" : "headers"
  },
  "uploadKey" : "uploadKey",
  "uploadBodySchema" : "{}",
  "url" : "url"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the performance prediction belongs 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format 
     - parameter scheduleId: (path) The ID of the schedule the performance prediction belongs to 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<PerformancePredictionRecalculationUploadResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurlWithRequestBuilder(businessUnitId: String, weekId: String, scheduleId: String, body: UploadUrlRequestBody? = nil) -> RequestBuilder<PerformancePredictionRecalculationUploadResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/uploadurl"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PerformancePredictionRecalculationUploadResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Start a rescheduling run
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId: String, weekId: Date, scheduleId: String, body: BuRescheduleRequest, completion: @escaping ((_ data: BuAsyncScheduleRunResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekScheduleRescheduleWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<BuAsyncScheduleRunResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Start a rescheduling run
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/reschedule
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 

     - returns: RequestBuilder<BuAsyncScheduleRunResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleRescheduleWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, body: BuRescheduleRequest) -> RequestBuilder<BuAsyncScheduleRunResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/reschedule"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAsyncScheduleRunResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Starts processing a schedule update
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId: String, weekId: Date, scheduleId: String, body: ProcessScheduleUpdateUploadRequest, completion: @escaping ((_ data: BuAsyncScheduleResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekScheduleUpdateWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<BuAsyncScheduleResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Starts processing a schedule update
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update
     - Call after uploading the schedule data to the url supplied by the /update/uploadurl route
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 

     - returns: RequestBuilder<BuAsyncScheduleResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleUpdateWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, body: ProcessScheduleUpdateUploadRequest) -> RequestBuilder<BuAsyncScheduleResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAsyncScheduleResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Creates a signed upload URL for updating a schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId: String, weekId: Date, scheduleId: String, body: UploadUrlRequestBody, completion: @escaping ((_ data: UpdateScheduleUploadResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurlWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, scheduleId: scheduleId, body: body)
        requestBuilder.execute { (response: Response<UpdateScheduleUploadResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a signed upload URL for updating a schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update/uploadurl
     - Once the upload is complete, call the /{scheduleId}/update route to start the schedule update process
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headers" : {
    "key" : "headers"
  },
  "uploadKey" : "uploadKey",
  "uploadBodySchema" : "{}",
  "url" : "url"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter scheduleId: (path) The ID of the schedule 
     - parameter body: (body) body 

     - returns: RequestBuilder<UpdateScheduleUploadResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurlWithRequestBuilder(businessUnitId: String, weekId: Date, scheduleId: String, body: UploadUrlRequestBody) -> RequestBuilder<UpdateScheduleUploadResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update/uploadurl"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(scheduleId)"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UpdateScheduleUploadResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Create a blank schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedules(businessUnitId: String, weekId: Date, body: BuCreateBlankScheduleRequest, completion: @escaping ((_ data: BuScheduleMetadata?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulesWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, body: body)
        requestBuilder.execute { (response: Response<BuScheduleMetadata>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a blank schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "managementUnits" : [ {
    "managementUnit" : "{}",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "agentCount" : 6,
    "startDate" : "2000-01-23T04:56:07.000+00:00",
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ]
  }, {
    "managementUnit" : "{}",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "agentCount" : 6,
    "startDate" : "2000-01-23T04:56:07.000+00:00",
    "agents" : [ {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    }, {
      "selfUri" : "https://openapi-generator.tech",
      "id" : "id"
    } ]
  } ],
  "selfUri" : "https://openapi-generator.tech",
  "description" : "description",
  "generationResults" : "{}",
  "id" : "id",
  "published" : true,
  "weekDate" : "2000-01-23",
  "shortTermForecast" : "{}",
  "weekCount" : 0
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<BuScheduleMetadata> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesWithRequestBuilder(businessUnitId: String, weekId: Date, body: BuCreateBlankScheduleRequest) -> RequestBuilder<BuScheduleMetadata> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuScheduleMetadata>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Generate a schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId: String, weekId: Date, body: BuGenerateScheduleRequest, completion: @escaping ((_ data: BuAsyncScheduleRunResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulesGenerateWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, body: body)
        requestBuilder.execute { (response: Response<BuAsyncScheduleRunResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Generate a schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/generate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<BuAsyncScheduleRunResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesGenerateWithRequestBuilder(businessUnitId: String, weekId: Date, body: BuGenerateScheduleRequest) -> RequestBuilder<BuAsyncScheduleRunResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/generate"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BuAsyncScheduleRunResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Starts processing a schedule import
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId: String, weekId: Date, body: WfmProcessUploadRequest, completion: @escaping ((_ data: ScheduleUploadProcessingResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulesImportWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, body: body)
        requestBuilder.execute { (response: Response<ScheduleUploadProcessingResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Starts processing a schedule import
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import
     - Call after uploading the schedule data to the url supplied by the /import/uploadurl route
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body)  

     - returns: RequestBuilder<ScheduleUploadProcessingResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesImportWithRequestBuilder(businessUnitId: String, weekId: Date, body: WfmProcessUploadRequest) -> RequestBuilder<ScheduleUploadProcessingResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ScheduleUploadProcessingResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Creates a signed upload URL for importing a schedule
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId: String, weekId: Date, body: UploadUrlRequestBody, completion: @escaping ((_ data: ImportScheduleUploadResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurlWithRequestBuilder(businessUnitId: businessUnitId, weekId: weekId, body: body)
        requestBuilder.execute { (response: Response<ImportScheduleUploadResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a signed upload URL for importing a schedule
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import/uploadurl
     - Once the upload is complete, call the /import route to start the schedule import process
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headers" : {
    "key" : "headers"
  },
  "uploadKey" : "uploadKey",
  "uploadBodySchema" : "{}",
  "url" : "url"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit 
     - parameter weekId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<ImportScheduleUploadResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurlWithRequestBuilder(businessUnitId: String, weekId: Date, body: UploadUrlRequestBody) -> RequestBuilder<ImportScheduleUploadResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import/uploadurl"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekIdPreEscape = "\(weekId)"
        let weekIdPostEscape = weekIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekId}", with: weekIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ImportScheduleUploadResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    
    /**
     Copy a short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast to copy 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId: String, weekDateId: Date, forecastId: String, body: CopyBuForecastRequest, forceAsync: Bool? = nil, completion: @escaping ((_ data: AsyncForecastOperationResult?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekShorttermforecastCopyWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, forecastId: forecastId, body: body, forceAsync: forceAsync)
        requestBuilder.execute { (response: Response<AsyncForecastOperationResult>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Copy a short term forecast
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/copy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "progress" : 0,
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter forecastId: (path) The ID of the forecast to copy 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)

     - returns: RequestBuilder<AsyncForecastOperationResult> 
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastCopyWithRequestBuilder(businessUnitId: String, weekDateId: Date, forecastId: String, body: CopyBuForecastRequest, forceAsync: Bool? = nil) -> RequestBuilder<AsyncForecastOperationResult> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/copy"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let forecastIdPreEscape = "\(forecastId)"
        let forecastIdPostEscape = forecastIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{forecastId}", with: forecastIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync
        ])

        let requestBuilder: RequestBuilder<AsyncForecastOperationResult>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Generate a short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId: String, weekDateId: Date, body: GenerateBuForecastRequest, forceAsync: Bool? = nil, completion: @escaping ((_ data: AsyncForecastOperationResult?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerateWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, body: body, forceAsync: forceAsync)
        requestBuilder.execute { (response: Response<AsyncForecastOperationResult>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Generate a short term forecast
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/generate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "progress" : 0,
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)

     - returns: RequestBuilder<AsyncForecastOperationResult> 
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerateWithRequestBuilder(businessUnitId: String, weekDateId: Date, body: GenerateBuForecastRequest, forceAsync: Bool? = nil) -> RequestBuilder<AsyncForecastOperationResult> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/generate"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync
        ])

        let requestBuilder: RequestBuilder<AsyncForecastOperationResult>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Starts importing the uploaded short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId: String, weekDateId: Date, body: WfmProcessUploadRequest, completion: @escaping ((_ data: ImportForecastResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekShorttermforecastsImportWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, body: body)
        requestBuilder.execute { (response: Response<ImportForecastResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Starts importing the uploaded short term forecast
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import
     - Call after uploading the forecast data to the url supplied by the /import/uploadurl route
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<ImportForecastResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsImportWithRequestBuilder(businessUnitId: String, weekDateId: Date, body: WfmProcessUploadRequest) -> RequestBuilder<ImportForecastResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ImportForecastResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Creates a signed upload URL for importing a short term forecast
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId: String, weekDateId: Date, body: UploadUrlRequestBody, completion: @escaping ((_ data: ImportForecastUploadResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurlWithRequestBuilder(businessUnitId: businessUnitId, weekDateId: weekDateId, body: body)
        requestBuilder.execute { (response: Response<ImportForecastUploadResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a signed upload URL for importing a short term forecast
     - POST /api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import/uploadurl
     - Once the upload is complete, call the /import route to start the short term forecast import process
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "headers" : {
    "key" : "headers"
  },
  "uploadKey" : "uploadKey",
  "uploadBodySchema" : "{}",
  "url" : "url"
}, statusCode=200}]
     
     - parameter businessUnitId: (path) The ID of the business unit to which the forecast belongs 
     - parameter weekDateId: (path) First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<ImportForecastUploadResponse> 
     */
    open class func postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurlWithRequestBuilder(businessUnitId: String, weekDateId: Date, body: UploadUrlRequestBody) -> RequestBuilder<ImportForecastUploadResponse> {        
        var path = "/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import/uploadurl"
        let businessUnitIdPreEscape = "\(businessUnitId)"
        let businessUnitIdPostEscape = businessUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{businessUnitId}", with: businessUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ImportForecastUploadResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Add a new business unit
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementBusinessunits(body: CreateBusinessUnitRequest? = nil, completion: @escaping ((_ data: BusinessUnitResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementBusinessunitsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<BusinessUnitResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a new business unit
     - POST /api/v2/workforcemanagement/businessunits
     - It may take a minute or two for a new business unit to be available for api operations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "division" : "{}",
  "settings" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id"
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BusinessUnitResponse> 
     */
    open class func postWorkforcemanagementBusinessunitsWithRequestBuilder(body: CreateBusinessUnitRequest? = nil) -> RequestBuilder<BusinessUnitResponse> {        
        let path = "/api/v2/workforcemanagement/businessunits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BusinessUnitResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned
     
     - parameter language: (query) A language tag (which is sometimes referred to as a \&quot;locale identifier\&quot;) to use to localize default activity code names in the ics-formatted calendar (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementCalendarUrlIcs(language: String? = nil, completion: @escaping ((_ data: CalendarUrlResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementCalendarUrlIcsWithRequestBuilder(language: language)
        requestBuilder.execute { (response: Response<CalendarUrlResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned
     - POST /api/v2/workforcemanagement/calendar/url/ics
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "calendarUrl" : "calendarUrl"
}, statusCode=200}]
     
     - parameter language: (query) A language tag (which is sometimes referred to as a \&quot;locale identifier\&quot;) to use to localize default activity code names in the ics-formatted calendar (optional)

     - returns: RequestBuilder<CalendarUrlResponse> 
     */
    open class func postWorkforcemanagementCalendarUrlIcsWithRequestBuilder(language: String? = nil) -> RequestBuilder<CalendarUrlResponse> {        
        let path = "/api/v2/workforcemanagement/calendar/url/ics"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language
        ])

        let requestBuilder: RequestBuilder<CalendarUrlResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    /**
     Delete the entries of the historical data imports in the organization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementHistoricaldataDeletejob(completion: @escaping ((_ data: HistoricalImportDeleteJobResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementHistoricaldataDeletejobWithRequestBuilder()
        requestBuilder.execute { (response: Response<HistoricalImportDeleteJobResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Delete the entries of the historical data imports in the organization
     - POST /api/v2/workforcemanagement/historicaldata/deletejob
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "status" : "InProgress"
}, statusCode=202}]

     - returns: RequestBuilder<HistoricalImportDeleteJobResponse> 
     */
    open class func postWorkforcemanagementHistoricaldataDeletejobWithRequestBuilder() -> RequestBuilder<HistoricalImportDeleteJobResponse> {        
        let path = "/api/v2/workforcemanagement/historicaldata/deletejob"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HistoricalImportDeleteJobResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Trigger validation process for historical import
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementHistoricaldataValidate(body: ValidationServiceRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementHistoricaldataValidateWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Trigger validation process for historical import
     - POST /api/v2/workforcemanagement/historicaldata/validate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postWorkforcemanagementHistoricaldataValidateWithRequestBuilder(body: ValidationServiceRequest? = nil) -> RequestBuilder<Void> {        
        let path = "/api/v2/workforcemanagement/historicaldata/validate"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Get list of time off types configured in integration
     
     - parameter hrisIntegrationId: (path) The ID of the HRIS integration for which time off types are queried. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementIntegrationsHriTimeofftypesJobs(hrisIntegrationId: String, completion: @escaping ((_ data: HrisTimeOffTypesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementIntegrationsHriTimeofftypesJobsWithRequestBuilder(hrisIntegrationId: hrisIntegrationId)
        requestBuilder.execute { (response: Response<HrisTimeOffTypesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get list of time off types configured in integration
     - POST /api/v2/workforcemanagement/integrations/hris/{hrisIntegrationId}/timeofftypes/jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "secondaryId" : "secondaryId",
    "name" : "name",
    "id" : "id"
  }, {
    "secondaryId" : "secondaryId",
    "name" : "name",
    "id" : "id"
  } ],
  "job" : "{}"
}, statusCode=200}]
     
     - parameter hrisIntegrationId: (path) The ID of the HRIS integration for which time off types are queried. 

     - returns: RequestBuilder<HrisTimeOffTypesResponse> 
     */
    open class func postWorkforcemanagementIntegrationsHriTimeofftypesJobsWithRequestBuilder(hrisIntegrationId: String) -> RequestBuilder<HrisTimeOffTypesResponse> {        
        var path = "/api/v2/workforcemanagement/integrations/hris/{hrisIntegrationId}/timeofftypes/jobs"
        let hrisIntegrationIdPreEscape = "\(hrisIntegrationId)"
        let hrisIntegrationIdPostEscape = hrisIntegrationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{hrisIntegrationId}", with: hrisIntegrationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HrisTimeOffTypesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Query published schedules for given given time range for set of users
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId: String, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, body: BuSearchAgentSchedulesRequest? = nil, completion: @escaping ((_ data: BuAsyncAgentSchedulesSearchResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitAgentschedulesSearchWithRequestBuilder(managementUnitId: managementUnitId, forceAsync: forceAsync, forceDownloadService: forceDownloadService, body: body)
        requestBuilder.execute { (response: Response<BuAsyncAgentSchedulesSearchResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query published schedules for given given time range for set of users
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/agentschedules/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "downloadUrl" : "downloadUrl",
  "operationId" : "operationId",
  "progress" : 0,
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<BuAsyncAgentSchedulesSearchResponse> 
     */
    open class func postWorkforcemanagementManagementunitAgentschedulesSearchWithRequestBuilder(managementUnitId: String, forceAsync: Bool? = nil, forceDownloadService: Bool? = nil, body: BuSearchAgentSchedulesRequest? = nil) -> RequestBuilder<BuAsyncAgentSchedulesSearchResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/agentschedules/search"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync, 
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<BuAsyncAgentSchedulesSearchResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Request a historical adherence report
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId: String, body: WfmHistoricalAdherenceQuery? = nil, completion: @escaping ((_ data: WfmHistoricalAdherenceResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitHistoricaladherencequeryWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a historical adherence report
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/historicaladherencequery
     - The maximum supported range for historical adherence queries is 31 days, or 7 days with includeExceptions = true
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "downloadUrl" : "downloadUrl",
  "queryState" : "Processing",
  "id" : "id"
}, statusCode=202}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalAdherenceResponse> 
     */
    open class func postWorkforcemanagementManagementunitHistoricaladherencequeryWithRequestBuilder(managementUnitId: String, body: WfmHistoricalAdherenceQuery? = nil) -> RequestBuilder<WfmHistoricalAdherenceResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/historicaladherencequery"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Move the requested management unit to a new business unit
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitMove(managementUnitId: String, body: MoveManagementUnitRequest? = nil, completion: @escaping ((_ data: MoveManagementUnitResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitMoveWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<MoveManagementUnitResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Move the requested management unit to a new business unit
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/move
     - Returns status 200 if the management unit is already in the requested business unit
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "businessUnit" : "{}",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<MoveManagementUnitResponse> 
     */
    open class func postWorkforcemanagementManagementunitMoveWithRequestBuilder(managementUnitId: String, body: MoveManagementUnitRequest? = nil) -> RequestBuilder<MoveManagementUnitResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/move"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<MoveManagementUnitResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Query published schedules for given given time range for set of users
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitSchedulesSearch(managementUnitId: String, body: UserListScheduleRequestBody? = nil, completion: @escaping ((_ data: UserScheduleContainer?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitSchedulesSearchWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<UserScheduleContainer>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query published schedules for given given time range for set of users
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/schedules/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "managementUnitTimeZone" : "managementUnitTimeZone",
  "publishedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "weekDate"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "weekDate"
  } ],
  "userSchedules" : {
    "key" : {
      "fullDayTimeOffMarkers" : [ {
        "activityCodeId" : "activityCodeId",
        "isPaid" : true,
        "lengthInMinutes" : 1,
        "description" : "description",
        "managementUnitDate" : "managementUnitDate",
        "delete" : true
      }, {
        "activityCodeId" : "activityCodeId",
        "isPaid" : true,
        "lengthInMinutes" : 1,
        "description" : "description",
        "managementUnitDate" : "managementUnitDate",
        "delete" : true
      } ],
      "metadata" : "{}",
      "workPlanId" : "workPlanId",
      "shifts" : [ {
        "lengthInMinutes" : 0,
        "activities" : [ {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        }, {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        } ],
        "weekSchedule" : "{}",
        "id" : "id",
        "delete" : true,
        "startDate" : "2000-01-23T04:56:07.000+00:00",
        "manuallyEdited" : true
      }, {
        "lengthInMinutes" : 0,
        "activities" : [ {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        }, {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        } ],
        "weekSchedule" : "{}",
        "id" : "id",
        "delete" : true,
        "startDate" : "2000-01-23T04:56:07.000+00:00",
        "manuallyEdited" : true
      } ],
      "delete" : true
    }
  }
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<UserScheduleContainer> 
     */
    open class func postWorkforcemanagementManagementunitSchedulesSearchWithRequestBuilder(managementUnitId: String, body: UserListScheduleRequestBody? = nil) -> RequestBuilder<UserScheduleContainer> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/schedules/search"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserScheduleContainer>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Request a historical shrinkage report
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitShrinkageJobs(managementUnitId: String, body: WfmHistoricalShrinkageRequest? = nil, completion: @escaping ((_ data: WfmHistoricalShrinkageResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitShrinkageJobsWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalShrinkageResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a historical shrinkage report
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/shrinkage/jobs
     - The maximum supported range for historical shrinkage queries is up to 32 days. Historical Shrinkage for a given date range can be queried in two modes - granular and aggregated. To see granular shrinkage information, provide granularity in the request body. 
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "operationId" : "operationId",
  "state" : "Processing"
}, statusCode=202}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalShrinkageResponse> 
     */
    open class func postWorkforcemanagementManagementunitShrinkageJobsWithRequestBuilder(managementUnitId: String, body: WfmHistoricalShrinkageRequest? = nil) -> RequestBuilder<WfmHistoricalShrinkageResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/shrinkage/jobs"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalShrinkageResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Creates a new time off limit object under management unit.
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeofflimits(managementUnitId: String, body: CreateTimeOffLimitRequest? = nil, completion: @escaping ((_ data: TimeOffLimit?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeofflimitsWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<TimeOffLimit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new time off limit object under management unit.
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits
     - Only one limit object is allowed under management unit, so an attempt to create second object will fail.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "granularity" : "Daily",
  "defaultLimitMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffLimit> 
     */
    open class func postWorkforcemanagementManagementunitTimeofflimitsWithRequestBuilder(managementUnitId: String, body: CreateTimeOffLimitRequest? = nil) -> RequestBuilder<TimeOffLimit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffLimit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Retrieves time off limit related values based on a given set of filters.
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId: String, body: QueryTimeOffLimitValuesRequest? = nil, completion: @escaping ((_ data: QueryTimeOffLimitValuesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeofflimitsValuesQueryWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<QueryTimeOffLimitValuesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves time off limit related values based on a given set of filters.
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/values/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "values" : [ {
    "allocatedMinutesPerInterval" : [ 6, 6 ],
    "timeOffLimit" : "{}",
    "waitlistedMinutesPerInterval" : [ 1, 1 ],
    "metadata" : "{}",
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 5, 5 ],
    "startDate" : "2000-01-23",
    "limitMinutesPerInterval" : [ 0, 0 ]
  }, {
    "allocatedMinutesPerInterval" : [ 6, 6 ],
    "timeOffLimit" : "{}",
    "waitlistedMinutesPerInterval" : [ 1, 1 ],
    "metadata" : "{}",
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 5, 5 ],
    "startDate" : "2000-01-23",
    "limitMinutesPerInterval" : [ 0, 0 ]
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<QueryTimeOffLimitValuesResponse> 
     */
    open class func postWorkforcemanagementManagementunitTimeofflimitsValuesQueryWithRequestBuilder(managementUnitId: String, body: QueryTimeOffLimitValuesRequest? = nil) -> RequestBuilder<QueryTimeOffLimitValuesResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/values/query"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<QueryTimeOffLimitValuesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Creates a new time off plan
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeoffplans(managementUnitId: String, body: CreateTimeOffPlanRequest? = nil, completion: @escaping ((_ data: TimeOffPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeoffplansWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<TimeOffPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new time off plan
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "activityCodeIds" : [ "activityCodeIds", "activityCodeIds" ],
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeOffLimits" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id"
  } ],
  "active" : true,
  "id" : "id",
  "hrisTimeOffType" : "{}",
  "autoApprovalRule" : "Never",
  "daysBeforeStartToExpireFromWaitlist" : 0
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffPlan> 
     */
    open class func postWorkforcemanagementManagementunitTimeoffplansWithRequestBuilder(managementUnitId: String, body: CreateTimeOffPlanRequest? = nil) -> RequestBuilder<TimeOffPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new time off request
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequests(managementUnitId: String, body: CreateAdminTimeOffRequest? = nil, completion: @escaping ((_ data: TimeOffRequestList?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeoffrequestsWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<TimeOffRequestList>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new time off request
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "id" : "id",
  "timeOffRequests" : [ {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  }, {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
    "modifiedBy" : "{}",
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffRequestList> 
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsWithRequestBuilder(managementUnitId: String, body: CreateAdminTimeOffRequest? = nil) -> RequestBuilder<TimeOffRequestList> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestList>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Retrieves integration statuses for a list of time off requests
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery(managementUnitId: String, body: QueryTimeOffIntegrationStatusRequest? = nil, completion: @escaping ((_ data: UserTimeOffIntegrationStatusResponseListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQueryWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<UserTimeOffIntegrationStatusResponseListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves integration statuses for a list of time off requests
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/integrationstatus/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "timeOffRequest" : "{}",
    "integrationStatus" : "Processing",
    "user" : "{}"
  }, {
    "timeOffRequest" : "{}",
    "integrationStatus" : "Processing",
    "user" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<UserTimeOffIntegrationStatusResponseListing> 
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQueryWithRequestBuilder(managementUnitId: String, body: QueryTimeOffIntegrationStatusRequest? = nil) -> RequestBuilder<UserTimeOffIntegrationStatusResponseListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/integrationstatus/query"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserTimeOffIntegrationStatusResponseListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Fetches time off requests matching the conditions specified in the request body
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId: String, forceDownloadService: Bool? = nil, body: TimeOffRequestQueryBody? = nil, completion: @escaping ((_ data: TimeOffRequestListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeoffrequestsQueryWithRequestBuilder(managementUnitId: managementUnitId, forceDownloadService: forceDownloadService, body: body)
        requestBuilder.execute { (response: Response<TimeOffRequestListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Fetches time off requests matching the conditions specified in the request body
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/query
     - Request body requires one of the following: User ID is specified, statuses == [Pending] or date range to be specified and less than or equal to 33 days.  All other fields are filters
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  }, {
    "submittedBy" : "{}",
    "syncVersion" : 5,
    "metadata" : "{}",
    "notes" : "notes",
    "substatus" : "AdvanceTimeElapsed",
    "selfUri" : "https://openapi-generator.tech",
    "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
    "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
    "payableMinutes" : [ 1, 1 ],
    "submittedDate" : "2000-01-23T04:56:07.000+00:00",
    "reviewedBy" : "{}",
    "activityCodeId" : "activityCodeId",
    "durationMinutes" : [ 6, 6 ],
    "isFullDayRequest" : true,
    "markedAsRead" : true,
    "dailyDurationMinutes" : 0,
    "paid" : true,
    "id" : "id",
    "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
    "user" : "{}",
    "status" : "PENDING"
  } ],
  "downloadUrl" : "downloadUrl"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffRequestListing> 
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsQueryWithRequestBuilder(managementUnitId: String, forceDownloadService: Bool? = nil, body: TimeOffRequestQueryBody? = nil) -> RequestBuilder<TimeOffRequestListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/query"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<TimeOffRequestListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Retrieves daily waitlist position for a list of time off requests
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId: String, body: QueryWaitlistPositionsRequest? = nil, completion: @escaping ((_ data: WaitlistPositionListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQueryWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<WaitlistPositionListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves daily waitlist position for a list of time off requests
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/waitlistpositions/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "date" : "2000-01-23",
    "timeOffLimit" : "{}",
    "timeOffRequest" : "{}",
    "waitlistPosition" : 0
  }, {
    "date" : "2000-01-23",
    "timeOffLimit" : "{}",
    "timeOffRequest" : "{}",
    "waitlistPosition" : 0
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WaitlistPositionListing> 
     */
    open class func postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQueryWithRequestBuilder(managementUnitId: String, body: QueryWaitlistPositionsRequest? = nil) -> RequestBuilder<WaitlistPositionListing> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/waitlistpositions/query"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WaitlistPositionListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Query time off balances for a given user for specified activity code and dates
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter userId: (path) The ID of the user 
     - parameter body: (body) The request body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId: String, userId: String, body: TimeOffBalanceRequest, completion: @escaping ((_ data: TimeOffBalancesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitUserTimeoffbalanceJobsWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, body: body)
        requestBuilder.execute { (response: Response<TimeOffBalancesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query time off balances for a given user for specified activity code and dates
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffbalance/jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  }, {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  } ],
  "job" : "{}"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter userId: (path) The ID of the user 
     - parameter body: (body) The request body 

     - returns: RequestBuilder<TimeOffBalancesResponse> 
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffbalanceJobsWithRequestBuilder(managementUnitId: String, userId: String, body: TimeOffBalanceRequest) -> RequestBuilder<TimeOffBalancesResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffbalance/jobs"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffBalancesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Query time off balances for dates spanned by a given time off request
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter userId: (path) The userId to whom the time off request applies. 
     - parameter timeOffRequestId: (path) The time off request id. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId: String, userId: String, timeOffRequestId: String, completion: @escaping ((_ data: TimeOffBalancesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobsWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, timeOffRequestId: timeOffRequestId)
        requestBuilder.execute { (response: Response<TimeOffBalancesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query time off balances for dates spanned by a given time off request
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeoffbalance/jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  }, {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  } ],
  "job" : "{}"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter userId: (path) The userId to whom the time off request applies. 
     - parameter timeOffRequestId: (path) The time off request id. 

     - returns: RequestBuilder<TimeOffBalancesResponse> 
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobsWithRequestBuilder(managementUnitId: String, userId: String, timeOffRequestId: String) -> RequestBuilder<TimeOffBalancesResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeoffbalance/jobs"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let timeOffRequestIdPreEscape = "\(timeOffRequestId)"
        let timeOffRequestIdPostEscape = timeOffRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffRequestId}", with: timeOffRequestIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffBalancesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Estimates available time off for an agent
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter userId: (path) The id of the user for whom the time off request estimate is requested 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffrequestsEstimate(managementUnitId: String, userId: String, body: EstimateAvailableTimeOffRequest? = nil, completion: @escaping ((_ data: EstimateAvailableTimeOffResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitUserTimeoffrequestsEstimateWithRequestBuilder(managementUnitId: managementUnitId, userId: userId, body: body)
        requestBuilder.execute { (response: Response<EstimateAvailableTimeOffResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Estimates available time off for an agent
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/estimate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "activityCodeId" : "activityCodeId",
  "fullDayDates" : [ {
    "date" : "2000-01-23",
    "durationMinutes" : 0,
    "flexible" : true,
    "payableMinutes" : 6
  }, {
    "date" : "2000-01-23",
    "durationMinutes" : 0,
    "flexible" : true,
    "payableMinutes" : 6
  } ],
  "partialDayDates" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "durationMinutes" : 1,
    "flexible" : true,
    "payableMinutes" : 5
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "durationMinutes" : 1,
    "flexible" : true,
    "payableMinutes" : 5
  } ],
  "paid" : true,
  "user" : "{}"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit 
     - parameter userId: (path) The id of the user for whom the time off request estimate is requested 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<EstimateAvailableTimeOffResponse> 
     */
    open class func postWorkforcemanagementManagementunitUserTimeoffrequestsEstimateWithRequestBuilder(managementUnitId: String, userId: String, body: EstimateAvailableTimeOffRequest? = nil) -> RequestBuilder<EstimateAvailableTimeOffResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/estimate"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EstimateAvailableTimeOffResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Matches a shift trade. This route can only be called by the receiving agent
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter tradeId: (path) The ID of the shift trade to update 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId: String, weekDateId: Date, tradeId: String, body: MatchShiftTradeRequest, completion: @escaping ((_ data: MatchShiftTradeResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWeekShifttradeMatchWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, tradeId: tradeId, body: body)
        requestBuilder.execute { (response: Response<MatchShiftTradeResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Matches a shift trade. This route can only be called by the receiving agent
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}/match
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "trade" : "{}",
  "violations" : [ {
    "type" : "AgentCapabilityMismatch",
    "params" : {
      "key" : "params"
    }
  }, {
    "type" : "AgentCapabilityMismatch",
    "params" : {
      "key" : "params"
    }
  } ],
  "adminReviewViolations" : [ {
    "type" : "AgentCapabilityMismatch",
    "params" : {
      "key" : "params"
    }
  }, {
    "type" : "AgentCapabilityMismatch",
    "params" : {
      "key" : "params"
    }
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter tradeId: (path) The ID of the shift trade to update 
     - parameter body: (body) body 

     - returns: RequestBuilder<MatchShiftTradeResponse> 
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradeMatchWithRequestBuilder(managementUnitId: String, weekDateId: Date, tradeId: String, body: MatchShiftTradeRequest) -> RequestBuilder<MatchShiftTradeResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}/match"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let tradeIdPreEscape = "\(tradeId)"
        let tradeIdPostEscape = tradeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tradeId}", with: tradeIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<MatchShiftTradeResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Adds a shift trade
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWeekShifttrades(managementUnitId: String, weekDateId: Date, body: AddShiftTradeRequest, completion: @escaping ((_ data: ShiftTradeResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWeekShifttradesWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, body: body)
        requestBuilder.execute { (response: Response<ShiftTradeResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Adds a shift trade
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "receivingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
  "receivingShiftId" : "receivingShiftId",
  "receivingUser" : "{}",
  "receivingShiftStart" : "2000-01-23T04:56:07.000+00:00",
  "oneSided" : true,
  "reviewedBy" : "{}",
  "initiatingUser" : "{}",
  "schedule" : "{}",
  "initiatingShiftEnd" : "2000-01-23T04:56:07.000+00:00",
  "acceptableIntervals" : [ "acceptableIntervals", "acceptableIntervals" ],
  "initiatingShiftStart" : "2000-01-23T04:56:07.000+00:00",
  "expiration" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "state" : "Unmatched",
  "weekDate" : "2000-01-23",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "initiatingShiftId" : "initiatingShiftId"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 

     - returns: RequestBuilder<ShiftTradeResponse> 
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradesWithRequestBuilder(managementUnitId: String, weekDateId: Date, body: AddShiftTradeRequest) -> RequestBuilder<ShiftTradeResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShiftTradeResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Searches for potential shift trade matches for the current agent
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId: String, weekDateId: Date, body: SearchShiftTradesRequest, forceDownloadService: Bool? = nil, completion: @escaping ((_ data: SearchShiftTradesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWeekShifttradesSearchWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, body: body, forceDownloadService: forceDownloadService)
        requestBuilder.execute { (response: Response<SearchShiftTradesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Searches for potential shift trade matches for the current agent
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/search
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadUrl" : "downloadUrl",
  "trades" : [ {
    "preview" : "{}",
    "trade" : "{}",
    "matchingReceivingShiftIds" : [ "matchingReceivingShiftIds", "matchingReceivingShiftIds" ]
  }, {
    "preview" : "{}",
    "trade" : "{}",
    "matchingReceivingShiftIds" : [ "matchingReceivingShiftIds", "matchingReceivingShiftIds" ]
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceDownloadService: (query) Force the result of this operation to be sent via download service. For testing/app development purposes (optional)

     - returns: RequestBuilder<SearchShiftTradesResponse> 
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradesSearchWithRequestBuilder(managementUnitId: String, weekDateId: Date, body: SearchShiftTradesRequest, forceDownloadService: Bool? = nil) -> RequestBuilder<SearchShiftTradesResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/search"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceDownloadService": forceDownloadService
        ])

        let requestBuilder: RequestBuilder<SearchShiftTradesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Updates the state of a batch of shift trades
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId: String, weekDateId: Date, body: BulkShiftTradeStateUpdateRequest, forceAsync: Bool? = nil, completion: @escaping ((_ data: BulkUpdateShiftTradeStateResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWeekShifttradesStateBulkWithRequestBuilder(managementUnitId: managementUnitId, weekDateId: weekDateId, body: body, forceAsync: forceAsync)
        requestBuilder.execute { (response: Response<BulkUpdateShiftTradeStateResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Updates the state of a batch of shift trades
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/state/bulk
     - Admin functionality is not supported with \"mine\".
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "result" : "{}",
  "operationId" : "operationId",
  "status" : "Processing"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter weekDateId: (path) The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd 
     - parameter body: (body) body 
     - parameter forceAsync: (query) Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)

     - returns: RequestBuilder<BulkUpdateShiftTradeStateResponse> 
     */
    open class func postWorkforcemanagementManagementunitWeekShifttradesStateBulkWithRequestBuilder(managementUnitId: String, weekDateId: Date, body: BulkShiftTradeStateUpdateRequest, forceAsync: Bool? = nil) -> RequestBuilder<BulkUpdateShiftTradeStateResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/state/bulk"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let weekDateIdPreEscape = "\(weekDateId)"
        let weekDateIdPostEscape = weekDateIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{weekDateId}", with: weekDateIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "forceAsync": forceAsync
        ])

        let requestBuilder: RequestBuilder<BulkUpdateShiftTradeStateResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Create a copy of work plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to create a copy 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWorkplanCopy(managementUnitId: String, workPlanId: String, body: CopyWorkPlan? = nil, completion: @escaping ((_ data: WorkPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWorkplanCopyWithRequestBuilder(managementUnitId: managementUnitId, workPlanId: workPlanId, body: body)
        requestBuilder.execute { (response: Response<WorkPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a copy of work plan
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/copy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "maximumDaysOffPerPlanningPeriod" : 1,
  "minimumPaidMinutesPerPlanningPeriod" : 1,
  "optionalDays" : "{}",
  "metadata" : "{}",
  "flexibleWeeklyPaidTime" : true,
  "shiftStartVariances" : "{}",
  "constrainWeeklyPaidTime" : true,
  "enabled" : true,
  "valid" : true,
  "minimumShiftStartDistanceMinutes" : 4,
  "constrainMaximumConsecutiveWorkingDays" : true,
  "maximumConsecutiveWorkingDays" : 2,
  "constrainMinimumTimeBetweenShifts" : true,
  "shifts" : [ {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  }, {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  } ],
  "weeklyMinimumPaidMinutes" : 6,
  "id" : "id",
  "paidTimeGranularityMinutes" : 5,
  "maximumConsecutiveWorkingWeekends" : 9,
  "weeklyExactPaidMinutes" : 0,
  "shiftStartVarianceType" : "ShiftStart",
  "maximumDays" : 2,
  "minimumWorkingDaysPerWeek" : 3,
  "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
  "selfUri" : "https://openapi-generator.tech",
  "minimumTimeBetweenShiftsMinutes" : 5,
  "constrainPaidTimeGranularity" : true,
  "maximumPaidMinutesPerPlanningPeriod" : 1,
  "agents" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  } ],
  "weeklyMaximumPaidMinutes" : 1,
  "name" : "name",
  "minimumDaysOffPerPlanningPeriod" : 7,
  "constrainMaximumConsecutiveWorkingWeekends" : true,
  "agentCount" : 6
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to create a copy 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlan> 
     */
    open class func postWorkforcemanagementManagementunitWorkplanCopyWithRequestBuilder(managementUnitId: String, workPlanId: String, body: CopyWorkPlan? = nil) -> RequestBuilder<WorkPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/copy"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanIdPreEscape = "\(workPlanId)"
        let workPlanIdPostEscape = workPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanId}", with: workPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    
    /**
     Validate Work Plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to validate. For new work plan, use the word &#39;new&#39; for the ID. 
     - parameter expand: (query)  (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWorkplanValidate(managementUnitId: String, workPlanId: String, expand: [String]? = nil, body: WorkPlanValidationRequest? = nil, completion: @escaping ((_ data: ValidateWorkPlanResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWorkplanValidateWithRequestBuilder(managementUnitId: managementUnitId, workPlanId: workPlanId, expand: expand, body: body)
        requestBuilder.execute { (response: Response<ValidateWorkPlanResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Validate Work Plan
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/validate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "valid" : true,
  "messages" : "{}",
  "workPlan" : "{}"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanId: (path) The ID of the work plan to validate. For new work plan, use the word &#39;new&#39; for the ID. 
     - parameter expand: (query)  (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<ValidateWorkPlanResponse> 
     */
    open class func postWorkforcemanagementManagementunitWorkplanValidateWithRequestBuilder(managementUnitId: String, workPlanId: String, expand: [String]? = nil, body: WorkPlanValidationRequest? = nil) -> RequestBuilder<ValidateWorkPlanResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/validate"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanIdPreEscape = "\(workPlanId)"
        let workPlanIdPostEscape = workPlanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanId}", with: workPlanIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "expand": expand
        ])

        let requestBuilder: RequestBuilder<ValidateWorkPlanResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    
    /**
     Create a copy of work plan rotation
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to create a copy 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId: String, workPlanRotationId: String, body: CopyWorkPlanRotationRequest? = nil, completion: @escaping ((_ data: WorkPlanRotationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWorkplanrotationCopyWithRequestBuilder(managementUnitId: managementUnitId, workPlanRotationId: workPlanRotationId, body: body)
        requestBuilder.execute { (response: Response<WorkPlanRotationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a copy of work plan rotation
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}/copy
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "dateRange" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "pattern" : "{}",
  "id" : "id",
  "agentCount" : 0,
  "enabled" : true,
  "agents" : [ {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  }, {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter workPlanRotationId: (path) The ID of the work plan rotation to create a copy 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlanRotationResponse> 
     */
    open class func postWorkforcemanagementManagementunitWorkplanrotationCopyWithRequestBuilder(managementUnitId: String, workPlanRotationId: String, body: CopyWorkPlanRotationRequest? = nil) -> RequestBuilder<WorkPlanRotationResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}/copy"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let workPlanRotationIdPreEscape = "\(workPlanRotationId)"
        let workPlanRotationIdPostEscape = workPlanRotationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{workPlanRotationId}", with: workPlanRotationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkPlanRotationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Create a new work plan rotation
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWorkplanrotations(managementUnitId: String, body: AddWorkPlanRotationRequest? = nil, completion: @escaping ((_ data: WorkPlanRotationResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWorkplanrotationsWithRequestBuilder(managementUnitId: managementUnitId, body: body)
        requestBuilder.execute { (response: Response<WorkPlanRotationResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new work plan rotation
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "dateRange" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "pattern" : "{}",
  "id" : "id",
  "agentCount" : 0,
  "enabled" : true,
  "agents" : [ {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  }, {
    "dateRange" : "{}",
    "position" : 6,
    "user" : "{}"
  } ]
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlanRotationResponse> 
     */
    open class func postWorkforcemanagementManagementunitWorkplanrotationsWithRequestBuilder(managementUnitId: String, body: AddWorkPlanRotationRequest? = nil) -> RequestBuilder<WorkPlanRotationResponse> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WorkPlanRotationResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    public enum ValidationMode_postWorkforcemanagementManagementunitWorkplans: String { 
        case ignore = "Ignore"
    }

    
    
    /**
     Create a new work plan
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter validationMode: (query) Allows to create work plan even if the validation result is invalid (optional)
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunitWorkplans(managementUnitId: String, validationMode: ValidationMode_postWorkforcemanagementManagementunitWorkplans? = nil, body: CreateWorkPlan? = nil, completion: @escaping ((_ data: WorkPlan?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitWorkplansWithRequestBuilder(managementUnitId: managementUnitId, validationMode: validationMode, body: body)
        requestBuilder.execute { (response: Response<WorkPlan>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a new work plan
     - POST /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "maximumDaysOffPerPlanningPeriod" : 1,
  "minimumPaidMinutesPerPlanningPeriod" : 1,
  "optionalDays" : "{}",
  "metadata" : "{}",
  "flexibleWeeklyPaidTime" : true,
  "shiftStartVariances" : "{}",
  "constrainWeeklyPaidTime" : true,
  "enabled" : true,
  "valid" : true,
  "minimumShiftStartDistanceMinutes" : 4,
  "constrainMaximumConsecutiveWorkingDays" : true,
  "maximumConsecutiveWorkingDays" : 2,
  "constrainMinimumTimeBetweenShifts" : true,
  "shifts" : [ {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  }, {
    "validationId" : "validationId",
    "maximumContiguousWorkTimeMinutes" : 6,
    "constrainDayOff" : true,
    "flexiblePaidTime" : true,
    "delete" : true,
    "constrainStopTime" : true,
    "latestStopTimeMinutesFromMidnight" : 4,
    "id" : "id",
    "constrainEarliestStopTime" : true,
    "exactStartTimeMinutesFromMidnight" : 6,
    "dayOffRule" : "NextDayOff",
    "startIncrementMinutes" : 9,
    "constrainContiguousWorkTime" : true,
    "constrainLatestStopTime" : true,
    "latestStartTimeMinutesFromMidnight" : 1,
    "earliestStopTimeMinutesFromMidnight" : 5,
    "activities" : [ {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    }, {
      "startTimeIncrementMinutes" : 6,
      "validationId" : "validationId",
      "lengthMinutes" : 3,
      "earliestStartTimeMinutes" : 6,
      "description" : "description",
      "latestStartTimeMinutes" : 1,
      "countsAsPaidTime" : true,
      "delete" : true,
      "activityCodeId" : "activityCodeId",
      "minimumLengthFromShiftStartMinutes" : 6,
      "startTimeIsRelativeToShiftStart" : true,
      "minimumLengthFromShiftEndMinutes" : 5,
      "exactStartTimeMinutes" : 2,
      "countsAsContiguousWorkTime" : true,
      "id" : "id",
      "flexibleStartTime" : true
    } ],
    "maximumPaidTimeMinutes" : 8,
    "name" : "name",
    "days" : "{}",
    "minimumContiguousWorkTimeMinutes" : 9,
    "exactPaidTimeMinutes" : 9,
    "earliestStartTimeMinutesFromMidnight" : 7,
    "flexibleStartTime" : true,
    "minimumPaidTimeMinutes" : 6
  } ],
  "weeklyMinimumPaidMinutes" : 6,
  "id" : "id",
  "paidTimeGranularityMinutes" : 5,
  "maximumConsecutiveWorkingWeekends" : 9,
  "weeklyExactPaidMinutes" : 0,
  "shiftStartVarianceType" : "ShiftStart",
  "maximumDays" : 2,
  "minimumWorkingDaysPerWeek" : 3,
  "minimumConsecutiveNonWorkingMinutesPerWeek" : 7,
  "selfUri" : "https://openapi-generator.tech",
  "minimumTimeBetweenShiftsMinutes" : 5,
  "constrainPaidTimeGranularity" : true,
  "maximumPaidMinutesPerPlanningPeriod" : 1,
  "agents" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "delete" : true
  } ],
  "weeklyMaximumPaidMinutes" : 1,
  "name" : "name",
  "minimumDaysOffPerPlanningPeriod" : 7,
  "constrainMaximumConsecutiveWorkingWeekends" : true,
  "agentCount" : 6
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit, or &#39;mine&#39; for the management unit of the logged-in user. 
     - parameter validationMode: (query) Allows to create work plan even if the validation result is invalid (optional)
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WorkPlan> 
     */
    open class func postWorkforcemanagementManagementunitWorkplansWithRequestBuilder(managementUnitId: String, validationMode: ValidationMode_postWorkforcemanagementManagementunitWorkplans? = nil, body: CreateWorkPlan? = nil) -> RequestBuilder<WorkPlan> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "validationMode": validationMode?.rawValue
        ])

        let requestBuilder: RequestBuilder<WorkPlan>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Add a management unit
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementManagementunits(body: CreateManagementUnitApiRequest? = nil, completion: @escaping ((_ data: ManagementUnit?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementManagementunitsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<ManagementUnit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Add a management unit
     - POST /api/v2/workforcemanagement/managementunits
     - It may take a minute or two for a new management unit to be available for api operations
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "startDayOfWeek" : "Sunday",
  "division" : "{}",
  "settings" : "{}",
  "metadata" : "{}",
  "businessUnit" : "{}",
  "selfUri" : "https://openapi-generator.tech",
  "name" : "name",
  "timeZone" : "timeZone",
  "modifiedBy" : "{}",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "version" : 0
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<ManagementUnit> 
     */
    open class func postWorkforcemanagementManagementunitsWithRequestBuilder(body: CreateManagementUnitApiRequest? = nil) -> RequestBuilder<ManagementUnit> {        
        let path = "/api/v2/workforcemanagement/managementunits"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ManagementUnit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Mark a list of notifications as read or unread
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementNotificationsUpdate(body: UpdateNotificationsRequest? = nil, completion: @escaping ((_ data: UpdateNotificationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementNotificationsUpdateWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<UpdateNotificationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Mark a list of notifications as read or unread
     - POST /api/v2/workforcemanagement/notifications/update
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "mutableGroupId" : "mutableGroupId",
    "id" : "id"
  }, {
    "mutableGroupId" : "mutableGroupId",
    "id" : "id"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<UpdateNotificationsResponse> 
     */
    open class func postWorkforcemanagementNotificationsUpdateWithRequestBuilder(body: UpdateNotificationsRequest? = nil) -> RequestBuilder<UpdateNotificationsResponse> {        
        let path = "/api/v2/workforcemanagement/notifications/update"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UpdateNotificationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Get published schedule for the current user
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementSchedules(body: CurrentUserScheduleRequestBody? = nil, completion: @escaping ((_ data: UserScheduleContainer?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementSchedulesWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<UserScheduleContainer>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get published schedule for the current user
     - POST /api/v2/workforcemanagement/schedules
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "managementUnitTimeZone" : "managementUnitTimeZone",
  "publishedSchedules" : [ {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "weekDate"
  }, {
    "selfUri" : "https://openapi-generator.tech",
    "id" : "id",
    "weekDate" : "weekDate"
  } ],
  "userSchedules" : {
    "key" : {
      "fullDayTimeOffMarkers" : [ {
        "activityCodeId" : "activityCodeId",
        "isPaid" : true,
        "lengthInMinutes" : 1,
        "description" : "description",
        "managementUnitDate" : "managementUnitDate",
        "delete" : true
      }, {
        "activityCodeId" : "activityCodeId",
        "isPaid" : true,
        "lengthInMinutes" : 1,
        "description" : "description",
        "managementUnitDate" : "managementUnitDate",
        "delete" : true
      } ],
      "metadata" : "{}",
      "workPlanId" : "workPlanId",
      "shifts" : [ {
        "lengthInMinutes" : 0,
        "activities" : [ {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        }, {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        } ],
        "weekSchedule" : "{}",
        "id" : "id",
        "delete" : true,
        "startDate" : "2000-01-23T04:56:07.000+00:00",
        "manuallyEdited" : true
      }, {
        "lengthInMinutes" : 0,
        "activities" : [ {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        }, {
          "activityCodeId" : "activityCodeId",
          "lengthInMinutes" : 6,
          "timeOffRequestId" : "timeOffRequestId",
          "description" : "description",
          "isDstFallback" : true,
          "countsAsPaidTime" : true,
          "startDate" : "2000-01-23T04:56:07.000+00:00"
        } ],
        "weekSchedule" : "{}",
        "id" : "id",
        "delete" : true,
        "startDate" : "2000-01-23T04:56:07.000+00:00",
        "manuallyEdited" : true
      } ],
      "delete" : true
    }
  }
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<UserScheduleContainer> 
     */
    open class func postWorkforcemanagementSchedulesWithRequestBuilder(body: CurrentUserScheduleRequestBody? = nil) -> RequestBuilder<UserScheduleContainer> {        
        let path = "/api/v2/workforcemanagement/schedules"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UserScheduleContainer>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Request a teams historical adherence report
     
     - parameter teamId: (path) The ID of the team 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTeamAdherenceHistorical(teamId: String, body: WfmHistoricalAdherenceQueryForTeams? = nil, completion: @escaping ((_ data: WfmHistoricalAdherenceResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTeamAdherenceHistoricalWithRequestBuilder(teamId: teamId, body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalAdherenceResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a teams historical adherence report
     - POST /api/v2/workforcemanagement/teams/{teamId}/adherence/historical
     - The maximum supported range for historical adherence queries is 31 days, or 7 days with includeExceptions = true
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "downloadUrl" : "downloadUrl",
  "queryState" : "Processing",
  "id" : "id"
}, statusCode=202}]
     
     - parameter teamId: (path) The ID of the team 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalAdherenceResponse> 
     */
    open class func postWorkforcemanagementTeamAdherenceHistoricalWithRequestBuilder(teamId: String, body: WfmHistoricalAdherenceQueryForTeams? = nil) -> RequestBuilder<WfmHistoricalAdherenceResponse> {        
        var path = "/api/v2/workforcemanagement/teams/{teamId}/adherence/historical"
        let teamIdPreEscape = "\(teamId)"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{teamId}", with: teamIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalAdherenceResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Request a historical shrinkage report
     
     - parameter teamId: (path) The ID of the team 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTeamShrinkageJobs(teamId: String, body: WfmHistoricalShrinkageTeamsRequest? = nil, completion: @escaping ((_ data: WfmHistoricalShrinkageResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTeamShrinkageJobsWithRequestBuilder(teamId: teamId, body: body)
        requestBuilder.execute { (response: Response<WfmHistoricalShrinkageResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Request a historical shrinkage report
     - POST /api/v2/workforcemanagement/teams/{teamId}/shrinkage/jobs
     - The maximum supported range for historical shrinkage queries is up to 32 days
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "downloadResult" : "{}",
  "downloadUrls" : [ "downloadUrls", "downloadUrls" ],
  "operationId" : "operationId",
  "state" : "Processing"
}, statusCode=202}]
     
     - parameter teamId: (path) The ID of the team 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<WfmHistoricalShrinkageResponse> 
     */
    open class func postWorkforcemanagementTeamShrinkageJobsWithRequestBuilder(teamId: String, body: WfmHistoricalShrinkageTeamsRequest? = nil) -> RequestBuilder<WfmHistoricalShrinkageResponse> {        
        var path = "/api/v2/workforcemanagement/teams/{teamId}/shrinkage/jobs"
        let teamIdPreEscape = "\(teamId)"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{teamId}", with: teamIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WfmHistoricalShrinkageResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Query time off balances for the current user for specified activity code and dates
     
     - parameter body: (body) The request body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTimeoffbalanceJobs(body: TimeOffBalanceRequest, completion: @escaping ((_ data: TimeOffBalancesResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTimeoffbalanceJobsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<TimeOffBalancesResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Query time off balances for the current user for specified activity code and dates
     - POST /api/v2/workforcemanagement/timeoffbalance/jobs
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  }, {
    "activityCodeId" : "activityCodeId",
    "hrisTimeOffTypeId" : "hrisTimeOffTypeId",
    "hrisTimeOffTypeSecondaryId" : "hrisTimeOffTypeSecondaryId",
    "startDate" : "2000-01-23",
    "balanceMinutesPerDay" : [ 0, 0 ]
  } ],
  "job" : "{}"
}, statusCode=200}]
     
     - parameter body: (body) The request body 

     - returns: RequestBuilder<TimeOffBalancesResponse> 
     */
    open class func postWorkforcemanagementTimeoffbalanceJobsWithRequestBuilder(body: TimeOffBalanceRequest) -> RequestBuilder<TimeOffBalancesResponse> {        
        let path = "/api/v2/workforcemanagement/timeoffbalance/jobs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffBalancesResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Queries available time off for the current user
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTimeofflimitsAvailableQuery(body: AvailableTimeOffRequest? = nil, completion: @escaping ((_ data: AvailableTimeOffResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTimeofflimitsAvailableQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<AvailableTimeOffResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Queries available time off for the current user
     - POST /api/v2/workforcemanagement/timeofflimits/available/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "values" : [ {
    "timeOffLimit" : "{}",
    "availableMinutesPerInterval" : [ 0, 0 ],
    "waitlistEnabled" : true,
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 6, 6 ],
    "startDate" : "2000-01-23"
  }, {
    "timeOffLimit" : "{}",
    "availableMinutesPerInterval" : [ 0, 0 ],
    "waitlistEnabled" : true,
    "granularity" : "Daily",
    "waitlistedRequestsPerInterval" : [ 6, 6 ],
    "startDate" : "2000-01-23"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<AvailableTimeOffResponse> 
     */
    open class func postWorkforcemanagementTimeofflimitsAvailableQueryWithRequestBuilder(body: AvailableTimeOffRequest? = nil) -> RequestBuilder<AvailableTimeOffResponse> {        
        let path = "/api/v2/workforcemanagement/timeofflimits/available/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AvailableTimeOffResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Create a time off request for the current user
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTimeoffrequests(body: CreateAgentTimeOffRequest? = nil, completion: @escaping ((_ data: TimeOffRequestResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTimeoffrequestsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<TimeOffRequestResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a time off request for the current user
     - POST /api/v2/workforcemanagement/timeoffrequests
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "syncVersion" : 5,
  "metadata" : "{}",
  "notes" : "notes",
  "substatus" : "AdvanceTimeElapsed",
  "selfUri" : "https://openapi-generator.tech",
  "fullDayManagementUnitDates" : [ "fullDayManagementUnitDates", "fullDayManagementUnitDates" ],
  "partialDayStartDateTimes" : [ "2000-01-23T04:56:07.000+00:00", "2000-01-23T04:56:07.000+00:00" ],
  "payableMinutes" : [ 1, 1 ],
  "submittedDate" : "2000-01-23T04:56:07.000+00:00",
  "reviewedBy" : "{}",
  "activityCodeId" : "activityCodeId",
  "durationMinutes" : [ 6, 6 ],
  "isFullDayRequest" : true,
  "markedAsRead" : true,
  "dailyDurationMinutes" : 0,
  "paid" : true,
  "modifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "{}",
  "id" : "id",
  "reviewedDate" : "2000-01-23T04:56:07.000+00:00",
  "user" : "{}",
  "status" : "PENDING"
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffRequestResponse> 
     */
    open class func postWorkforcemanagementTimeoffrequestsWithRequestBuilder(body: CreateAgentTimeOffRequest? = nil) -> RequestBuilder<TimeOffRequestResponse> {        
        let path = "/api/v2/workforcemanagement/timeoffrequests"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffRequestResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Estimates available time off for current user
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTimeoffrequestsEstimate(body: EstimateAvailableTimeOffRequest? = nil, completion: @escaping ((_ data: EstimateAvailableTimeOffResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTimeoffrequestsEstimateWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<EstimateAvailableTimeOffResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Estimates available time off for current user
     - POST /api/v2/workforcemanagement/timeoffrequests/estimate
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "activityCodeId" : "activityCodeId",
  "fullDayDates" : [ {
    "date" : "2000-01-23",
    "durationMinutes" : 0,
    "flexible" : true,
    "payableMinutes" : 6
  }, {
    "date" : "2000-01-23",
    "durationMinutes" : 0,
    "flexible" : true,
    "payableMinutes" : 6
  } ],
  "partialDayDates" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "durationMinutes" : 1,
    "flexible" : true,
    "payableMinutes" : 5
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "durationMinutes" : 1,
    "flexible" : true,
    "payableMinutes" : 5
  } ],
  "paid" : true,
  "user" : "{}"
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<EstimateAvailableTimeOffResponse> 
     */
    open class func postWorkforcemanagementTimeoffrequestsEstimateWithRequestBuilder(body: EstimateAvailableTimeOffRequest? = nil) -> RequestBuilder<EstimateAvailableTimeOffResponse> {        
        let path = "/api/v2/workforcemanagement/timeoffrequests/estimate"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EstimateAvailableTimeOffResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    /**
     Retrieves integration statuses for a list of current user time off requests
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postWorkforcemanagementTimeoffrequestsIntegrationstatusQuery(body: CurrentUserTimeOffIntegrationStatusRequest? = nil, completion: @escaping ((_ data: TimeOffIntegrationStatusResponseListing?,_ error: Error?) -> Void)) {
        let requestBuilder = postWorkforcemanagementTimeoffrequestsIntegrationstatusQueryWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<TimeOffIntegrationStatusResponseListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves integration statuses for a list of current user time off requests
     - POST /api/v2/workforcemanagement/timeoffrequests/integrationstatus/query
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "entities" : [ {
    "timeOffRequest" : "{}",
    "integrationStatus" : "Processing"
  }, {
    "timeOffRequest" : "{}",
    "integrationStatus" : "Processing"
  } ]
}, statusCode=200}]
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffIntegrationStatusResponseListing> 
     */
    open class func postWorkforcemanagementTimeoffrequestsIntegrationstatusQueryWithRequestBuilder(body: CurrentUserTimeOffIntegrationStatusRequest? = nil) -> RequestBuilder<TimeOffIntegrationStatusResponseListing> {        
        let path = "/api/v2/workforcemanagement/timeoffrequests/integrationstatus/query"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffIntegrationStatusResponseListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

    
    
    /**
     Update integrations for agent
     
     - parameter agentId: (path) The ID of the agent 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putWorkforcemanagementAgentIntegrationsHris(agentId: String, body: AgentIntegrationsRequest, completion: @escaping ((_ data: AgentIntegrationsResponse?,_ error: Error?) -> Void)) {
        let requestBuilder = putWorkforcemanagementAgentIntegrationsHrisWithRequestBuilder(agentId: agentId, body: body)
        requestBuilder.execute { (response: Response<AgentIntegrationsResponse>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update integrations for agent
     - PUT /api/v2/workforcemanagement/agents/{agentId}/integrations/hris
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "agent" : "{}",
  "userSelected" : true,
  "selectedIntegration" : "{}",
  "associatedIntegrations" : [ {
    "agentExternalId" : "agentExternalId",
    "integration" : "{}",
    "locked" : true
  }, {
    "agentExternalId" : "agentExternalId",
    "integration" : "{}",
    "locked" : true
  } ]
}, statusCode=200}]
     
     - parameter agentId: (path) The ID of the agent 
     - parameter body: (body) body 

     - returns: RequestBuilder<AgentIntegrationsResponse> 
     */
    open class func putWorkforcemanagementAgentIntegrationsHrisWithRequestBuilder(agentId: String, body: AgentIntegrationsRequest) -> RequestBuilder<AgentIntegrationsResponse> {        
        var path = "/api/v2/workforcemanagement/agents/{agentId}/integrations/hris"
        let agentIdPreEscape = "\(agentId)"
        let agentIdPostEscape = agentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{agentId}", with: agentIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AgentIntegrationsResponse>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

    
    
    
    /**
     Sets daily values for a date range of time off limit object
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit object to set values for 
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId: String, timeOffLimitId: String, body: SetTimeOffLimitValuesRequest? = nil, completion: @escaping ((_ data: TimeOffLimit?,_ error: Error?) -> Void)) {
        let requestBuilder = putWorkforcemanagementManagementunitTimeofflimitValuesWithRequestBuilder(managementUnitId: managementUnitId, timeOffLimitId: timeOffLimitId, body: body)
        requestBuilder.execute { (response: Response<TimeOffLimit>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Sets daily values for a date range of time off limit object
     - PUT /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}/values
     - Note that only limit daily values can be set through API, allocated and waitlisted values are read-only for time off limit API
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "metadata" : "{}",
  "granularity" : "Daily",
  "defaultLimitMinutes" : 0,
  "selfUri" : "https://openapi-generator.tech",
  "id" : "id"
}, statusCode=200}]
     
     - parameter managementUnitId: (path) The ID of the management unit. 
     - parameter timeOffLimitId: (path) The ID of the time off limit object to set values for 
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<TimeOffLimit> 
     */
    open class func putWorkforcemanagementManagementunitTimeofflimitValuesWithRequestBuilder(managementUnitId: String, timeOffLimitId: String, body: SetTimeOffLimitValuesRequest? = nil) -> RequestBuilder<TimeOffLimit> {        
        var path = "/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}/values"
        let managementUnitIdPreEscape = "\(managementUnitId)"
        let managementUnitIdPostEscape = managementUnitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managementUnitId}", with: managementUnitIdPostEscape, options: .literal, range: nil)
        let timeOffLimitIdPreEscape = "\(timeOffLimitId)"
        let timeOffLimitIdPostEscape = timeOffLimitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{timeOffLimitId}", with: timeOffLimitIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TimeOffLimit>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: url!, body: body)
    }

}
