// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> Any
}

public enum ErrorResponse : Error {
    case error(Int, Data?, Error)
}

open class Response<T> {
    public var statusCode: Int
    public var header: [String: String]
    public var data: Data?
    public var body: T?

    public init(statusCode: Int, header: [String: String], data: Data?, body: T?) {
        self.statusCode = statusCode
        self.header = header
        self.data = data
        self.body = body
    }

    public convenience init(response: HTTPURLResponse, body: T?, data: Data?) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for case let (key, value) as (String, String) in rawHeader {
            header[key] = value
        }
        self.init(statusCode: response.statusCode, header: header, data: data, body: body)
    }
}
